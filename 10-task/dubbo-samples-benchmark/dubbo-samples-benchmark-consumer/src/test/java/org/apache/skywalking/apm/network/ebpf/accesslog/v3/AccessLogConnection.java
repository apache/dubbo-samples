// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/accesslog.proto

package org.apache.skywalking.apm.network.ebpf.accesslog.v3;

/**
 * <pre>
 * Connection information
 * </pre>
 *
 * Protobuf type {@code skywalking.v3.AccessLogConnection}
 */
public final class AccessLogConnection extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.AccessLogConnection)
    AccessLogConnectionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AccessLogConnection.newBuilder() to construct.
  private AccessLogConnection(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AccessLogConnection() {
    role_ = 0;
    tlsMode_ = 0;
    protocol_ = 0;
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new AccessLogConnection();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AccessLogConnection(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            ConnectionAddress.Builder subBuilder = null;
            if (local_ != null) {
              subBuilder = local_.toBuilder();
            }
            local_ = input.readMessage(ConnectionAddress.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(local_);
              local_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            ConnectionAddress.Builder subBuilder = null;
            if (remote_ != null) {
              subBuilder = remote_.toBuilder();
            }
            remote_ = input.readMessage(ConnectionAddress.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(remote_);
              remote_ = subBuilder.buildPartial();
            }

            break;
          }
          case 24: {
            int rawValue = input.readEnum();

            role_ = rawValue;
            break;
          }
          case 32: {
            int rawValue = input.readEnum();

            tlsMode_ = rawValue;
            break;
          }
          case 40: {
            int rawValue = input.readEnum();

            protocol_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Accesslog.internal_static_skywalking_v3_AccessLogConnection_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Accesslog.internal_static_skywalking_v3_AccessLogConnection_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            AccessLogConnection.class, Builder.class);
  }

  public static final int LOCAL_FIELD_NUMBER = 1;
  private ConnectionAddress local_;
  /**
   * <pre>
   * local address
   * </pre>
   *
   * <code>.skywalking.v3.ConnectionAddress local = 1;</code>
   * @return Whether the local field is set.
   */
  @Override
  public boolean hasLocal() {
    return local_ != null;
  }
  /**
   * <pre>
   * local address
   * </pre>
   *
   * <code>.skywalking.v3.ConnectionAddress local = 1;</code>
   * @return The local.
   */
  @Override
  public ConnectionAddress getLocal() {
    return local_ == null ? ConnectionAddress.getDefaultInstance() : local_;
  }
  /**
   * <pre>
   * local address
   * </pre>
   *
   * <code>.skywalking.v3.ConnectionAddress local = 1;</code>
   */
  @Override
  public ConnectionAddressOrBuilder getLocalOrBuilder() {
    return getLocal();
  }

  public static final int REMOTE_FIELD_NUMBER = 2;
  private ConnectionAddress remote_;
  /**
   * <pre>
   * remote/peer address
   * </pre>
   *
   * <code>.skywalking.v3.ConnectionAddress remote = 2;</code>
   * @return Whether the remote field is set.
   */
  @Override
  public boolean hasRemote() {
    return remote_ != null;
  }
  /**
   * <pre>
   * remote/peer address
   * </pre>
   *
   * <code>.skywalking.v3.ConnectionAddress remote = 2;</code>
   * @return The remote.
   */
  @Override
  public ConnectionAddress getRemote() {
    return remote_ == null ? ConnectionAddress.getDefaultInstance() : remote_;
  }
  /**
   * <pre>
   * remote/peer address
   * </pre>
   *
   * <code>.skywalking.v3.ConnectionAddress remote = 2;</code>
   */
  @Override
  public ConnectionAddressOrBuilder getRemoteOrBuilder() {
    return getRemote();
  }

  public static final int ROLE_FIELD_NUMBER = 3;
  private int role_;
  /**
   * <pre>
   * local address detect point
   * </pre>
   *
   * <code>.skywalking.v3.DetectPoint role = 3;</code>
   * @return The enum numeric value on the wire for role.
   */
  @Override public int getRoleValue() {
    return role_;
  }
  /**
   * <pre>
   * local address detect point
   * </pre>
   *
   * <code>.skywalking.v3.DetectPoint role = 3;</code>
   * @return The role.
   */
  @Override public org.apache.skywalking.apm.network.common.v3.DetectPoint getRole() {
    @SuppressWarnings("deprecation")
    org.apache.skywalking.apm.network.common.v3.DetectPoint result = org.apache.skywalking.apm.network.common.v3.DetectPoint.valueOf(role_);
    return result == null ? org.apache.skywalking.apm.network.common.v3.DetectPoint.UNRECOGNIZED : result;
  }

  public static final int TLSMODE_FIELD_NUMBER = 4;
  private int tlsMode_;
  /**
   * <pre>
   * is the connection using TLS or not
   * </pre>
   *
   * <code>.skywalking.v3.AccessLogConnectionTLSMode tlsMode = 4;</code>
   * @return The enum numeric value on the wire for tlsMode.
   */
  @Override public int getTlsModeValue() {
    return tlsMode_;
  }
  /**
   * <pre>
   * is the connection using TLS or not
   * </pre>
   *
   * <code>.skywalking.v3.AccessLogConnectionTLSMode tlsMode = 4;</code>
   * @return The tlsMode.
   */
  @Override public AccessLogConnectionTLSMode getTlsMode() {
    @SuppressWarnings("deprecation")
    AccessLogConnectionTLSMode result = AccessLogConnectionTLSMode.valueOf(tlsMode_);
    return result == null ? AccessLogConnectionTLSMode.UNRECOGNIZED : result;
  }

  public static final int PROTOCOL_FIELD_NUMBER = 5;
  private int protocol_;
  /**
   * <pre>
   * application protocol type
   * </pre>
   *
   * <code>.skywalking.v3.AccessLogProtocolType protocol = 5;</code>
   * @return The enum numeric value on the wire for protocol.
   */
  @Override public int getProtocolValue() {
    return protocol_;
  }
  /**
   * <pre>
   * application protocol type
   * </pre>
   *
   * <code>.skywalking.v3.AccessLogProtocolType protocol = 5;</code>
   * @return The protocol.
   */
  @Override public AccessLogProtocolType getProtocol() {
    @SuppressWarnings("deprecation")
    AccessLogProtocolType result = AccessLogProtocolType.valueOf(protocol_);
    return result == null ? AccessLogProtocolType.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (local_ != null) {
      output.writeMessage(1, getLocal());
    }
    if (remote_ != null) {
      output.writeMessage(2, getRemote());
    }
    if (role_ != org.apache.skywalking.apm.network.common.v3.DetectPoint.client.getNumber()) {
      output.writeEnum(3, role_);
    }
    if (tlsMode_ != AccessLogConnectionTLSMode.Plain.getNumber()) {
      output.writeEnum(4, tlsMode_);
    }
    if (protocol_ != AccessLogProtocolType.TCP.getNumber()) {
      output.writeEnum(5, protocol_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (local_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getLocal());
    }
    if (remote_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getRemote());
    }
    if (role_ != org.apache.skywalking.apm.network.common.v3.DetectPoint.client.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, role_);
    }
    if (tlsMode_ != AccessLogConnectionTLSMode.Plain.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, tlsMode_);
    }
    if (protocol_ != AccessLogProtocolType.TCP.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(5, protocol_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof AccessLogConnection)) {
      return super.equals(obj);
    }
    AccessLogConnection other = (AccessLogConnection) obj;

    if (hasLocal() != other.hasLocal()) return false;
    if (hasLocal()) {
      if (!getLocal()
          .equals(other.getLocal())) return false;
    }
    if (hasRemote() != other.hasRemote()) return false;
    if (hasRemote()) {
      if (!getRemote()
          .equals(other.getRemote())) return false;
    }
    if (role_ != other.role_) return false;
    if (tlsMode_ != other.tlsMode_) return false;
    if (protocol_ != other.protocol_) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasLocal()) {
      hash = (37 * hash) + LOCAL_FIELD_NUMBER;
      hash = (53 * hash) + getLocal().hashCode();
    }
    if (hasRemote()) {
      hash = (37 * hash) + REMOTE_FIELD_NUMBER;
      hash = (53 * hash) + getRemote().hashCode();
    }
    hash = (37 * hash) + ROLE_FIELD_NUMBER;
    hash = (53 * hash) + role_;
    hash = (37 * hash) + TLSMODE_FIELD_NUMBER;
    hash = (53 * hash) + tlsMode_;
    hash = (37 * hash) + PROTOCOL_FIELD_NUMBER;
    hash = (53 * hash) + protocol_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static AccessLogConnection parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AccessLogConnection parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AccessLogConnection parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AccessLogConnection parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AccessLogConnection parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AccessLogConnection parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AccessLogConnection parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static AccessLogConnection parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static AccessLogConnection parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static AccessLogConnection parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static AccessLogConnection parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static AccessLogConnection parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(AccessLogConnection prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Connection information
   * </pre>
   *
   * Protobuf type {@code skywalking.v3.AccessLogConnection}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.AccessLogConnection)
      AccessLogConnectionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Accesslog.internal_static_skywalking_v3_AccessLogConnection_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Accesslog.internal_static_skywalking_v3_AccessLogConnection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              AccessLogConnection.class, Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.ebpf.accesslog.v3.AccessLogConnection.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      if (localBuilder_ == null) {
        local_ = null;
      } else {
        local_ = null;
        localBuilder_ = null;
      }
      if (remoteBuilder_ == null) {
        remote_ = null;
      } else {
        remote_ = null;
        remoteBuilder_ = null;
      }
      role_ = 0;

      tlsMode_ = 0;

      protocol_ = 0;

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Accesslog.internal_static_skywalking_v3_AccessLogConnection_descriptor;
    }

    @Override
    public AccessLogConnection getDefaultInstanceForType() {
      return AccessLogConnection.getDefaultInstance();
    }

    @Override
    public AccessLogConnection build() {
      AccessLogConnection result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public AccessLogConnection buildPartial() {
      AccessLogConnection result = new AccessLogConnection(this);
      if (localBuilder_ == null) {
        result.local_ = local_;
      } else {
        result.local_ = localBuilder_.build();
      }
      if (remoteBuilder_ == null) {
        result.remote_ = remote_;
      } else {
        result.remote_ = remoteBuilder_.build();
      }
      result.role_ = role_;
      result.tlsMode_ = tlsMode_;
      result.protocol_ = protocol_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof AccessLogConnection) {
        return mergeFrom((AccessLogConnection)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(AccessLogConnection other) {
      if (other == AccessLogConnection.getDefaultInstance()) return this;
      if (other.hasLocal()) {
        mergeLocal(other.getLocal());
      }
      if (other.hasRemote()) {
        mergeRemote(other.getRemote());
      }
      if (other.role_ != 0) {
        setRoleValue(other.getRoleValue());
      }
      if (other.tlsMode_ != 0) {
        setTlsModeValue(other.getTlsModeValue());
      }
      if (other.protocol_ != 0) {
        setProtocolValue(other.getProtocolValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      AccessLogConnection parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (AccessLogConnection) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private ConnectionAddress local_;
    private com.google.protobuf.SingleFieldBuilderV3<
        ConnectionAddress, ConnectionAddress.Builder, ConnectionAddressOrBuilder> localBuilder_;
    /**
     * <pre>
     * local address
     * </pre>
     *
     * <code>.skywalking.v3.ConnectionAddress local = 1;</code>
     * @return Whether the local field is set.
     */
    public boolean hasLocal() {
      return localBuilder_ != null || local_ != null;
    }
    /**
     * <pre>
     * local address
     * </pre>
     *
     * <code>.skywalking.v3.ConnectionAddress local = 1;</code>
     * @return The local.
     */
    public ConnectionAddress getLocal() {
      if (localBuilder_ == null) {
        return local_ == null ? ConnectionAddress.getDefaultInstance() : local_;
      } else {
        return localBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * local address
     * </pre>
     *
     * <code>.skywalking.v3.ConnectionAddress local = 1;</code>
     */
    public Builder setLocal(ConnectionAddress value) {
      if (localBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        local_ = value;
        onChanged();
      } else {
        localBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * local address
     * </pre>
     *
     * <code>.skywalking.v3.ConnectionAddress local = 1;</code>
     */
    public Builder setLocal(
        ConnectionAddress.Builder builderForValue) {
      if (localBuilder_ == null) {
        local_ = builderForValue.build();
        onChanged();
      } else {
        localBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * local address
     * </pre>
     *
     * <code>.skywalking.v3.ConnectionAddress local = 1;</code>
     */
    public Builder mergeLocal(ConnectionAddress value) {
      if (localBuilder_ == null) {
        if (local_ != null) {
          local_ =
            ConnectionAddress.newBuilder(local_).mergeFrom(value).buildPartial();
        } else {
          local_ = value;
        }
        onChanged();
      } else {
        localBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * local address
     * </pre>
     *
     * <code>.skywalking.v3.ConnectionAddress local = 1;</code>
     */
    public Builder clearLocal() {
      if (localBuilder_ == null) {
        local_ = null;
        onChanged();
      } else {
        local_ = null;
        localBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * local address
     * </pre>
     *
     * <code>.skywalking.v3.ConnectionAddress local = 1;</code>
     */
    public ConnectionAddress.Builder getLocalBuilder() {

      onChanged();
      return getLocalFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * local address
     * </pre>
     *
     * <code>.skywalking.v3.ConnectionAddress local = 1;</code>
     */
    public ConnectionAddressOrBuilder getLocalOrBuilder() {
      if (localBuilder_ != null) {
        return localBuilder_.getMessageOrBuilder();
      } else {
        return local_ == null ?
            ConnectionAddress.getDefaultInstance() : local_;
      }
    }
    /**
     * <pre>
     * local address
     * </pre>
     *
     * <code>.skywalking.v3.ConnectionAddress local = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ConnectionAddress, ConnectionAddress.Builder, ConnectionAddressOrBuilder>
        getLocalFieldBuilder() {
      if (localBuilder_ == null) {
        localBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ConnectionAddress, ConnectionAddress.Builder, ConnectionAddressOrBuilder>(
                getLocal(),
                getParentForChildren(),
                isClean());
        local_ = null;
      }
      return localBuilder_;
    }

    private ConnectionAddress remote_;
    private com.google.protobuf.SingleFieldBuilderV3<
        ConnectionAddress, ConnectionAddress.Builder, ConnectionAddressOrBuilder> remoteBuilder_;
    /**
     * <pre>
     * remote/peer address
     * </pre>
     *
     * <code>.skywalking.v3.ConnectionAddress remote = 2;</code>
     * @return Whether the remote field is set.
     */
    public boolean hasRemote() {
      return remoteBuilder_ != null || remote_ != null;
    }
    /**
     * <pre>
     * remote/peer address
     * </pre>
     *
     * <code>.skywalking.v3.ConnectionAddress remote = 2;</code>
     * @return The remote.
     */
    public ConnectionAddress getRemote() {
      if (remoteBuilder_ == null) {
        return remote_ == null ? ConnectionAddress.getDefaultInstance() : remote_;
      } else {
        return remoteBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * remote/peer address
     * </pre>
     *
     * <code>.skywalking.v3.ConnectionAddress remote = 2;</code>
     */
    public Builder setRemote(ConnectionAddress value) {
      if (remoteBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        remote_ = value;
        onChanged();
      } else {
        remoteBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * remote/peer address
     * </pre>
     *
     * <code>.skywalking.v3.ConnectionAddress remote = 2;</code>
     */
    public Builder setRemote(
        ConnectionAddress.Builder builderForValue) {
      if (remoteBuilder_ == null) {
        remote_ = builderForValue.build();
        onChanged();
      } else {
        remoteBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * remote/peer address
     * </pre>
     *
     * <code>.skywalking.v3.ConnectionAddress remote = 2;</code>
     */
    public Builder mergeRemote(ConnectionAddress value) {
      if (remoteBuilder_ == null) {
        if (remote_ != null) {
          remote_ =
            ConnectionAddress.newBuilder(remote_).mergeFrom(value).buildPartial();
        } else {
          remote_ = value;
        }
        onChanged();
      } else {
        remoteBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * remote/peer address
     * </pre>
     *
     * <code>.skywalking.v3.ConnectionAddress remote = 2;</code>
     */
    public Builder clearRemote() {
      if (remoteBuilder_ == null) {
        remote_ = null;
        onChanged();
      } else {
        remote_ = null;
        remoteBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * remote/peer address
     * </pre>
     *
     * <code>.skywalking.v3.ConnectionAddress remote = 2;</code>
     */
    public ConnectionAddress.Builder getRemoteBuilder() {

      onChanged();
      return getRemoteFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * remote/peer address
     * </pre>
     *
     * <code>.skywalking.v3.ConnectionAddress remote = 2;</code>
     */
    public ConnectionAddressOrBuilder getRemoteOrBuilder() {
      if (remoteBuilder_ != null) {
        return remoteBuilder_.getMessageOrBuilder();
      } else {
        return remote_ == null ?
            ConnectionAddress.getDefaultInstance() : remote_;
      }
    }
    /**
     * <pre>
     * remote/peer address
     * </pre>
     *
     * <code>.skywalking.v3.ConnectionAddress remote = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ConnectionAddress, ConnectionAddress.Builder, ConnectionAddressOrBuilder>
        getRemoteFieldBuilder() {
      if (remoteBuilder_ == null) {
        remoteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ConnectionAddress, ConnectionAddress.Builder, ConnectionAddressOrBuilder>(
                getRemote(),
                getParentForChildren(),
                isClean());
        remote_ = null;
      }
      return remoteBuilder_;
    }

    private int role_ = 0;
    /**
     * <pre>
     * local address detect point
     * </pre>
     *
     * <code>.skywalking.v3.DetectPoint role = 3;</code>
     * @return The enum numeric value on the wire for role.
     */
    @Override public int getRoleValue() {
      return role_;
    }
    /**
     * <pre>
     * local address detect point
     * </pre>
     *
     * <code>.skywalking.v3.DetectPoint role = 3;</code>
     * @param value The enum numeric value on the wire for role to set.
     * @return This builder for chaining.
     */
    public Builder setRoleValue(int value) {

      role_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * local address detect point
     * </pre>
     *
     * <code>.skywalking.v3.DetectPoint role = 3;</code>
     * @return The role.
     */
    @Override
    public org.apache.skywalking.apm.network.common.v3.DetectPoint getRole() {
      @SuppressWarnings("deprecation")
      org.apache.skywalking.apm.network.common.v3.DetectPoint result = org.apache.skywalking.apm.network.common.v3.DetectPoint.valueOf(role_);
      return result == null ? org.apache.skywalking.apm.network.common.v3.DetectPoint.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * local address detect point
     * </pre>
     *
     * <code>.skywalking.v3.DetectPoint role = 3;</code>
     * @param value The role to set.
     * @return This builder for chaining.
     */
    public Builder setRole(org.apache.skywalking.apm.network.common.v3.DetectPoint value) {
      if (value == null) {
        throw new NullPointerException();
      }

      role_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * local address detect point
     * </pre>
     *
     * <code>.skywalking.v3.DetectPoint role = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearRole() {

      role_ = 0;
      onChanged();
      return this;
    }

    private int tlsMode_ = 0;
    /**
     * <pre>
     * is the connection using TLS or not
     * </pre>
     *
     * <code>.skywalking.v3.AccessLogConnectionTLSMode tlsMode = 4;</code>
     * @return The enum numeric value on the wire for tlsMode.
     */
    @Override public int getTlsModeValue() {
      return tlsMode_;
    }
    /**
     * <pre>
     * is the connection using TLS or not
     * </pre>
     *
     * <code>.skywalking.v3.AccessLogConnectionTLSMode tlsMode = 4;</code>
     * @param value The enum numeric value on the wire for tlsMode to set.
     * @return This builder for chaining.
     */
    public Builder setTlsModeValue(int value) {

      tlsMode_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * is the connection using TLS or not
     * </pre>
     *
     * <code>.skywalking.v3.AccessLogConnectionTLSMode tlsMode = 4;</code>
     * @return The tlsMode.
     */
    @Override
    public AccessLogConnectionTLSMode getTlsMode() {
      @SuppressWarnings("deprecation")
      AccessLogConnectionTLSMode result = AccessLogConnectionTLSMode.valueOf(tlsMode_);
      return result == null ? AccessLogConnectionTLSMode.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * is the connection using TLS or not
     * </pre>
     *
     * <code>.skywalking.v3.AccessLogConnectionTLSMode tlsMode = 4;</code>
     * @param value The tlsMode to set.
     * @return This builder for chaining.
     */
    public Builder setTlsMode(AccessLogConnectionTLSMode value) {
      if (value == null) {
        throw new NullPointerException();
      }

      tlsMode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * is the connection using TLS or not
     * </pre>
     *
     * <code>.skywalking.v3.AccessLogConnectionTLSMode tlsMode = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearTlsMode() {

      tlsMode_ = 0;
      onChanged();
      return this;
    }

    private int protocol_ = 0;
    /**
     * <pre>
     * application protocol type
     * </pre>
     *
     * <code>.skywalking.v3.AccessLogProtocolType protocol = 5;</code>
     * @return The enum numeric value on the wire for protocol.
     */
    @Override public int getProtocolValue() {
      return protocol_;
    }
    /**
     * <pre>
     * application protocol type
     * </pre>
     *
     * <code>.skywalking.v3.AccessLogProtocolType protocol = 5;</code>
     * @param value The enum numeric value on the wire for protocol to set.
     * @return This builder for chaining.
     */
    public Builder setProtocolValue(int value) {

      protocol_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * application protocol type
     * </pre>
     *
     * <code>.skywalking.v3.AccessLogProtocolType protocol = 5;</code>
     * @return The protocol.
     */
    @Override
    public AccessLogProtocolType getProtocol() {
      @SuppressWarnings("deprecation")
      AccessLogProtocolType result = AccessLogProtocolType.valueOf(protocol_);
      return result == null ? AccessLogProtocolType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * application protocol type
     * </pre>
     *
     * <code>.skywalking.v3.AccessLogProtocolType protocol = 5;</code>
     * @param value The protocol to set.
     * @return This builder for chaining.
     */
    public Builder setProtocol(AccessLogProtocolType value) {
      if (value == null) {
        throw new NullPointerException();
      }

      protocol_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * application protocol type
     * </pre>
     *
     * <code>.skywalking.v3.AccessLogProtocolType protocol = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearProtocol() {

      protocol_ = 0;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.AccessLogConnection)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.AccessLogConnection)
  private static final AccessLogConnection DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new AccessLogConnection();
  }

  public static AccessLogConnection getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AccessLogConnection>
      PARSER = new com.google.protobuf.AbstractParser<AccessLogConnection>() {
    @Override
    public AccessLogConnection parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AccessLogConnection(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AccessLogConnection> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<AccessLogConnection> getParserForType() {
    return PARSER;
  }

  @Override
  public AccessLogConnection getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

