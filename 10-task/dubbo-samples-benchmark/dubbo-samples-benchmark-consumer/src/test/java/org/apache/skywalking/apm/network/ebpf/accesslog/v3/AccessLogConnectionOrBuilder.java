// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/accesslog.proto

package org.apache.skywalking.apm.network.ebpf.accesslog.v3;

public interface AccessLogConnectionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:skywalking.v3.AccessLogConnection)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * local address
   * </pre>
   *
   * <code>.skywalking.v3.ConnectionAddress local = 1;</code>
   * @return Whether the local field is set.
   */
  boolean hasLocal();
  /**
   * <pre>
   * local address
   * </pre>
   *
   * <code>.skywalking.v3.ConnectionAddress local = 1;</code>
   * @return The local.
   */
  ConnectionAddress getLocal();
  /**
   * <pre>
   * local address
   * </pre>
   *
   * <code>.skywalking.v3.ConnectionAddress local = 1;</code>
   */
  ConnectionAddressOrBuilder getLocalOrBuilder();

  /**
   * <pre>
   * remote/peer address
   * </pre>
   *
   * <code>.skywalking.v3.ConnectionAddress remote = 2;</code>
   * @return Whether the remote field is set.
   */
  boolean hasRemote();
  /**
   * <pre>
   * remote/peer address
   * </pre>
   *
   * <code>.skywalking.v3.ConnectionAddress remote = 2;</code>
   * @return The remote.
   */
  ConnectionAddress getRemote();
  /**
   * <pre>
   * remote/peer address
   * </pre>
   *
   * <code>.skywalking.v3.ConnectionAddress remote = 2;</code>
   */
  ConnectionAddressOrBuilder getRemoteOrBuilder();

  /**
   * <pre>
   * local address detect point
   * </pre>
   *
   * <code>.skywalking.v3.DetectPoint role = 3;</code>
   * @return The enum numeric value on the wire for role.
   */
  int getRoleValue();
  /**
   * <pre>
   * local address detect point
   * </pre>
   *
   * <code>.skywalking.v3.DetectPoint role = 3;</code>
   * @return The role.
   */
  org.apache.skywalking.apm.network.common.v3.DetectPoint getRole();

  /**
   * <pre>
   * is the connection using TLS or not
   * </pre>
   *
   * <code>.skywalking.v3.AccessLogConnectionTLSMode tlsMode = 4;</code>
   * @return The enum numeric value on the wire for tlsMode.
   */
  int getTlsModeValue();
  /**
   * <pre>
   * is the connection using TLS or not
   * </pre>
   *
   * <code>.skywalking.v3.AccessLogConnectionTLSMode tlsMode = 4;</code>
   * @return The tlsMode.
   */
  AccessLogConnectionTLSMode getTlsMode();

  /**
   * <pre>
   * application protocol type
   * </pre>
   *
   * <code>.skywalking.v3.AccessLogProtocolType protocol = 5;</code>
   * @return The enum numeric value on the wire for protocol.
   */
  int getProtocolValue();
  /**
   * <pre>
   * application protocol type
   * </pre>
   *
   * <code>.skywalking.v3.AccessLogProtocolType protocol = 5;</code>
   * @return The protocol.
   */
  AccessLogProtocolType getProtocol();
}
