// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/accesslog.proto

package org.apache.skywalking.apm.network.ebpf.accesslog.v3;

/**
 * Protobuf type {@code skywalking.v3.AccessLogKernelAcceptOperation}
 */
public final class AccessLogKernelAcceptOperation extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.AccessLogKernelAcceptOperation)
    AccessLogKernelAcceptOperationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AccessLogKernelAcceptOperation.newBuilder() to construct.
  private AccessLogKernelAcceptOperation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AccessLogKernelAcceptOperation() {
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new AccessLogKernelAcceptOperation();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AccessLogKernelAcceptOperation(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            EBPFTimestamp.Builder subBuilder = null;
            if (startTime_ != null) {
              subBuilder = startTime_.toBuilder();
            }
            startTime_ = input.readMessage(EBPFTimestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(startTime_);
              startTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            EBPFTimestamp.Builder subBuilder = null;
            if (endTime_ != null) {
              subBuilder = endTime_.toBuilder();
            }
            endTime_ = input.readMessage(EBPFTimestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(endTime_);
              endTime_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Accesslog.internal_static_skywalking_v3_AccessLogKernelAcceptOperation_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Accesslog.internal_static_skywalking_v3_AccessLogKernelAcceptOperation_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            AccessLogKernelAcceptOperation.class, Builder.class);
  }

  public static final int STARTTIME_FIELD_NUMBER = 1;
  private EBPFTimestamp startTime_;
  /**
   * <pre>
   * Starting to accept socket timestamp
   * </pre>
   *
   * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
   * @return Whether the startTime field is set.
   */
  @Override
  public boolean hasStartTime() {
    return startTime_ != null;
  }
  /**
   * <pre>
   * Starting to accept socket timestamp
   * </pre>
   *
   * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
   * @return The startTime.
   */
  @Override
  public EBPFTimestamp getStartTime() {
    return startTime_ == null ? EBPFTimestamp.getDefaultInstance() : startTime_;
  }
  /**
   * <pre>
   * Starting to accept socket timestamp
   * </pre>
   *
   * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
   */
  @Override
  public EBPFTimestampOrBuilder getStartTimeOrBuilder() {
    return getStartTime();
  }

  public static final int ENDTIME_FIELD_NUMBER = 2;
  private EBPFTimestamp endTime_;
  /**
   * <pre>
   * Finish accept operation timestamp
   * </pre>
   *
   * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
   * @return Whether the endTime field is set.
   */
  @Override
  public boolean hasEndTime() {
    return endTime_ != null;
  }
  /**
   * <pre>
   * Finish accept operation timestamp
   * </pre>
   *
   * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
   * @return The endTime.
   */
  @Override
  public EBPFTimestamp getEndTime() {
    return endTime_ == null ? EBPFTimestamp.getDefaultInstance() : endTime_;
  }
  /**
   * <pre>
   * Finish accept operation timestamp
   * </pre>
   *
   * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
   */
  @Override
  public EBPFTimestampOrBuilder getEndTimeOrBuilder() {
    return getEndTime();
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (startTime_ != null) {
      output.writeMessage(1, getStartTime());
    }
    if (endTime_ != null) {
      output.writeMessage(2, getEndTime());
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (startTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getStartTime());
    }
    if (endTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getEndTime());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof AccessLogKernelAcceptOperation)) {
      return super.equals(obj);
    }
    AccessLogKernelAcceptOperation other = (AccessLogKernelAcceptOperation) obj;

    if (hasStartTime() != other.hasStartTime()) return false;
    if (hasStartTime()) {
      if (!getStartTime()
          .equals(other.getStartTime())) return false;
    }
    if (hasEndTime() != other.hasEndTime()) return false;
    if (hasEndTime()) {
      if (!getEndTime()
          .equals(other.getEndTime())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasStartTime()) {
      hash = (37 * hash) + STARTTIME_FIELD_NUMBER;
      hash = (53 * hash) + getStartTime().hashCode();
    }
    if (hasEndTime()) {
      hash = (37 * hash) + ENDTIME_FIELD_NUMBER;
      hash = (53 * hash) + getEndTime().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static AccessLogKernelAcceptOperation parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AccessLogKernelAcceptOperation parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AccessLogKernelAcceptOperation parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AccessLogKernelAcceptOperation parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AccessLogKernelAcceptOperation parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AccessLogKernelAcceptOperation parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AccessLogKernelAcceptOperation parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static AccessLogKernelAcceptOperation parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static AccessLogKernelAcceptOperation parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static AccessLogKernelAcceptOperation parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static AccessLogKernelAcceptOperation parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static AccessLogKernelAcceptOperation parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(AccessLogKernelAcceptOperation prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code skywalking.v3.AccessLogKernelAcceptOperation}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.AccessLogKernelAcceptOperation)
      AccessLogKernelAcceptOperationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Accesslog.internal_static_skywalking_v3_AccessLogKernelAcceptOperation_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Accesslog.internal_static_skywalking_v3_AccessLogKernelAcceptOperation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              AccessLogKernelAcceptOperation.class, Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.ebpf.accesslog.v3.AccessLogKernelAcceptOperation.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      if (startTimeBuilder_ == null) {
        startTime_ = null;
      } else {
        startTime_ = null;
        startTimeBuilder_ = null;
      }
      if (endTimeBuilder_ == null) {
        endTime_ = null;
      } else {
        endTime_ = null;
        endTimeBuilder_ = null;
      }
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Accesslog.internal_static_skywalking_v3_AccessLogKernelAcceptOperation_descriptor;
    }

    @Override
    public AccessLogKernelAcceptOperation getDefaultInstanceForType() {
      return AccessLogKernelAcceptOperation.getDefaultInstance();
    }

    @Override
    public AccessLogKernelAcceptOperation build() {
      AccessLogKernelAcceptOperation result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public AccessLogKernelAcceptOperation buildPartial() {
      AccessLogKernelAcceptOperation result = new AccessLogKernelAcceptOperation(this);
      if (startTimeBuilder_ == null) {
        result.startTime_ = startTime_;
      } else {
        result.startTime_ = startTimeBuilder_.build();
      }
      if (endTimeBuilder_ == null) {
        result.endTime_ = endTime_;
      } else {
        result.endTime_ = endTimeBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof AccessLogKernelAcceptOperation) {
        return mergeFrom((AccessLogKernelAcceptOperation)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(AccessLogKernelAcceptOperation other) {
      if (other == AccessLogKernelAcceptOperation.getDefaultInstance()) return this;
      if (other.hasStartTime()) {
        mergeStartTime(other.getStartTime());
      }
      if (other.hasEndTime()) {
        mergeEndTime(other.getEndTime());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      AccessLogKernelAcceptOperation parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (AccessLogKernelAcceptOperation) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private EBPFTimestamp startTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        EBPFTimestamp, EBPFTimestamp.Builder, EBPFTimestampOrBuilder> startTimeBuilder_;
    /**
     * <pre>
     * Starting to accept socket timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
     * @return Whether the startTime field is set.
     */
    public boolean hasStartTime() {
      return startTimeBuilder_ != null || startTime_ != null;
    }
    /**
     * <pre>
     * Starting to accept socket timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
     * @return The startTime.
     */
    public EBPFTimestamp getStartTime() {
      if (startTimeBuilder_ == null) {
        return startTime_ == null ? EBPFTimestamp.getDefaultInstance() : startTime_;
      } else {
        return startTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Starting to accept socket timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
     */
    public Builder setStartTime(EBPFTimestamp value) {
      if (startTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        startTime_ = value;
        onChanged();
      } else {
        startTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Starting to accept socket timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
     */
    public Builder setStartTime(
        EBPFTimestamp.Builder builderForValue) {
      if (startTimeBuilder_ == null) {
        startTime_ = builderForValue.build();
        onChanged();
      } else {
        startTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Starting to accept socket timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
     */
    public Builder mergeStartTime(EBPFTimestamp value) {
      if (startTimeBuilder_ == null) {
        if (startTime_ != null) {
          startTime_ =
            EBPFTimestamp.newBuilder(startTime_).mergeFrom(value).buildPartial();
        } else {
          startTime_ = value;
        }
        onChanged();
      } else {
        startTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Starting to accept socket timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
     */
    public Builder clearStartTime() {
      if (startTimeBuilder_ == null) {
        startTime_ = null;
        onChanged();
      } else {
        startTime_ = null;
        startTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Starting to accept socket timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
     */
    public EBPFTimestamp.Builder getStartTimeBuilder() {

      onChanged();
      return getStartTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Starting to accept socket timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
     */
    public EBPFTimestampOrBuilder getStartTimeOrBuilder() {
      if (startTimeBuilder_ != null) {
        return startTimeBuilder_.getMessageOrBuilder();
      } else {
        return startTime_ == null ?
            EBPFTimestamp.getDefaultInstance() : startTime_;
      }
    }
    /**
     * <pre>
     * Starting to accept socket timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        EBPFTimestamp, EBPFTimestamp.Builder, EBPFTimestampOrBuilder>
        getStartTimeFieldBuilder() {
      if (startTimeBuilder_ == null) {
        startTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            EBPFTimestamp, EBPFTimestamp.Builder, EBPFTimestampOrBuilder>(
                getStartTime(),
                getParentForChildren(),
                isClean());
        startTime_ = null;
      }
      return startTimeBuilder_;
    }

    private EBPFTimestamp endTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        EBPFTimestamp, EBPFTimestamp.Builder, EBPFTimestampOrBuilder> endTimeBuilder_;
    /**
     * <pre>
     * Finish accept operation timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
     * @return Whether the endTime field is set.
     */
    public boolean hasEndTime() {
      return endTimeBuilder_ != null || endTime_ != null;
    }
    /**
     * <pre>
     * Finish accept operation timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
     * @return The endTime.
     */
    public EBPFTimestamp getEndTime() {
      if (endTimeBuilder_ == null) {
        return endTime_ == null ? EBPFTimestamp.getDefaultInstance() : endTime_;
      } else {
        return endTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Finish accept operation timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
     */
    public Builder setEndTime(EBPFTimestamp value) {
      if (endTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        endTime_ = value;
        onChanged();
      } else {
        endTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Finish accept operation timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
     */
    public Builder setEndTime(
        EBPFTimestamp.Builder builderForValue) {
      if (endTimeBuilder_ == null) {
        endTime_ = builderForValue.build();
        onChanged();
      } else {
        endTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Finish accept operation timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
     */
    public Builder mergeEndTime(EBPFTimestamp value) {
      if (endTimeBuilder_ == null) {
        if (endTime_ != null) {
          endTime_ =
            EBPFTimestamp.newBuilder(endTime_).mergeFrom(value).buildPartial();
        } else {
          endTime_ = value;
        }
        onChanged();
      } else {
        endTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Finish accept operation timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
     */
    public Builder clearEndTime() {
      if (endTimeBuilder_ == null) {
        endTime_ = null;
        onChanged();
      } else {
        endTime_ = null;
        endTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Finish accept operation timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
     */
    public EBPFTimestamp.Builder getEndTimeBuilder() {

      onChanged();
      return getEndTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Finish accept operation timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
     */
    public EBPFTimestampOrBuilder getEndTimeOrBuilder() {
      if (endTimeBuilder_ != null) {
        return endTimeBuilder_.getMessageOrBuilder();
      } else {
        return endTime_ == null ?
            EBPFTimestamp.getDefaultInstance() : endTime_;
      }
    }
    /**
     * <pre>
     * Finish accept operation timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        EBPFTimestamp, EBPFTimestamp.Builder, EBPFTimestampOrBuilder>
        getEndTimeFieldBuilder() {
      if (endTimeBuilder_ == null) {
        endTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            EBPFTimestamp, EBPFTimestamp.Builder, EBPFTimestampOrBuilder>(
                getEndTime(),
                getParentForChildren(),
                isClean());
        endTime_ = null;
      }
      return endTimeBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.AccessLogKernelAcceptOperation)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.AccessLogKernelAcceptOperation)
  private static final AccessLogKernelAcceptOperation DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new AccessLogKernelAcceptOperation();
  }

  public static AccessLogKernelAcceptOperation getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AccessLogKernelAcceptOperation>
      PARSER = new com.google.protobuf.AbstractParser<AccessLogKernelAcceptOperation>() {
    @Override
    public AccessLogKernelAcceptOperation parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AccessLogKernelAcceptOperation(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AccessLogKernelAcceptOperation> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<AccessLogKernelAcceptOperation> getParserForType() {
    return PARSER;
  }

  @Override
  public AccessLogKernelAcceptOperation getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

