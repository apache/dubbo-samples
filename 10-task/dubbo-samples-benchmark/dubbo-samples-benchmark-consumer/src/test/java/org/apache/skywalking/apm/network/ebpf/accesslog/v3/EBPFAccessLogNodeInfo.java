// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/accesslog.proto

package org.apache.skywalking.apm.network.ebpf.accesslog.v3;

/**
 * Protobuf type {@code skywalking.v3.EBPFAccessLogNodeInfo}
 */
public final class EBPFAccessLogNodeInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.EBPFAccessLogNodeInfo)
    EBPFAccessLogNodeInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EBPFAccessLogNodeInfo.newBuilder() to construct.
  private EBPFAccessLogNodeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EBPFAccessLogNodeInfo() {
    name_ = "";
    netInterfaces_ = java.util.Collections.emptyList();
    clusterName_ = "";
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new EBPFAccessLogNodeInfo();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private EBPFAccessLogNodeInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              netInterfaces_ = new java.util.ArrayList<EBPFAccessLogNodeNetInterface>();
              mutable_bitField0_ |= 0x00000001;
            }
            netInterfaces_.add(
                input.readMessage(EBPFAccessLogNodeNetInterface.parser(), extensionRegistry));
            break;
          }
          case 26: {
            org.apache.skywalking.apm.network.common.v3.Instant.Builder subBuilder = null;
            if (bootTime_ != null) {
              subBuilder = bootTime_.toBuilder();
            }
            bootTime_ = input.readMessage(org.apache.skywalking.apm.network.common.v3.Instant.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(bootTime_);
              bootTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            String s = input.readStringRequireUtf8();

            clusterName_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        netInterfaces_ = java.util.Collections.unmodifiableList(netInterfaces_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Accesslog.internal_static_skywalking_v3_EBPFAccessLogNodeInfo_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Accesslog.internal_static_skywalking_v3_EBPFAccessLogNodeInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            EBPFAccessLogNodeInfo.class, Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile Object name_;
  /**
   * <pre>
   * Node name
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  @Override
  public String getName() {
    Object ref = name_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Node name
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    Object ref = name_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NETINTERFACES_FIELD_NUMBER = 2;
  private java.util.List<EBPFAccessLogNodeNetInterface> netInterfaces_;
  /**
   * <pre>
   * All net interfaces list
   * </pre>
   *
   * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
   */
  @Override
  public java.util.List<EBPFAccessLogNodeNetInterface> getNetInterfacesList() {
    return netInterfaces_;
  }
  /**
   * <pre>
   * All net interfaces list
   * </pre>
   *
   * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
   */
  @Override
  public java.util.List<? extends EBPFAccessLogNodeNetInterfaceOrBuilder>
      getNetInterfacesOrBuilderList() {
    return netInterfaces_;
  }
  /**
   * <pre>
   * All net interfaces list
   * </pre>
   *
   * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
   */
  @Override
  public int getNetInterfacesCount() {
    return netInterfaces_.size();
  }
  /**
   * <pre>
   * All net interfaces list
   * </pre>
   *
   * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
   */
  @Override
  public EBPFAccessLogNodeNetInterface getNetInterfaces(int index) {
    return netInterfaces_.get(index);
  }
  /**
   * <pre>
   * All net interfaces list
   * </pre>
   *
   * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
   */
  @Override
  public EBPFAccessLogNodeNetInterfaceOrBuilder getNetInterfacesOrBuilder(
      int index) {
    return netInterfaces_.get(index);
  }

  public static final int BOOTTIME_FIELD_NUMBER = 3;
  private org.apache.skywalking.apm.network.common.v3.Instant bootTime_;
  /**
   * <pre>
   * System boot time
   * </pre>
   *
   * <code>.skywalking.v3.Instant bootTime = 3;</code>
   * @return Whether the bootTime field is set.
   */
  @Override
  public boolean hasBootTime() {
    return bootTime_ != null;
  }
  /**
   * <pre>
   * System boot time
   * </pre>
   *
   * <code>.skywalking.v3.Instant bootTime = 3;</code>
   * @return The bootTime.
   */
  @Override
  public org.apache.skywalking.apm.network.common.v3.Instant getBootTime() {
    return bootTime_ == null ? org.apache.skywalking.apm.network.common.v3.Instant.getDefaultInstance() : bootTime_;
  }
  /**
   * <pre>
   * System boot time
   * </pre>
   *
   * <code>.skywalking.v3.Instant bootTime = 3;</code>
   */
  @Override
  public org.apache.skywalking.apm.network.common.v3.InstantOrBuilder getBootTimeOrBuilder() {
    return getBootTime();
  }

  public static final int CLUSTERNAME_FIELD_NUMBER = 4;
  private volatile Object clusterName_;
  /**
   * <pre>
   * Cluster name
   * </pre>
   *
   * <code>string clusterName = 4;</code>
   * @return The clusterName.
   */
  @Override
  public String getClusterName() {
    Object ref = clusterName_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      clusterName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Cluster name
   * </pre>
   *
   * <code>string clusterName = 4;</code>
   * @return The bytes for clusterName.
   */
  @Override
  public com.google.protobuf.ByteString
      getClusterNameBytes() {
    Object ref = clusterName_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      clusterName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    for (int i = 0; i < netInterfaces_.size(); i++) {
      output.writeMessage(2, netInterfaces_.get(i));
    }
    if (bootTime_ != null) {
      output.writeMessage(3, getBootTime());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clusterName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, clusterName_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    for (int i = 0; i < netInterfaces_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, netInterfaces_.get(i));
    }
    if (bootTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getBootTime());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clusterName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, clusterName_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof EBPFAccessLogNodeInfo)) {
      return super.equals(obj);
    }
    EBPFAccessLogNodeInfo other = (EBPFAccessLogNodeInfo) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (!getNetInterfacesList()
        .equals(other.getNetInterfacesList())) return false;
    if (hasBootTime() != other.hasBootTime()) return false;
    if (hasBootTime()) {
      if (!getBootTime()
          .equals(other.getBootTime())) return false;
    }
    if (!getClusterName()
        .equals(other.getClusterName())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (getNetInterfacesCount() > 0) {
      hash = (37 * hash) + NETINTERFACES_FIELD_NUMBER;
      hash = (53 * hash) + getNetInterfacesList().hashCode();
    }
    if (hasBootTime()) {
      hash = (37 * hash) + BOOTTIME_FIELD_NUMBER;
      hash = (53 * hash) + getBootTime().hashCode();
    }
    hash = (37 * hash) + CLUSTERNAME_FIELD_NUMBER;
    hash = (53 * hash) + getClusterName().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static EBPFAccessLogNodeInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static EBPFAccessLogNodeInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static EBPFAccessLogNodeInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static EBPFAccessLogNodeInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static EBPFAccessLogNodeInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static EBPFAccessLogNodeInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static EBPFAccessLogNodeInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static EBPFAccessLogNodeInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static EBPFAccessLogNodeInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static EBPFAccessLogNodeInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static EBPFAccessLogNodeInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static EBPFAccessLogNodeInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(EBPFAccessLogNodeInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code skywalking.v3.EBPFAccessLogNodeInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.EBPFAccessLogNodeInfo)
      EBPFAccessLogNodeInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Accesslog.internal_static_skywalking_v3_EBPFAccessLogNodeInfo_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Accesslog.internal_static_skywalking_v3_EBPFAccessLogNodeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EBPFAccessLogNodeInfo.class, Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.ebpf.accesslog.v3.EBPFAccessLogNodeInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getNetInterfacesFieldBuilder();
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      name_ = "";

      if (netInterfacesBuilder_ == null) {
        netInterfaces_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        netInterfacesBuilder_.clear();
      }
      if (bootTimeBuilder_ == null) {
        bootTime_ = null;
      } else {
        bootTime_ = null;
        bootTimeBuilder_ = null;
      }
      clusterName_ = "";

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Accesslog.internal_static_skywalking_v3_EBPFAccessLogNodeInfo_descriptor;
    }

    @Override
    public EBPFAccessLogNodeInfo getDefaultInstanceForType() {
      return EBPFAccessLogNodeInfo.getDefaultInstance();
    }

    @Override
    public EBPFAccessLogNodeInfo build() {
      EBPFAccessLogNodeInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public EBPFAccessLogNodeInfo buildPartial() {
      EBPFAccessLogNodeInfo result = new EBPFAccessLogNodeInfo(this);
      int from_bitField0_ = bitField0_;
      result.name_ = name_;
      if (netInterfacesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          netInterfaces_ = java.util.Collections.unmodifiableList(netInterfaces_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.netInterfaces_ = netInterfaces_;
      } else {
        result.netInterfaces_ = netInterfacesBuilder_.build();
      }
      if (bootTimeBuilder_ == null) {
        result.bootTime_ = bootTime_;
      } else {
        result.bootTime_ = bootTimeBuilder_.build();
      }
      result.clusterName_ = clusterName_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof EBPFAccessLogNodeInfo) {
        return mergeFrom((EBPFAccessLogNodeInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(EBPFAccessLogNodeInfo other) {
      if (other == EBPFAccessLogNodeInfo.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (netInterfacesBuilder_ == null) {
        if (!other.netInterfaces_.isEmpty()) {
          if (netInterfaces_.isEmpty()) {
            netInterfaces_ = other.netInterfaces_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureNetInterfacesIsMutable();
            netInterfaces_.addAll(other.netInterfaces_);
          }
          onChanged();
        }
      } else {
        if (!other.netInterfaces_.isEmpty()) {
          if (netInterfacesBuilder_.isEmpty()) {
            netInterfacesBuilder_.dispose();
            netInterfacesBuilder_ = null;
            netInterfaces_ = other.netInterfaces_;
            bitField0_ = (bitField0_ & ~0x00000001);
            netInterfacesBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getNetInterfacesFieldBuilder() : null;
          } else {
            netInterfacesBuilder_.addAllMessages(other.netInterfaces_);
          }
        }
      }
      if (other.hasBootTime()) {
        mergeBootTime(other.getBootTime());
      }
      if (!other.getClusterName().isEmpty()) {
        clusterName_ = other.clusterName_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      EBPFAccessLogNodeInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (EBPFAccessLogNodeInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private Object name_ = "";
    /**
     * <pre>
     * Node name
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    public String getName() {
      Object ref = name_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * Node name
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Node name
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Node name
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {

      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Node name
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      name_ = value;
      onChanged();
      return this;
    }

    private java.util.List<EBPFAccessLogNodeNetInterface> netInterfaces_ =
      java.util.Collections.emptyList();
    private void ensureNetInterfacesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        netInterfaces_ = new java.util.ArrayList<EBPFAccessLogNodeNetInterface>(netInterfaces_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        EBPFAccessLogNodeNetInterface, EBPFAccessLogNodeNetInterface.Builder, EBPFAccessLogNodeNetInterfaceOrBuilder> netInterfacesBuilder_;

    /**
     * <pre>
     * All net interfaces list
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
     */
    public java.util.List<EBPFAccessLogNodeNetInterface> getNetInterfacesList() {
      if (netInterfacesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(netInterfaces_);
      } else {
        return netInterfacesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * All net interfaces list
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
     */
    public int getNetInterfacesCount() {
      if (netInterfacesBuilder_ == null) {
        return netInterfaces_.size();
      } else {
        return netInterfacesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * All net interfaces list
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
     */
    public EBPFAccessLogNodeNetInterface getNetInterfaces(int index) {
      if (netInterfacesBuilder_ == null) {
        return netInterfaces_.get(index);
      } else {
        return netInterfacesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * All net interfaces list
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
     */
    public Builder setNetInterfaces(
        int index, EBPFAccessLogNodeNetInterface value) {
      if (netInterfacesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNetInterfacesIsMutable();
        netInterfaces_.set(index, value);
        onChanged();
      } else {
        netInterfacesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * All net interfaces list
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
     */
    public Builder setNetInterfaces(
        int index, EBPFAccessLogNodeNetInterface.Builder builderForValue) {
      if (netInterfacesBuilder_ == null) {
        ensureNetInterfacesIsMutable();
        netInterfaces_.set(index, builderForValue.build());
        onChanged();
      } else {
        netInterfacesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * All net interfaces list
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
     */
    public Builder addNetInterfaces(EBPFAccessLogNodeNetInterface value) {
      if (netInterfacesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNetInterfacesIsMutable();
        netInterfaces_.add(value);
        onChanged();
      } else {
        netInterfacesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * All net interfaces list
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
     */
    public Builder addNetInterfaces(
        int index, EBPFAccessLogNodeNetInterface value) {
      if (netInterfacesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNetInterfacesIsMutable();
        netInterfaces_.add(index, value);
        onChanged();
      } else {
        netInterfacesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * All net interfaces list
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
     */
    public Builder addNetInterfaces(
        EBPFAccessLogNodeNetInterface.Builder builderForValue) {
      if (netInterfacesBuilder_ == null) {
        ensureNetInterfacesIsMutable();
        netInterfaces_.add(builderForValue.build());
        onChanged();
      } else {
        netInterfacesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * All net interfaces list
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
     */
    public Builder addNetInterfaces(
        int index, EBPFAccessLogNodeNetInterface.Builder builderForValue) {
      if (netInterfacesBuilder_ == null) {
        ensureNetInterfacesIsMutable();
        netInterfaces_.add(index, builderForValue.build());
        onChanged();
      } else {
        netInterfacesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * All net interfaces list
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
     */
    public Builder addAllNetInterfaces(
        Iterable<? extends EBPFAccessLogNodeNetInterface> values) {
      if (netInterfacesBuilder_ == null) {
        ensureNetInterfacesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, netInterfaces_);
        onChanged();
      } else {
        netInterfacesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * All net interfaces list
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
     */
    public Builder clearNetInterfaces() {
      if (netInterfacesBuilder_ == null) {
        netInterfaces_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        netInterfacesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * All net interfaces list
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
     */
    public Builder removeNetInterfaces(int index) {
      if (netInterfacesBuilder_ == null) {
        ensureNetInterfacesIsMutable();
        netInterfaces_.remove(index);
        onChanged();
      } else {
        netInterfacesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * All net interfaces list
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
     */
    public EBPFAccessLogNodeNetInterface.Builder getNetInterfacesBuilder(
        int index) {
      return getNetInterfacesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * All net interfaces list
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
     */
    public EBPFAccessLogNodeNetInterfaceOrBuilder getNetInterfacesOrBuilder(
        int index) {
      if (netInterfacesBuilder_ == null) {
        return netInterfaces_.get(index);  } else {
        return netInterfacesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * All net interfaces list
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
     */
    public java.util.List<? extends EBPFAccessLogNodeNetInterfaceOrBuilder>
         getNetInterfacesOrBuilderList() {
      if (netInterfacesBuilder_ != null) {
        return netInterfacesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(netInterfaces_);
      }
    }
    /**
     * <pre>
     * All net interfaces list
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
     */
    public EBPFAccessLogNodeNetInterface.Builder addNetInterfacesBuilder() {
      return getNetInterfacesFieldBuilder().addBuilder(
          EBPFAccessLogNodeNetInterface.getDefaultInstance());
    }
    /**
     * <pre>
     * All net interfaces list
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
     */
    public EBPFAccessLogNodeNetInterface.Builder addNetInterfacesBuilder(
        int index) {
      return getNetInterfacesFieldBuilder().addBuilder(
          index, EBPFAccessLogNodeNetInterface.getDefaultInstance());
    }
    /**
     * <pre>
     * All net interfaces list
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFAccessLogNodeNetInterface netInterfaces = 2;</code>
     */
    public java.util.List<EBPFAccessLogNodeNetInterface.Builder>
         getNetInterfacesBuilderList() {
      return getNetInterfacesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        EBPFAccessLogNodeNetInterface, EBPFAccessLogNodeNetInterface.Builder, EBPFAccessLogNodeNetInterfaceOrBuilder>
        getNetInterfacesFieldBuilder() {
      if (netInterfacesBuilder_ == null) {
        netInterfacesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            EBPFAccessLogNodeNetInterface, EBPFAccessLogNodeNetInterface.Builder, EBPFAccessLogNodeNetInterfaceOrBuilder>(
                netInterfaces_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        netInterfaces_ = null;
      }
      return netInterfacesBuilder_;
    }

    private org.apache.skywalking.apm.network.common.v3.Instant bootTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.common.v3.Instant, org.apache.skywalking.apm.network.common.v3.Instant.Builder, org.apache.skywalking.apm.network.common.v3.InstantOrBuilder> bootTimeBuilder_;
    /**
     * <pre>
     * System boot time
     * </pre>
     *
     * <code>.skywalking.v3.Instant bootTime = 3;</code>
     * @return Whether the bootTime field is set.
     */
    public boolean hasBootTime() {
      return bootTimeBuilder_ != null || bootTime_ != null;
    }
    /**
     * <pre>
     * System boot time
     * </pre>
     *
     * <code>.skywalking.v3.Instant bootTime = 3;</code>
     * @return The bootTime.
     */
    public org.apache.skywalking.apm.network.common.v3.Instant getBootTime() {
      if (bootTimeBuilder_ == null) {
        return bootTime_ == null ? org.apache.skywalking.apm.network.common.v3.Instant.getDefaultInstance() : bootTime_;
      } else {
        return bootTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * System boot time
     * </pre>
     *
     * <code>.skywalking.v3.Instant bootTime = 3;</code>
     */
    public Builder setBootTime(org.apache.skywalking.apm.network.common.v3.Instant value) {
      if (bootTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        bootTime_ = value;
        onChanged();
      } else {
        bootTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * System boot time
     * </pre>
     *
     * <code>.skywalking.v3.Instant bootTime = 3;</code>
     */
    public Builder setBootTime(
        org.apache.skywalking.apm.network.common.v3.Instant.Builder builderForValue) {
      if (bootTimeBuilder_ == null) {
        bootTime_ = builderForValue.build();
        onChanged();
      } else {
        bootTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * System boot time
     * </pre>
     *
     * <code>.skywalking.v3.Instant bootTime = 3;</code>
     */
    public Builder mergeBootTime(org.apache.skywalking.apm.network.common.v3.Instant value) {
      if (bootTimeBuilder_ == null) {
        if (bootTime_ != null) {
          bootTime_ =
            org.apache.skywalking.apm.network.common.v3.Instant.newBuilder(bootTime_).mergeFrom(value).buildPartial();
        } else {
          bootTime_ = value;
        }
        onChanged();
      } else {
        bootTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * System boot time
     * </pre>
     *
     * <code>.skywalking.v3.Instant bootTime = 3;</code>
     */
    public Builder clearBootTime() {
      if (bootTimeBuilder_ == null) {
        bootTime_ = null;
        onChanged();
      } else {
        bootTime_ = null;
        bootTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * System boot time
     * </pre>
     *
     * <code>.skywalking.v3.Instant bootTime = 3;</code>
     */
    public org.apache.skywalking.apm.network.common.v3.Instant.Builder getBootTimeBuilder() {

      onChanged();
      return getBootTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * System boot time
     * </pre>
     *
     * <code>.skywalking.v3.Instant bootTime = 3;</code>
     */
    public org.apache.skywalking.apm.network.common.v3.InstantOrBuilder getBootTimeOrBuilder() {
      if (bootTimeBuilder_ != null) {
        return bootTimeBuilder_.getMessageOrBuilder();
      } else {
        return bootTime_ == null ?
            org.apache.skywalking.apm.network.common.v3.Instant.getDefaultInstance() : bootTime_;
      }
    }
    /**
     * <pre>
     * System boot time
     * </pre>
     *
     * <code>.skywalking.v3.Instant bootTime = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.common.v3.Instant, org.apache.skywalking.apm.network.common.v3.Instant.Builder, org.apache.skywalking.apm.network.common.v3.InstantOrBuilder>
        getBootTimeFieldBuilder() {
      if (bootTimeBuilder_ == null) {
        bootTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.skywalking.apm.network.common.v3.Instant, org.apache.skywalking.apm.network.common.v3.Instant.Builder, org.apache.skywalking.apm.network.common.v3.InstantOrBuilder>(
                getBootTime(),
                getParentForChildren(),
                isClean());
        bootTime_ = null;
      }
      return bootTimeBuilder_;
    }

    private Object clusterName_ = "";
    /**
     * <pre>
     * Cluster name
     * </pre>
     *
     * <code>string clusterName = 4;</code>
     * @return The clusterName.
     */
    public String getClusterName() {
      Object ref = clusterName_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        clusterName_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * Cluster name
     * </pre>
     *
     * <code>string clusterName = 4;</code>
     * @return The bytes for clusterName.
     */
    public com.google.protobuf.ByteString
        getClusterNameBytes() {
      Object ref = clusterName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        clusterName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Cluster name
     * </pre>
     *
     * <code>string clusterName = 4;</code>
     * @param value The clusterName to set.
     * @return This builder for chaining.
     */
    public Builder setClusterName(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      clusterName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Cluster name
     * </pre>
     *
     * <code>string clusterName = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearClusterName() {

      clusterName_ = getDefaultInstance().getClusterName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Cluster name
     * </pre>
     *
     * <code>string clusterName = 4;</code>
     * @param value The bytes for clusterName to set.
     * @return This builder for chaining.
     */
    public Builder setClusterNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      clusterName_ = value;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.EBPFAccessLogNodeInfo)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.EBPFAccessLogNodeInfo)
  private static final EBPFAccessLogNodeInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new EBPFAccessLogNodeInfo();
  }

  public static EBPFAccessLogNodeInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EBPFAccessLogNodeInfo>
      PARSER = new com.google.protobuf.AbstractParser<EBPFAccessLogNodeInfo>() {
    @Override
    public EBPFAccessLogNodeInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new EBPFAccessLogNodeInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<EBPFAccessLogNodeInfo> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<EBPFAccessLogNodeInfo> getParserForType() {
    return PARSER;
  }

  @Override
  public EBPFAccessLogNodeInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

