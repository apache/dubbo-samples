// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/accesslog.proto

package org.apache.skywalking.apm.network.ebpf.accesslog.v3;

/**
 * Protobuf type {@code skywalking.v3.AccessLogKernelLog}
 */
public final class AccessLogKernelLog extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.AccessLogKernelLog)
    AccessLogKernelLogOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AccessLogKernelLog.newBuilder() to construct.
  private AccessLogKernelLog(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AccessLogKernelLog() {
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new AccessLogKernelLog();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AccessLogKernelLog(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            AccessLogKernelConnectOperation.Builder subBuilder = null;
            if (operationCase_ == 1) {
              subBuilder = ((AccessLogKernelConnectOperation) operation_).toBuilder();
            }
            operation_ =
                input.readMessage(AccessLogKernelConnectOperation.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((AccessLogKernelConnectOperation) operation_);
              operation_ = subBuilder.buildPartial();
            }
            operationCase_ = 1;
            break;
          }
          case 18: {
            AccessLogKernelAcceptOperation.Builder subBuilder = null;
            if (operationCase_ == 2) {
              subBuilder = ((AccessLogKernelAcceptOperation) operation_).toBuilder();
            }
            operation_ =
                input.readMessage(AccessLogKernelAcceptOperation.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((AccessLogKernelAcceptOperation) operation_);
              operation_ = subBuilder.buildPartial();
            }
            operationCase_ = 2;
            break;
          }
          case 26: {
            AccessLogKernelCloseOperation.Builder subBuilder = null;
            if (operationCase_ == 3) {
              subBuilder = ((AccessLogKernelCloseOperation) operation_).toBuilder();
            }
            operation_ =
                input.readMessage(AccessLogKernelCloseOperation.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((AccessLogKernelCloseOperation) operation_);
              operation_ = subBuilder.buildPartial();
            }
            operationCase_ = 3;
            break;
          }
          case 34: {
            AccessLogKernelReadOperation.Builder subBuilder = null;
            if (operationCase_ == 4) {
              subBuilder = ((AccessLogKernelReadOperation) operation_).toBuilder();
            }
            operation_ =
                input.readMessage(AccessLogKernelReadOperation.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((AccessLogKernelReadOperation) operation_);
              operation_ = subBuilder.buildPartial();
            }
            operationCase_ = 4;
            break;
          }
          case 42: {
            AccessLogKernelWriteOperation.Builder subBuilder = null;
            if (operationCase_ == 5) {
              subBuilder = ((AccessLogKernelWriteOperation) operation_).toBuilder();
            }
            operation_ =
                input.readMessage(AccessLogKernelWriteOperation.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((AccessLogKernelWriteOperation) operation_);
              operation_ = subBuilder.buildPartial();
            }
            operationCase_ = 5;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Accesslog.internal_static_skywalking_v3_AccessLogKernelLog_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Accesslog.internal_static_skywalking_v3_AccessLogKernelLog_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            AccessLogKernelLog.class, Builder.class);
  }

  private int operationCase_ = 0;
  private Object operation_;
  public enum OperationCase
      implements com.google.protobuf.Internal.EnumLite,
          InternalOneOfEnum {
    CONNECT(1),
    ACCEPT(2),
    CLOSE(3),
    READ(4),
    WRITE(5),
    OPERATION_NOT_SET(0);
    private final int value;
    private OperationCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static OperationCase valueOf(int value) {
      return forNumber(value);
    }

    public static OperationCase forNumber(int value) {
      switch (value) {
        case 1: return CONNECT;
        case 2: return ACCEPT;
        case 3: return CLOSE;
        case 4: return READ;
        case 5: return WRITE;
        case 0: return OPERATION_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public OperationCase
  getOperationCase() {
    return OperationCase.forNumber(
        operationCase_);
  }

  public static final int CONNECT_FIELD_NUMBER = 1;
  /**
   * <code>.skywalking.v3.AccessLogKernelConnectOperation connect = 1;</code>
   * @return Whether the connect field is set.
   */
  @Override
  public boolean hasConnect() {
    return operationCase_ == 1;
  }
  /**
   * <code>.skywalking.v3.AccessLogKernelConnectOperation connect = 1;</code>
   * @return The connect.
   */
  @Override
  public AccessLogKernelConnectOperation getConnect() {
    if (operationCase_ == 1) {
       return (AccessLogKernelConnectOperation) operation_;
    }
    return AccessLogKernelConnectOperation.getDefaultInstance();
  }
  /**
   * <code>.skywalking.v3.AccessLogKernelConnectOperation connect = 1;</code>
   */
  @Override
  public AccessLogKernelConnectOperationOrBuilder getConnectOrBuilder() {
    if (operationCase_ == 1) {
       return (AccessLogKernelConnectOperation) operation_;
    }
    return AccessLogKernelConnectOperation.getDefaultInstance();
  }

  public static final int ACCEPT_FIELD_NUMBER = 2;
  /**
   * <code>.skywalking.v3.AccessLogKernelAcceptOperation accept = 2;</code>
   * @return Whether the accept field is set.
   */
  @Override
  public boolean hasAccept() {
    return operationCase_ == 2;
  }
  /**
   * <code>.skywalking.v3.AccessLogKernelAcceptOperation accept = 2;</code>
   * @return The accept.
   */
  @Override
  public AccessLogKernelAcceptOperation getAccept() {
    if (operationCase_ == 2) {
       return (AccessLogKernelAcceptOperation) operation_;
    }
    return AccessLogKernelAcceptOperation.getDefaultInstance();
  }
  /**
   * <code>.skywalking.v3.AccessLogKernelAcceptOperation accept = 2;</code>
   */
  @Override
  public AccessLogKernelAcceptOperationOrBuilder getAcceptOrBuilder() {
    if (operationCase_ == 2) {
       return (AccessLogKernelAcceptOperation) operation_;
    }
    return AccessLogKernelAcceptOperation.getDefaultInstance();
  }

  public static final int CLOSE_FIELD_NUMBER = 3;
  /**
   * <code>.skywalking.v3.AccessLogKernelCloseOperation close = 3;</code>
   * @return Whether the close field is set.
   */
  @Override
  public boolean hasClose() {
    return operationCase_ == 3;
  }
  /**
   * <code>.skywalking.v3.AccessLogKernelCloseOperation close = 3;</code>
   * @return The close.
   */
  @Override
  public AccessLogKernelCloseOperation getClose() {
    if (operationCase_ == 3) {
       return (AccessLogKernelCloseOperation) operation_;
    }
    return AccessLogKernelCloseOperation.getDefaultInstance();
  }
  /**
   * <code>.skywalking.v3.AccessLogKernelCloseOperation close = 3;</code>
   */
  @Override
  public AccessLogKernelCloseOperationOrBuilder getCloseOrBuilder() {
    if (operationCase_ == 3) {
       return (AccessLogKernelCloseOperation) operation_;
    }
    return AccessLogKernelCloseOperation.getDefaultInstance();
  }

  public static final int READ_FIELD_NUMBER = 4;
  /**
   * <code>.skywalking.v3.AccessLogKernelReadOperation read = 4;</code>
   * @return Whether the read field is set.
   */
  @Override
  public boolean hasRead() {
    return operationCase_ == 4;
  }
  /**
   * <code>.skywalking.v3.AccessLogKernelReadOperation read = 4;</code>
   * @return The read.
   */
  @Override
  public AccessLogKernelReadOperation getRead() {
    if (operationCase_ == 4) {
       return (AccessLogKernelReadOperation) operation_;
    }
    return AccessLogKernelReadOperation.getDefaultInstance();
  }
  /**
   * <code>.skywalking.v3.AccessLogKernelReadOperation read = 4;</code>
   */
  @Override
  public AccessLogKernelReadOperationOrBuilder getReadOrBuilder() {
    if (operationCase_ == 4) {
       return (AccessLogKernelReadOperation) operation_;
    }
    return AccessLogKernelReadOperation.getDefaultInstance();
  }

  public static final int WRITE_FIELD_NUMBER = 5;
  /**
   * <code>.skywalking.v3.AccessLogKernelWriteOperation write = 5;</code>
   * @return Whether the write field is set.
   */
  @Override
  public boolean hasWrite() {
    return operationCase_ == 5;
  }
  /**
   * <code>.skywalking.v3.AccessLogKernelWriteOperation write = 5;</code>
   * @return The write.
   */
  @Override
  public AccessLogKernelWriteOperation getWrite() {
    if (operationCase_ == 5) {
       return (AccessLogKernelWriteOperation) operation_;
    }
    return AccessLogKernelWriteOperation.getDefaultInstance();
  }
  /**
   * <code>.skywalking.v3.AccessLogKernelWriteOperation write = 5;</code>
   */
  @Override
  public AccessLogKernelWriteOperationOrBuilder getWriteOrBuilder() {
    if (operationCase_ == 5) {
       return (AccessLogKernelWriteOperation) operation_;
    }
    return AccessLogKernelWriteOperation.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (operationCase_ == 1) {
      output.writeMessage(1, (AccessLogKernelConnectOperation) operation_);
    }
    if (operationCase_ == 2) {
      output.writeMessage(2, (AccessLogKernelAcceptOperation) operation_);
    }
    if (operationCase_ == 3) {
      output.writeMessage(3, (AccessLogKernelCloseOperation) operation_);
    }
    if (operationCase_ == 4) {
      output.writeMessage(4, (AccessLogKernelReadOperation) operation_);
    }
    if (operationCase_ == 5) {
      output.writeMessage(5, (AccessLogKernelWriteOperation) operation_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (operationCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (AccessLogKernelConnectOperation) operation_);
    }
    if (operationCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (AccessLogKernelAcceptOperation) operation_);
    }
    if (operationCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (AccessLogKernelCloseOperation) operation_);
    }
    if (operationCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (AccessLogKernelReadOperation) operation_);
    }
    if (operationCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (AccessLogKernelWriteOperation) operation_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof AccessLogKernelLog)) {
      return super.equals(obj);
    }
    AccessLogKernelLog other = (AccessLogKernelLog) obj;

    if (!getOperationCase().equals(other.getOperationCase())) return false;
    switch (operationCase_) {
      case 1:
        if (!getConnect()
            .equals(other.getConnect())) return false;
        break;
      case 2:
        if (!getAccept()
            .equals(other.getAccept())) return false;
        break;
      case 3:
        if (!getClose()
            .equals(other.getClose())) return false;
        break;
      case 4:
        if (!getRead()
            .equals(other.getRead())) return false;
        break;
      case 5:
        if (!getWrite()
            .equals(other.getWrite())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (operationCase_) {
      case 1:
        hash = (37 * hash) + CONNECT_FIELD_NUMBER;
        hash = (53 * hash) + getConnect().hashCode();
        break;
      case 2:
        hash = (37 * hash) + ACCEPT_FIELD_NUMBER;
        hash = (53 * hash) + getAccept().hashCode();
        break;
      case 3:
        hash = (37 * hash) + CLOSE_FIELD_NUMBER;
        hash = (53 * hash) + getClose().hashCode();
        break;
      case 4:
        hash = (37 * hash) + READ_FIELD_NUMBER;
        hash = (53 * hash) + getRead().hashCode();
        break;
      case 5:
        hash = (37 * hash) + WRITE_FIELD_NUMBER;
        hash = (53 * hash) + getWrite().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static AccessLogKernelLog parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AccessLogKernelLog parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AccessLogKernelLog parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AccessLogKernelLog parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AccessLogKernelLog parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AccessLogKernelLog parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AccessLogKernelLog parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static AccessLogKernelLog parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static AccessLogKernelLog parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static AccessLogKernelLog parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static AccessLogKernelLog parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static AccessLogKernelLog parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(AccessLogKernelLog prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code skywalking.v3.AccessLogKernelLog}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.AccessLogKernelLog)
      AccessLogKernelLogOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Accesslog.internal_static_skywalking_v3_AccessLogKernelLog_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Accesslog.internal_static_skywalking_v3_AccessLogKernelLog_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              AccessLogKernelLog.class, Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.ebpf.accesslog.v3.AccessLogKernelLog.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      operationCase_ = 0;
      operation_ = null;
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Accesslog.internal_static_skywalking_v3_AccessLogKernelLog_descriptor;
    }

    @Override
    public AccessLogKernelLog getDefaultInstanceForType() {
      return AccessLogKernelLog.getDefaultInstance();
    }

    @Override
    public AccessLogKernelLog build() {
      AccessLogKernelLog result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public AccessLogKernelLog buildPartial() {
      AccessLogKernelLog result = new AccessLogKernelLog(this);
      if (operationCase_ == 1) {
        if (connectBuilder_ == null) {
          result.operation_ = operation_;
        } else {
          result.operation_ = connectBuilder_.build();
        }
      }
      if (operationCase_ == 2) {
        if (acceptBuilder_ == null) {
          result.operation_ = operation_;
        } else {
          result.operation_ = acceptBuilder_.build();
        }
      }
      if (operationCase_ == 3) {
        if (closeBuilder_ == null) {
          result.operation_ = operation_;
        } else {
          result.operation_ = closeBuilder_.build();
        }
      }
      if (operationCase_ == 4) {
        if (readBuilder_ == null) {
          result.operation_ = operation_;
        } else {
          result.operation_ = readBuilder_.build();
        }
      }
      if (operationCase_ == 5) {
        if (writeBuilder_ == null) {
          result.operation_ = operation_;
        } else {
          result.operation_ = writeBuilder_.build();
        }
      }
      result.operationCase_ = operationCase_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof AccessLogKernelLog) {
        return mergeFrom((AccessLogKernelLog)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(AccessLogKernelLog other) {
      if (other == AccessLogKernelLog.getDefaultInstance()) return this;
      switch (other.getOperationCase()) {
        case CONNECT: {
          mergeConnect(other.getConnect());
          break;
        }
        case ACCEPT: {
          mergeAccept(other.getAccept());
          break;
        }
        case CLOSE: {
          mergeClose(other.getClose());
          break;
        }
        case READ: {
          mergeRead(other.getRead());
          break;
        }
        case WRITE: {
          mergeWrite(other.getWrite());
          break;
        }
        case OPERATION_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      AccessLogKernelLog parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (AccessLogKernelLog) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int operationCase_ = 0;
    private Object operation_;
    public OperationCase
        getOperationCase() {
      return OperationCase.forNumber(
          operationCase_);
    }

    public Builder clearOperation() {
      operationCase_ = 0;
      operation_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        AccessLogKernelConnectOperation, AccessLogKernelConnectOperation.Builder, AccessLogKernelConnectOperationOrBuilder> connectBuilder_;
    /**
     * <code>.skywalking.v3.AccessLogKernelConnectOperation connect = 1;</code>
     * @return Whether the connect field is set.
     */
    @Override
    public boolean hasConnect() {
      return operationCase_ == 1;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelConnectOperation connect = 1;</code>
     * @return The connect.
     */
    @Override
    public AccessLogKernelConnectOperation getConnect() {
      if (connectBuilder_ == null) {
        if (operationCase_ == 1) {
          return (AccessLogKernelConnectOperation) operation_;
        }
        return AccessLogKernelConnectOperation.getDefaultInstance();
      } else {
        if (operationCase_ == 1) {
          return connectBuilder_.getMessage();
        }
        return AccessLogKernelConnectOperation.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelConnectOperation connect = 1;</code>
     */
    public Builder setConnect(AccessLogKernelConnectOperation value) {
      if (connectBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        operation_ = value;
        onChanged();
      } else {
        connectBuilder_.setMessage(value);
      }
      operationCase_ = 1;
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelConnectOperation connect = 1;</code>
     */
    public Builder setConnect(
        AccessLogKernelConnectOperation.Builder builderForValue) {
      if (connectBuilder_ == null) {
        operation_ = builderForValue.build();
        onChanged();
      } else {
        connectBuilder_.setMessage(builderForValue.build());
      }
      operationCase_ = 1;
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelConnectOperation connect = 1;</code>
     */
    public Builder mergeConnect(AccessLogKernelConnectOperation value) {
      if (connectBuilder_ == null) {
        if (operationCase_ == 1 &&
            operation_ != AccessLogKernelConnectOperation.getDefaultInstance()) {
          operation_ = AccessLogKernelConnectOperation.newBuilder((AccessLogKernelConnectOperation) operation_)
              .mergeFrom(value).buildPartial();
        } else {
          operation_ = value;
        }
        onChanged();
      } else {
        if (operationCase_ == 1) {
          connectBuilder_.mergeFrom(value);
        }
        connectBuilder_.setMessage(value);
      }
      operationCase_ = 1;
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelConnectOperation connect = 1;</code>
     */
    public Builder clearConnect() {
      if (connectBuilder_ == null) {
        if (operationCase_ == 1) {
          operationCase_ = 0;
          operation_ = null;
          onChanged();
        }
      } else {
        if (operationCase_ == 1) {
          operationCase_ = 0;
          operation_ = null;
        }
        connectBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelConnectOperation connect = 1;</code>
     */
    public AccessLogKernelConnectOperation.Builder getConnectBuilder() {
      return getConnectFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelConnectOperation connect = 1;</code>
     */
    @Override
    public AccessLogKernelConnectOperationOrBuilder getConnectOrBuilder() {
      if ((operationCase_ == 1) && (connectBuilder_ != null)) {
        return connectBuilder_.getMessageOrBuilder();
      } else {
        if (operationCase_ == 1) {
          return (AccessLogKernelConnectOperation) operation_;
        }
        return AccessLogKernelConnectOperation.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelConnectOperation connect = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        AccessLogKernelConnectOperation, AccessLogKernelConnectOperation.Builder, AccessLogKernelConnectOperationOrBuilder>
        getConnectFieldBuilder() {
      if (connectBuilder_ == null) {
        if (!(operationCase_ == 1)) {
          operation_ = AccessLogKernelConnectOperation.getDefaultInstance();
        }
        connectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            AccessLogKernelConnectOperation, AccessLogKernelConnectOperation.Builder, AccessLogKernelConnectOperationOrBuilder>(
                (AccessLogKernelConnectOperation) operation_,
                getParentForChildren(),
                isClean());
        operation_ = null;
      }
      operationCase_ = 1;
      onChanged();;
      return connectBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        AccessLogKernelAcceptOperation, AccessLogKernelAcceptOperation.Builder, AccessLogKernelAcceptOperationOrBuilder> acceptBuilder_;
    /**
     * <code>.skywalking.v3.AccessLogKernelAcceptOperation accept = 2;</code>
     * @return Whether the accept field is set.
     */
    @Override
    public boolean hasAccept() {
      return operationCase_ == 2;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelAcceptOperation accept = 2;</code>
     * @return The accept.
     */
    @Override
    public AccessLogKernelAcceptOperation getAccept() {
      if (acceptBuilder_ == null) {
        if (operationCase_ == 2) {
          return (AccessLogKernelAcceptOperation) operation_;
        }
        return AccessLogKernelAcceptOperation.getDefaultInstance();
      } else {
        if (operationCase_ == 2) {
          return acceptBuilder_.getMessage();
        }
        return AccessLogKernelAcceptOperation.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelAcceptOperation accept = 2;</code>
     */
    public Builder setAccept(AccessLogKernelAcceptOperation value) {
      if (acceptBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        operation_ = value;
        onChanged();
      } else {
        acceptBuilder_.setMessage(value);
      }
      operationCase_ = 2;
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelAcceptOperation accept = 2;</code>
     */
    public Builder setAccept(
        AccessLogKernelAcceptOperation.Builder builderForValue) {
      if (acceptBuilder_ == null) {
        operation_ = builderForValue.build();
        onChanged();
      } else {
        acceptBuilder_.setMessage(builderForValue.build());
      }
      operationCase_ = 2;
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelAcceptOperation accept = 2;</code>
     */
    public Builder mergeAccept(AccessLogKernelAcceptOperation value) {
      if (acceptBuilder_ == null) {
        if (operationCase_ == 2 &&
            operation_ != AccessLogKernelAcceptOperation.getDefaultInstance()) {
          operation_ = AccessLogKernelAcceptOperation.newBuilder((AccessLogKernelAcceptOperation) operation_)
              .mergeFrom(value).buildPartial();
        } else {
          operation_ = value;
        }
        onChanged();
      } else {
        if (operationCase_ == 2) {
          acceptBuilder_.mergeFrom(value);
        }
        acceptBuilder_.setMessage(value);
      }
      operationCase_ = 2;
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelAcceptOperation accept = 2;</code>
     */
    public Builder clearAccept() {
      if (acceptBuilder_ == null) {
        if (operationCase_ == 2) {
          operationCase_ = 0;
          operation_ = null;
          onChanged();
        }
      } else {
        if (operationCase_ == 2) {
          operationCase_ = 0;
          operation_ = null;
        }
        acceptBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelAcceptOperation accept = 2;</code>
     */
    public AccessLogKernelAcceptOperation.Builder getAcceptBuilder() {
      return getAcceptFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelAcceptOperation accept = 2;</code>
     */
    @Override
    public AccessLogKernelAcceptOperationOrBuilder getAcceptOrBuilder() {
      if ((operationCase_ == 2) && (acceptBuilder_ != null)) {
        return acceptBuilder_.getMessageOrBuilder();
      } else {
        if (operationCase_ == 2) {
          return (AccessLogKernelAcceptOperation) operation_;
        }
        return AccessLogKernelAcceptOperation.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelAcceptOperation accept = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        AccessLogKernelAcceptOperation, AccessLogKernelAcceptOperation.Builder, AccessLogKernelAcceptOperationOrBuilder>
        getAcceptFieldBuilder() {
      if (acceptBuilder_ == null) {
        if (!(operationCase_ == 2)) {
          operation_ = AccessLogKernelAcceptOperation.getDefaultInstance();
        }
        acceptBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            AccessLogKernelAcceptOperation, AccessLogKernelAcceptOperation.Builder, AccessLogKernelAcceptOperationOrBuilder>(
                (AccessLogKernelAcceptOperation) operation_,
                getParentForChildren(),
                isClean());
        operation_ = null;
      }
      operationCase_ = 2;
      onChanged();;
      return acceptBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        AccessLogKernelCloseOperation, AccessLogKernelCloseOperation.Builder, AccessLogKernelCloseOperationOrBuilder> closeBuilder_;
    /**
     * <code>.skywalking.v3.AccessLogKernelCloseOperation close = 3;</code>
     * @return Whether the close field is set.
     */
    @Override
    public boolean hasClose() {
      return operationCase_ == 3;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelCloseOperation close = 3;</code>
     * @return The close.
     */
    @Override
    public AccessLogKernelCloseOperation getClose() {
      if (closeBuilder_ == null) {
        if (operationCase_ == 3) {
          return (AccessLogKernelCloseOperation) operation_;
        }
        return AccessLogKernelCloseOperation.getDefaultInstance();
      } else {
        if (operationCase_ == 3) {
          return closeBuilder_.getMessage();
        }
        return AccessLogKernelCloseOperation.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelCloseOperation close = 3;</code>
     */
    public Builder setClose(AccessLogKernelCloseOperation value) {
      if (closeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        operation_ = value;
        onChanged();
      } else {
        closeBuilder_.setMessage(value);
      }
      operationCase_ = 3;
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelCloseOperation close = 3;</code>
     */
    public Builder setClose(
        AccessLogKernelCloseOperation.Builder builderForValue) {
      if (closeBuilder_ == null) {
        operation_ = builderForValue.build();
        onChanged();
      } else {
        closeBuilder_.setMessage(builderForValue.build());
      }
      operationCase_ = 3;
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelCloseOperation close = 3;</code>
     */
    public Builder mergeClose(AccessLogKernelCloseOperation value) {
      if (closeBuilder_ == null) {
        if (operationCase_ == 3 &&
            operation_ != AccessLogKernelCloseOperation.getDefaultInstance()) {
          operation_ = AccessLogKernelCloseOperation.newBuilder((AccessLogKernelCloseOperation) operation_)
              .mergeFrom(value).buildPartial();
        } else {
          operation_ = value;
        }
        onChanged();
      } else {
        if (operationCase_ == 3) {
          closeBuilder_.mergeFrom(value);
        }
        closeBuilder_.setMessage(value);
      }
      operationCase_ = 3;
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelCloseOperation close = 3;</code>
     */
    public Builder clearClose() {
      if (closeBuilder_ == null) {
        if (operationCase_ == 3) {
          operationCase_ = 0;
          operation_ = null;
          onChanged();
        }
      } else {
        if (operationCase_ == 3) {
          operationCase_ = 0;
          operation_ = null;
        }
        closeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelCloseOperation close = 3;</code>
     */
    public AccessLogKernelCloseOperation.Builder getCloseBuilder() {
      return getCloseFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelCloseOperation close = 3;</code>
     */
    @Override
    public AccessLogKernelCloseOperationOrBuilder getCloseOrBuilder() {
      if ((operationCase_ == 3) && (closeBuilder_ != null)) {
        return closeBuilder_.getMessageOrBuilder();
      } else {
        if (operationCase_ == 3) {
          return (AccessLogKernelCloseOperation) operation_;
        }
        return AccessLogKernelCloseOperation.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelCloseOperation close = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        AccessLogKernelCloseOperation, AccessLogKernelCloseOperation.Builder, AccessLogKernelCloseOperationOrBuilder>
        getCloseFieldBuilder() {
      if (closeBuilder_ == null) {
        if (!(operationCase_ == 3)) {
          operation_ = AccessLogKernelCloseOperation.getDefaultInstance();
        }
        closeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            AccessLogKernelCloseOperation, AccessLogKernelCloseOperation.Builder, AccessLogKernelCloseOperationOrBuilder>(
                (AccessLogKernelCloseOperation) operation_,
                getParentForChildren(),
                isClean());
        operation_ = null;
      }
      operationCase_ = 3;
      onChanged();;
      return closeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        AccessLogKernelReadOperation, AccessLogKernelReadOperation.Builder, AccessLogKernelReadOperationOrBuilder> readBuilder_;
    /**
     * <code>.skywalking.v3.AccessLogKernelReadOperation read = 4;</code>
     * @return Whether the read field is set.
     */
    @Override
    public boolean hasRead() {
      return operationCase_ == 4;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelReadOperation read = 4;</code>
     * @return The read.
     */
    @Override
    public AccessLogKernelReadOperation getRead() {
      if (readBuilder_ == null) {
        if (operationCase_ == 4) {
          return (AccessLogKernelReadOperation) operation_;
        }
        return AccessLogKernelReadOperation.getDefaultInstance();
      } else {
        if (operationCase_ == 4) {
          return readBuilder_.getMessage();
        }
        return AccessLogKernelReadOperation.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelReadOperation read = 4;</code>
     */
    public Builder setRead(AccessLogKernelReadOperation value) {
      if (readBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        operation_ = value;
        onChanged();
      } else {
        readBuilder_.setMessage(value);
      }
      operationCase_ = 4;
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelReadOperation read = 4;</code>
     */
    public Builder setRead(
        AccessLogKernelReadOperation.Builder builderForValue) {
      if (readBuilder_ == null) {
        operation_ = builderForValue.build();
        onChanged();
      } else {
        readBuilder_.setMessage(builderForValue.build());
      }
      operationCase_ = 4;
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelReadOperation read = 4;</code>
     */
    public Builder mergeRead(AccessLogKernelReadOperation value) {
      if (readBuilder_ == null) {
        if (operationCase_ == 4 &&
            operation_ != AccessLogKernelReadOperation.getDefaultInstance()) {
          operation_ = AccessLogKernelReadOperation.newBuilder((AccessLogKernelReadOperation) operation_)
              .mergeFrom(value).buildPartial();
        } else {
          operation_ = value;
        }
        onChanged();
      } else {
        if (operationCase_ == 4) {
          readBuilder_.mergeFrom(value);
        }
        readBuilder_.setMessage(value);
      }
      operationCase_ = 4;
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelReadOperation read = 4;</code>
     */
    public Builder clearRead() {
      if (readBuilder_ == null) {
        if (operationCase_ == 4) {
          operationCase_ = 0;
          operation_ = null;
          onChanged();
        }
      } else {
        if (operationCase_ == 4) {
          operationCase_ = 0;
          operation_ = null;
        }
        readBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelReadOperation read = 4;</code>
     */
    public AccessLogKernelReadOperation.Builder getReadBuilder() {
      return getReadFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelReadOperation read = 4;</code>
     */
    @Override
    public AccessLogKernelReadOperationOrBuilder getReadOrBuilder() {
      if ((operationCase_ == 4) && (readBuilder_ != null)) {
        return readBuilder_.getMessageOrBuilder();
      } else {
        if (operationCase_ == 4) {
          return (AccessLogKernelReadOperation) operation_;
        }
        return AccessLogKernelReadOperation.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelReadOperation read = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        AccessLogKernelReadOperation, AccessLogKernelReadOperation.Builder, AccessLogKernelReadOperationOrBuilder>
        getReadFieldBuilder() {
      if (readBuilder_ == null) {
        if (!(operationCase_ == 4)) {
          operation_ = AccessLogKernelReadOperation.getDefaultInstance();
        }
        readBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            AccessLogKernelReadOperation, AccessLogKernelReadOperation.Builder, AccessLogKernelReadOperationOrBuilder>(
                (AccessLogKernelReadOperation) operation_,
                getParentForChildren(),
                isClean());
        operation_ = null;
      }
      operationCase_ = 4;
      onChanged();;
      return readBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        AccessLogKernelWriteOperation, AccessLogKernelWriteOperation.Builder, AccessLogKernelWriteOperationOrBuilder> writeBuilder_;
    /**
     * <code>.skywalking.v3.AccessLogKernelWriteOperation write = 5;</code>
     * @return Whether the write field is set.
     */
    @Override
    public boolean hasWrite() {
      return operationCase_ == 5;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelWriteOperation write = 5;</code>
     * @return The write.
     */
    @Override
    public AccessLogKernelWriteOperation getWrite() {
      if (writeBuilder_ == null) {
        if (operationCase_ == 5) {
          return (AccessLogKernelWriteOperation) operation_;
        }
        return AccessLogKernelWriteOperation.getDefaultInstance();
      } else {
        if (operationCase_ == 5) {
          return writeBuilder_.getMessage();
        }
        return AccessLogKernelWriteOperation.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelWriteOperation write = 5;</code>
     */
    public Builder setWrite(AccessLogKernelWriteOperation value) {
      if (writeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        operation_ = value;
        onChanged();
      } else {
        writeBuilder_.setMessage(value);
      }
      operationCase_ = 5;
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelWriteOperation write = 5;</code>
     */
    public Builder setWrite(
        AccessLogKernelWriteOperation.Builder builderForValue) {
      if (writeBuilder_ == null) {
        operation_ = builderForValue.build();
        onChanged();
      } else {
        writeBuilder_.setMessage(builderForValue.build());
      }
      operationCase_ = 5;
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelWriteOperation write = 5;</code>
     */
    public Builder mergeWrite(AccessLogKernelWriteOperation value) {
      if (writeBuilder_ == null) {
        if (operationCase_ == 5 &&
            operation_ != AccessLogKernelWriteOperation.getDefaultInstance()) {
          operation_ = AccessLogKernelWriteOperation.newBuilder((AccessLogKernelWriteOperation) operation_)
              .mergeFrom(value).buildPartial();
        } else {
          operation_ = value;
        }
        onChanged();
      } else {
        if (operationCase_ == 5) {
          writeBuilder_.mergeFrom(value);
        }
        writeBuilder_.setMessage(value);
      }
      operationCase_ = 5;
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelWriteOperation write = 5;</code>
     */
    public Builder clearWrite() {
      if (writeBuilder_ == null) {
        if (operationCase_ == 5) {
          operationCase_ = 0;
          operation_ = null;
          onChanged();
        }
      } else {
        if (operationCase_ == 5) {
          operationCase_ = 0;
          operation_ = null;
        }
        writeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelWriteOperation write = 5;</code>
     */
    public AccessLogKernelWriteOperation.Builder getWriteBuilder() {
      return getWriteFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelWriteOperation write = 5;</code>
     */
    @Override
    public AccessLogKernelWriteOperationOrBuilder getWriteOrBuilder() {
      if ((operationCase_ == 5) && (writeBuilder_ != null)) {
        return writeBuilder_.getMessageOrBuilder();
      } else {
        if (operationCase_ == 5) {
          return (AccessLogKernelWriteOperation) operation_;
        }
        return AccessLogKernelWriteOperation.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.AccessLogKernelWriteOperation write = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        AccessLogKernelWriteOperation, AccessLogKernelWriteOperation.Builder, AccessLogKernelWriteOperationOrBuilder>
        getWriteFieldBuilder() {
      if (writeBuilder_ == null) {
        if (!(operationCase_ == 5)) {
          operation_ = AccessLogKernelWriteOperation.getDefaultInstance();
        }
        writeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            AccessLogKernelWriteOperation, AccessLogKernelWriteOperation.Builder, AccessLogKernelWriteOperationOrBuilder>(
                (AccessLogKernelWriteOperation) operation_,
                getParentForChildren(),
                isClean());
        operation_ = null;
      }
      operationCase_ = 5;
      onChanged();;
      return writeBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.AccessLogKernelLog)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.AccessLogKernelLog)
  private static final AccessLogKernelLog DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new AccessLogKernelLog();
  }

  public static AccessLogKernelLog getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AccessLogKernelLog>
      PARSER = new com.google.protobuf.AbstractParser<AccessLogKernelLog>() {
    @Override
    public AccessLogKernelLog parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AccessLogKernelLog(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AccessLogKernelLog> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<AccessLogKernelLog> getParserForType() {
    return PARSER;
  }

  @Override
  public AccessLogKernelLog getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

