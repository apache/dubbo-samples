// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/accesslog.proto

package org.apache.skywalking.apm.network.ebpf.accesslog.v3;

/**
 * Protobuf type {@code skywalking.v3.EBPFTimestamp}
 */
public final class EBPFTimestamp extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.EBPFTimestamp)
    EBPFTimestampOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EBPFTimestamp.newBuilder() to construct.
  private EBPFTimestamp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EBPFTimestamp() {
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new EBPFTimestamp();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private EBPFTimestamp(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            EBPFOffsetTimestamp.Builder subBuilder = null;
            if (timestampCase_ == 1) {
              subBuilder = ((EBPFOffsetTimestamp) timestamp_).toBuilder();
            }
            timestamp_ =
                input.readMessage(EBPFOffsetTimestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((EBPFOffsetTimestamp) timestamp_);
              timestamp_ = subBuilder.buildPartial();
            }
            timestampCase_ = 1;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Accesslog.internal_static_skywalking_v3_EBPFTimestamp_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Accesslog.internal_static_skywalking_v3_EBPFTimestamp_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            EBPFTimestamp.class, Builder.class);
  }

  private int timestampCase_ = 0;
  private Object timestamp_;
  public enum TimestampCase
      implements com.google.protobuf.Internal.EnumLite,
          InternalOneOfEnum {
    OFFSET(1),
    TIMESTAMP_NOT_SET(0);
    private final int value;
    private TimestampCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static TimestampCase valueOf(int value) {
      return forNumber(value);
    }

    public static TimestampCase forNumber(int value) {
      switch (value) {
        case 1: return OFFSET;
        case 0: return TIMESTAMP_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public TimestampCase
  getTimestampCase() {
    return TimestampCase.forNumber(
        timestampCase_);
  }

  public static final int OFFSET_FIELD_NUMBER = 1;
  /**
   * <code>.skywalking.v3.EBPFOffsetTimestamp offset = 1;</code>
   * @return Whether the offset field is set.
   */
  @Override
  public boolean hasOffset() {
    return timestampCase_ == 1;
  }
  /**
   * <code>.skywalking.v3.EBPFOffsetTimestamp offset = 1;</code>
   * @return The offset.
   */
  @Override
  public EBPFOffsetTimestamp getOffset() {
    if (timestampCase_ == 1) {
       return (EBPFOffsetTimestamp) timestamp_;
    }
    return EBPFOffsetTimestamp.getDefaultInstance();
  }
  /**
   * <code>.skywalking.v3.EBPFOffsetTimestamp offset = 1;</code>
   */
  @Override
  public EBPFOffsetTimestampOrBuilder getOffsetOrBuilder() {
    if (timestampCase_ == 1) {
       return (EBPFOffsetTimestamp) timestamp_;
    }
    return EBPFOffsetTimestamp.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (timestampCase_ == 1) {
      output.writeMessage(1, (EBPFOffsetTimestamp) timestamp_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (timestampCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (EBPFOffsetTimestamp) timestamp_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof EBPFTimestamp)) {
      return super.equals(obj);
    }
    EBPFTimestamp other = (EBPFTimestamp) obj;

    if (!getTimestampCase().equals(other.getTimestampCase())) return false;
    switch (timestampCase_) {
      case 1:
        if (!getOffset()
            .equals(other.getOffset())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (timestampCase_) {
      case 1:
        hash = (37 * hash) + OFFSET_FIELD_NUMBER;
        hash = (53 * hash) + getOffset().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static EBPFTimestamp parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static EBPFTimestamp parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static EBPFTimestamp parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static EBPFTimestamp parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static EBPFTimestamp parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static EBPFTimestamp parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static EBPFTimestamp parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static EBPFTimestamp parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static EBPFTimestamp parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static EBPFTimestamp parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static EBPFTimestamp parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static EBPFTimestamp parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(EBPFTimestamp prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code skywalking.v3.EBPFTimestamp}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.EBPFTimestamp)
      EBPFTimestampOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Accesslog.internal_static_skywalking_v3_EBPFTimestamp_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Accesslog.internal_static_skywalking_v3_EBPFTimestamp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EBPFTimestamp.class, Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.ebpf.accesslog.v3.EBPFTimestamp.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      timestampCase_ = 0;
      timestamp_ = null;
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Accesslog.internal_static_skywalking_v3_EBPFTimestamp_descriptor;
    }

    @Override
    public EBPFTimestamp getDefaultInstanceForType() {
      return EBPFTimestamp.getDefaultInstance();
    }

    @Override
    public EBPFTimestamp build() {
      EBPFTimestamp result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public EBPFTimestamp buildPartial() {
      EBPFTimestamp result = new EBPFTimestamp(this);
      if (timestampCase_ == 1) {
        if (offsetBuilder_ == null) {
          result.timestamp_ = timestamp_;
        } else {
          result.timestamp_ = offsetBuilder_.build();
        }
      }
      result.timestampCase_ = timestampCase_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof EBPFTimestamp) {
        return mergeFrom((EBPFTimestamp)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(EBPFTimestamp other) {
      if (other == EBPFTimestamp.getDefaultInstance()) return this;
      switch (other.getTimestampCase()) {
        case OFFSET: {
          mergeOffset(other.getOffset());
          break;
        }
        case TIMESTAMP_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      EBPFTimestamp parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (EBPFTimestamp) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int timestampCase_ = 0;
    private Object timestamp_;
    public TimestampCase
        getTimestampCase() {
      return TimestampCase.forNumber(
          timestampCase_);
    }

    public Builder clearTimestamp() {
      timestampCase_ = 0;
      timestamp_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        EBPFOffsetTimestamp, EBPFOffsetTimestamp.Builder, EBPFOffsetTimestampOrBuilder> offsetBuilder_;
    /**
     * <code>.skywalking.v3.EBPFOffsetTimestamp offset = 1;</code>
     * @return Whether the offset field is set.
     */
    @Override
    public boolean hasOffset() {
      return timestampCase_ == 1;
    }
    /**
     * <code>.skywalking.v3.EBPFOffsetTimestamp offset = 1;</code>
     * @return The offset.
     */
    @Override
    public EBPFOffsetTimestamp getOffset() {
      if (offsetBuilder_ == null) {
        if (timestampCase_ == 1) {
          return (EBPFOffsetTimestamp) timestamp_;
        }
        return EBPFOffsetTimestamp.getDefaultInstance();
      } else {
        if (timestampCase_ == 1) {
          return offsetBuilder_.getMessage();
        }
        return EBPFOffsetTimestamp.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.EBPFOffsetTimestamp offset = 1;</code>
     */
    public Builder setOffset(EBPFOffsetTimestamp value) {
      if (offsetBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        timestamp_ = value;
        onChanged();
      } else {
        offsetBuilder_.setMessage(value);
      }
      timestampCase_ = 1;
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFOffsetTimestamp offset = 1;</code>
     */
    public Builder setOffset(
        EBPFOffsetTimestamp.Builder builderForValue) {
      if (offsetBuilder_ == null) {
        timestamp_ = builderForValue.build();
        onChanged();
      } else {
        offsetBuilder_.setMessage(builderForValue.build());
      }
      timestampCase_ = 1;
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFOffsetTimestamp offset = 1;</code>
     */
    public Builder mergeOffset(EBPFOffsetTimestamp value) {
      if (offsetBuilder_ == null) {
        if (timestampCase_ == 1 &&
            timestamp_ != EBPFOffsetTimestamp.getDefaultInstance()) {
          timestamp_ = EBPFOffsetTimestamp.newBuilder((EBPFOffsetTimestamp) timestamp_)
              .mergeFrom(value).buildPartial();
        } else {
          timestamp_ = value;
        }
        onChanged();
      } else {
        if (timestampCase_ == 1) {
          offsetBuilder_.mergeFrom(value);
        }
        offsetBuilder_.setMessage(value);
      }
      timestampCase_ = 1;
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFOffsetTimestamp offset = 1;</code>
     */
    public Builder clearOffset() {
      if (offsetBuilder_ == null) {
        if (timestampCase_ == 1) {
          timestampCase_ = 0;
          timestamp_ = null;
          onChanged();
        }
      } else {
        if (timestampCase_ == 1) {
          timestampCase_ = 0;
          timestamp_ = null;
        }
        offsetBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFOffsetTimestamp offset = 1;</code>
     */
    public EBPFOffsetTimestamp.Builder getOffsetBuilder() {
      return getOffsetFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.EBPFOffsetTimestamp offset = 1;</code>
     */
    @Override
    public EBPFOffsetTimestampOrBuilder getOffsetOrBuilder() {
      if ((timestampCase_ == 1) && (offsetBuilder_ != null)) {
        return offsetBuilder_.getMessageOrBuilder();
      } else {
        if (timestampCase_ == 1) {
          return (EBPFOffsetTimestamp) timestamp_;
        }
        return EBPFOffsetTimestamp.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.EBPFOffsetTimestamp offset = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        EBPFOffsetTimestamp, EBPFOffsetTimestamp.Builder, EBPFOffsetTimestampOrBuilder>
        getOffsetFieldBuilder() {
      if (offsetBuilder_ == null) {
        if (!(timestampCase_ == 1)) {
          timestamp_ = EBPFOffsetTimestamp.getDefaultInstance();
        }
        offsetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            EBPFOffsetTimestamp, EBPFOffsetTimestamp.Builder, EBPFOffsetTimestampOrBuilder>(
                (EBPFOffsetTimestamp) timestamp_,
                getParentForChildren(),
                isClean());
        timestamp_ = null;
      }
      timestampCase_ = 1;
      onChanged();;
      return offsetBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.EBPFTimestamp)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.EBPFTimestamp)
  private static final EBPFTimestamp DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new EBPFTimestamp();
  }

  public static EBPFTimestamp getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EBPFTimestamp>
      PARSER = new com.google.protobuf.AbstractParser<EBPFTimestamp>() {
    @Override
    public EBPFTimestamp parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new EBPFTimestamp(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<EBPFTimestamp> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<EBPFTimestamp> getParserForType() {
    return PARSER;
  }

  @Override
  public EBPFTimestamp getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

