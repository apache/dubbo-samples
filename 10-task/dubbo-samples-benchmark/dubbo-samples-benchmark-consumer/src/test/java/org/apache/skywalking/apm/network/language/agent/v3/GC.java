// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: language-agent/JVMMetric.proto

package org.apache.skywalking.apm.network.language.agent.v3;

/**
 * Protobuf type {@code skywalking.v3.GC}
 */
public final class GC extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.GC)
    GCOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GC.newBuilder() to construct.
  private GC(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GC() {
    phase_ = 0;
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new GC();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private GC(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            phase_ = rawValue;
            break;
          }
          case 16: {

            count_ = input.readInt64();
            break;
          }
          case 24: {

            time_ = input.readInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return JVMMetricOuterClass.internal_static_skywalking_v3_GC_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return JVMMetricOuterClass.internal_static_skywalking_v3_GC_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            GC.class, Builder.class);
  }

  public static final int PHASE_FIELD_NUMBER = 1;
  private int phase_;
  /**
   * <code>.skywalking.v3.GCPhase phase = 1;</code>
   * @return The enum numeric value on the wire for phase.
   */
  @Override public int getPhaseValue() {
    return phase_;
  }
  /**
   * <code>.skywalking.v3.GCPhase phase = 1;</code>
   * @return The phase.
   */
  @Override public GCPhase getPhase() {
    @SuppressWarnings("deprecation")
    GCPhase result = GCPhase.valueOf(phase_);
    return result == null ? GCPhase.UNRECOGNIZED : result;
  }

  public static final int COUNT_FIELD_NUMBER = 2;
  private long count_;
  /**
   * <code>int64 count = 2;</code>
   * @return The count.
   */
  @Override
  public long getCount() {
    return count_;
  }

  public static final int TIME_FIELD_NUMBER = 3;
  private long time_;
  /**
   * <code>int64 time = 3;</code>
   * @return The time.
   */
  @Override
  public long getTime() {
    return time_;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (phase_ != GCPhase.NEW.getNumber()) {
      output.writeEnum(1, phase_);
    }
    if (count_ != 0L) {
      output.writeInt64(2, count_);
    }
    if (time_ != 0L) {
      output.writeInt64(3, time_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (phase_ != GCPhase.NEW.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, phase_);
    }
    if (count_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, count_);
    }
    if (time_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, time_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof GC)) {
      return super.equals(obj);
    }
    GC other = (GC) obj;

    if (phase_ != other.phase_) return false;
    if (getCount()
        != other.getCount()) return false;
    if (getTime()
        != other.getTime()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PHASE_FIELD_NUMBER;
    hash = (53 * hash) + phase_;
    hash = (37 * hash) + COUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getCount());
    hash = (37 * hash) + TIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTime());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static GC parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static GC parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static GC parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static GC parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static GC parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static GC parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static GC parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static GC parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static GC parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static GC parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static GC parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static GC parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(GC prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code skywalking.v3.GC}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.GC)
      GCOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return JVMMetricOuterClass.internal_static_skywalking_v3_GC_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return JVMMetricOuterClass.internal_static_skywalking_v3_GC_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GC.class, Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.language.agent.v3.GC.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      phase_ = 0;

      count_ = 0L;

      time_ = 0L;

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return JVMMetricOuterClass.internal_static_skywalking_v3_GC_descriptor;
    }

    @Override
    public GC getDefaultInstanceForType() {
      return GC.getDefaultInstance();
    }

    @Override
    public GC build() {
      GC result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public GC buildPartial() {
      GC result = new GC(this);
      result.phase_ = phase_;
      result.count_ = count_;
      result.time_ = time_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof GC) {
        return mergeFrom((GC)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(GC other) {
      if (other == GC.getDefaultInstance()) return this;
      if (other.phase_ != 0) {
        setPhaseValue(other.getPhaseValue());
      }
      if (other.getCount() != 0L) {
        setCount(other.getCount());
      }
      if (other.getTime() != 0L) {
        setTime(other.getTime());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      GC parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (GC) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int phase_ = 0;
    /**
     * <code>.skywalking.v3.GCPhase phase = 1;</code>
     * @return The enum numeric value on the wire for phase.
     */
    @Override public int getPhaseValue() {
      return phase_;
    }
    /**
     * <code>.skywalking.v3.GCPhase phase = 1;</code>
     * @param value The enum numeric value on the wire for phase to set.
     * @return This builder for chaining.
     */
    public Builder setPhaseValue(int value) {

      phase_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.skywalking.v3.GCPhase phase = 1;</code>
     * @return The phase.
     */
    @Override
    public GCPhase getPhase() {
      @SuppressWarnings("deprecation")
      GCPhase result = GCPhase.valueOf(phase_);
      return result == null ? GCPhase.UNRECOGNIZED : result;
    }
    /**
     * <code>.skywalking.v3.GCPhase phase = 1;</code>
     * @param value The phase to set.
     * @return This builder for chaining.
     */
    public Builder setPhase(GCPhase value) {
      if (value == null) {
        throw new NullPointerException();
      }

      phase_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.skywalking.v3.GCPhase phase = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearPhase() {

      phase_ = 0;
      onChanged();
      return this;
    }

    private long count_ ;
    /**
     * <code>int64 count = 2;</code>
     * @return The count.
     */
    @Override
    public long getCount() {
      return count_;
    }
    /**
     * <code>int64 count = 2;</code>
     * @param value The count to set.
     * @return This builder for chaining.
     */
    public Builder setCount(long value) {

      count_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 count = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearCount() {

      count_ = 0L;
      onChanged();
      return this;
    }

    private long time_ ;
    /**
     * <code>int64 time = 3;</code>
     * @return The time.
     */
    @Override
    public long getTime() {
      return time_;
    }
    /**
     * <code>int64 time = 3;</code>
     * @param value The time to set.
     * @return This builder for chaining.
     */
    public Builder setTime(long value) {

      time_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 time = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearTime() {

      time_ = 0L;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.GC)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.GC)
  private static final GC DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new GC();
  }

  public static GC getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GC>
      PARSER = new com.google.protobuf.AbstractParser<GC>() {
    @Override
    public GC parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new GC(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GC> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<GC> getParserForType() {
    return PARSER;
  }

  @Override
  public GC getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

