// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/profiling/Profile.proto

package org.apache.skywalking.apm.network.ebpf.profiling.v3;

public interface EBPFProfilingStackMetadataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:skywalking.v3.EBPFProfilingStackMetadata)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * stack type
   * </pre>
   *
   * <code>.skywalking.v3.EBPFProfilingStackType stackType = 1;</code>
   * @return The enum numeric value on the wire for stackType.
   */
  int getStackTypeValue();
  /**
   * <pre>
   * stack type
   * </pre>
   *
   * <code>.skywalking.v3.EBPFProfilingStackType stackType = 1;</code>
   * @return The stackType.
   */
  EBPFProfilingStackType getStackType();

  /**
   * <pre>
   * stack id from kernel provide
   * </pre>
   *
   * <code>int32 stackId = 2;</code>
   * @return The stackId.
   */
  int getStackId();

  /**
   * <pre>
   * stack symbols
   * </pre>
   *
   * <code>repeated string stackSymbols = 3;</code>
   * @return A list containing the stackSymbols.
   */
  java.util.List<String>
      getStackSymbolsList();
  /**
   * <pre>
   * stack symbols
   * </pre>
   *
   * <code>repeated string stackSymbols = 3;</code>
   * @return The count of stackSymbols.
   */
  int getStackSymbolsCount();
  /**
   * <pre>
   * stack symbols
   * </pre>
   *
   * <code>repeated string stackSymbols = 3;</code>
   * @param index The index of the element to return.
   * @return The stackSymbols at the given index.
   */
  String getStackSymbols(int index);
  /**
   * <pre>
   * stack symbols
   * </pre>
   *
   * <code>repeated string stackSymbols = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the stackSymbols at the given index.
   */
  com.google.protobuf.ByteString
      getStackSymbolsBytes(int index);
}
