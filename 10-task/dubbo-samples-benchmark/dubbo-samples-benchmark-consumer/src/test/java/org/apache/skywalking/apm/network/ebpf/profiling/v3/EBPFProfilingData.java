// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/profiling/Profile.proto

package org.apache.skywalking.apm.network.ebpf.profiling.v3;

/**
 * Protobuf type {@code skywalking.v3.EBPFProfilingData}
 */
public final class EBPFProfilingData extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.EBPFProfilingData)
    EBPFProfilingDataOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EBPFProfilingData.newBuilder() to construct.
  private EBPFProfilingData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EBPFProfilingData() {
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new EBPFProfilingData();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private EBPFProfilingData(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            EBPFProfilingTaskMetadata.Builder subBuilder = null;
            if (task_ != null) {
              subBuilder = task_.toBuilder();
            }
            task_ = input.readMessage(EBPFProfilingTaskMetadata.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(task_);
              task_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            EBPFOnCPUProfiling.Builder subBuilder = null;
            if (profilingCase_ == 2) {
              subBuilder = ((EBPFOnCPUProfiling) profiling_).toBuilder();
            }
            profiling_ =
                input.readMessage(EBPFOnCPUProfiling.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((EBPFOnCPUProfiling) profiling_);
              profiling_ = subBuilder.buildPartial();
            }
            profilingCase_ = 2;
            break;
          }
          case 26: {
            EBPFOffCPUProfiling.Builder subBuilder = null;
            if (profilingCase_ == 3) {
              subBuilder = ((EBPFOffCPUProfiling) profiling_).toBuilder();
            }
            profiling_ =
                input.readMessage(EBPFOffCPUProfiling.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((EBPFOffCPUProfiling) profiling_);
              profiling_ = subBuilder.buildPartial();
            }
            profilingCase_ = 3;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Profile.internal_static_skywalking_v3_EBPFProfilingData_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Profile.internal_static_skywalking_v3_EBPFProfilingData_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            EBPFProfilingData.class, Builder.class);
  }

  private int profilingCase_ = 0;
  private Object profiling_;
  public enum ProfilingCase
      implements com.google.protobuf.Internal.EnumLite,
          InternalOneOfEnum {
    ONCPU(2),
    OFFCPU(3),
    PROFILING_NOT_SET(0);
    private final int value;
    private ProfilingCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static ProfilingCase valueOf(int value) {
      return forNumber(value);
    }

    public static ProfilingCase forNumber(int value) {
      switch (value) {
        case 2: return ONCPU;
        case 3: return OFFCPU;
        case 0: return PROFILING_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ProfilingCase
  getProfilingCase() {
    return ProfilingCase.forNumber(
        profilingCase_);
  }

  public static final int TASK_FIELD_NUMBER = 1;
  private EBPFProfilingTaskMetadata task_;
  /**
   * <pre>
   * task metadata
   * </pre>
   *
   * <code>.skywalking.v3.EBPFProfilingTaskMetadata task = 1;</code>
   * @return Whether the task field is set.
   */
  @Override
  public boolean hasTask() {
    return task_ != null;
  }
  /**
   * <pre>
   * task metadata
   * </pre>
   *
   * <code>.skywalking.v3.EBPFProfilingTaskMetadata task = 1;</code>
   * @return The task.
   */
  @Override
  public EBPFProfilingTaskMetadata getTask() {
    return task_ == null ? EBPFProfilingTaskMetadata.getDefaultInstance() : task_;
  }
  /**
   * <pre>
   * task metadata
   * </pre>
   *
   * <code>.skywalking.v3.EBPFProfilingTaskMetadata task = 1;</code>
   */
  @Override
  public EBPFProfilingTaskMetadataOrBuilder getTaskOrBuilder() {
    return getTask();
  }

  public static final int ONCPU_FIELD_NUMBER = 2;
  /**
   * <code>.skywalking.v3.EBPFOnCPUProfiling onCPU = 2;</code>
   * @return Whether the onCPU field is set.
   */
  @Override
  public boolean hasOnCPU() {
    return profilingCase_ == 2;
  }
  /**
   * <code>.skywalking.v3.EBPFOnCPUProfiling onCPU = 2;</code>
   * @return The onCPU.
   */
  @Override
  public EBPFOnCPUProfiling getOnCPU() {
    if (profilingCase_ == 2) {
       return (EBPFOnCPUProfiling) profiling_;
    }
    return EBPFOnCPUProfiling.getDefaultInstance();
  }
  /**
   * <code>.skywalking.v3.EBPFOnCPUProfiling onCPU = 2;</code>
   */
  @Override
  public EBPFOnCPUProfilingOrBuilder getOnCPUOrBuilder() {
    if (profilingCase_ == 2) {
       return (EBPFOnCPUProfiling) profiling_;
    }
    return EBPFOnCPUProfiling.getDefaultInstance();
  }

  public static final int OFFCPU_FIELD_NUMBER = 3;
  /**
   * <code>.skywalking.v3.EBPFOffCPUProfiling offCPU = 3;</code>
   * @return Whether the offCPU field is set.
   */
  @Override
  public boolean hasOffCPU() {
    return profilingCase_ == 3;
  }
  /**
   * <code>.skywalking.v3.EBPFOffCPUProfiling offCPU = 3;</code>
   * @return The offCPU.
   */
  @Override
  public EBPFOffCPUProfiling getOffCPU() {
    if (profilingCase_ == 3) {
       return (EBPFOffCPUProfiling) profiling_;
    }
    return EBPFOffCPUProfiling.getDefaultInstance();
  }
  /**
   * <code>.skywalking.v3.EBPFOffCPUProfiling offCPU = 3;</code>
   */
  @Override
  public EBPFOffCPUProfilingOrBuilder getOffCPUOrBuilder() {
    if (profilingCase_ == 3) {
       return (EBPFOffCPUProfiling) profiling_;
    }
    return EBPFOffCPUProfiling.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (task_ != null) {
      output.writeMessage(1, getTask());
    }
    if (profilingCase_ == 2) {
      output.writeMessage(2, (EBPFOnCPUProfiling) profiling_);
    }
    if (profilingCase_ == 3) {
      output.writeMessage(3, (EBPFOffCPUProfiling) profiling_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (task_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getTask());
    }
    if (profilingCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (EBPFOnCPUProfiling) profiling_);
    }
    if (profilingCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (EBPFOffCPUProfiling) profiling_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof EBPFProfilingData)) {
      return super.equals(obj);
    }
    EBPFProfilingData other = (EBPFProfilingData) obj;

    if (hasTask() != other.hasTask()) return false;
    if (hasTask()) {
      if (!getTask()
          .equals(other.getTask())) return false;
    }
    if (!getProfilingCase().equals(other.getProfilingCase())) return false;
    switch (profilingCase_) {
      case 2:
        if (!getOnCPU()
            .equals(other.getOnCPU())) return false;
        break;
      case 3:
        if (!getOffCPU()
            .equals(other.getOffCPU())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTask()) {
      hash = (37 * hash) + TASK_FIELD_NUMBER;
      hash = (53 * hash) + getTask().hashCode();
    }
    switch (profilingCase_) {
      case 2:
        hash = (37 * hash) + ONCPU_FIELD_NUMBER;
        hash = (53 * hash) + getOnCPU().hashCode();
        break;
      case 3:
        hash = (37 * hash) + OFFCPU_FIELD_NUMBER;
        hash = (53 * hash) + getOffCPU().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static EBPFProfilingData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static EBPFProfilingData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static EBPFProfilingData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static EBPFProfilingData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static EBPFProfilingData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static EBPFProfilingData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static EBPFProfilingData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static EBPFProfilingData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static EBPFProfilingData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static EBPFProfilingData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static EBPFProfilingData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static EBPFProfilingData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(EBPFProfilingData prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code skywalking.v3.EBPFProfilingData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.EBPFProfilingData)
      EBPFProfilingDataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Profile.internal_static_skywalking_v3_EBPFProfilingData_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Profile.internal_static_skywalking_v3_EBPFProfilingData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EBPFProfilingData.class, Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingData.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      if (taskBuilder_ == null) {
        task_ = null;
      } else {
        task_ = null;
        taskBuilder_ = null;
      }
      profilingCase_ = 0;
      profiling_ = null;
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Profile.internal_static_skywalking_v3_EBPFProfilingData_descriptor;
    }

    @Override
    public EBPFProfilingData getDefaultInstanceForType() {
      return EBPFProfilingData.getDefaultInstance();
    }

    @Override
    public EBPFProfilingData build() {
      EBPFProfilingData result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public EBPFProfilingData buildPartial() {
      EBPFProfilingData result = new EBPFProfilingData(this);
      if (taskBuilder_ == null) {
        result.task_ = task_;
      } else {
        result.task_ = taskBuilder_.build();
      }
      if (profilingCase_ == 2) {
        if (onCPUBuilder_ == null) {
          result.profiling_ = profiling_;
        } else {
          result.profiling_ = onCPUBuilder_.build();
        }
      }
      if (profilingCase_ == 3) {
        if (offCPUBuilder_ == null) {
          result.profiling_ = profiling_;
        } else {
          result.profiling_ = offCPUBuilder_.build();
        }
      }
      result.profilingCase_ = profilingCase_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof EBPFProfilingData) {
        return mergeFrom((EBPFProfilingData)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(EBPFProfilingData other) {
      if (other == EBPFProfilingData.getDefaultInstance()) return this;
      if (other.hasTask()) {
        mergeTask(other.getTask());
      }
      switch (other.getProfilingCase()) {
        case ONCPU: {
          mergeOnCPU(other.getOnCPU());
          break;
        }
        case OFFCPU: {
          mergeOffCPU(other.getOffCPU());
          break;
        }
        case PROFILING_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      EBPFProfilingData parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (EBPFProfilingData) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int profilingCase_ = 0;
    private Object profiling_;
    public ProfilingCase
        getProfilingCase() {
      return ProfilingCase.forNumber(
          profilingCase_);
    }

    public Builder clearProfiling() {
      profilingCase_ = 0;
      profiling_ = null;
      onChanged();
      return this;
    }


    private EBPFProfilingTaskMetadata task_;
    private com.google.protobuf.SingleFieldBuilderV3<
        EBPFProfilingTaskMetadata, EBPFProfilingTaskMetadata.Builder, EBPFProfilingTaskMetadataOrBuilder> taskBuilder_;
    /**
     * <pre>
     * task metadata
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProfilingTaskMetadata task = 1;</code>
     * @return Whether the task field is set.
     */
    public boolean hasTask() {
      return taskBuilder_ != null || task_ != null;
    }
    /**
     * <pre>
     * task metadata
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProfilingTaskMetadata task = 1;</code>
     * @return The task.
     */
    public EBPFProfilingTaskMetadata getTask() {
      if (taskBuilder_ == null) {
        return task_ == null ? EBPFProfilingTaskMetadata.getDefaultInstance() : task_;
      } else {
        return taskBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * task metadata
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProfilingTaskMetadata task = 1;</code>
     */
    public Builder setTask(EBPFProfilingTaskMetadata value) {
      if (taskBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        task_ = value;
        onChanged();
      } else {
        taskBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * task metadata
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProfilingTaskMetadata task = 1;</code>
     */
    public Builder setTask(
        EBPFProfilingTaskMetadata.Builder builderForValue) {
      if (taskBuilder_ == null) {
        task_ = builderForValue.build();
        onChanged();
      } else {
        taskBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * task metadata
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProfilingTaskMetadata task = 1;</code>
     */
    public Builder mergeTask(EBPFProfilingTaskMetadata value) {
      if (taskBuilder_ == null) {
        if (task_ != null) {
          task_ =
            EBPFProfilingTaskMetadata.newBuilder(task_).mergeFrom(value).buildPartial();
        } else {
          task_ = value;
        }
        onChanged();
      } else {
        taskBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * task metadata
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProfilingTaskMetadata task = 1;</code>
     */
    public Builder clearTask() {
      if (taskBuilder_ == null) {
        task_ = null;
        onChanged();
      } else {
        task_ = null;
        taskBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * task metadata
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProfilingTaskMetadata task = 1;</code>
     */
    public EBPFProfilingTaskMetadata.Builder getTaskBuilder() {

      onChanged();
      return getTaskFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * task metadata
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProfilingTaskMetadata task = 1;</code>
     */
    public EBPFProfilingTaskMetadataOrBuilder getTaskOrBuilder() {
      if (taskBuilder_ != null) {
        return taskBuilder_.getMessageOrBuilder();
      } else {
        return task_ == null ?
            EBPFProfilingTaskMetadata.getDefaultInstance() : task_;
      }
    }
    /**
     * <pre>
     * task metadata
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProfilingTaskMetadata task = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        EBPFProfilingTaskMetadata, EBPFProfilingTaskMetadata.Builder, EBPFProfilingTaskMetadataOrBuilder>
        getTaskFieldBuilder() {
      if (taskBuilder_ == null) {
        taskBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            EBPFProfilingTaskMetadata, EBPFProfilingTaskMetadata.Builder, EBPFProfilingTaskMetadataOrBuilder>(
                getTask(),
                getParentForChildren(),
                isClean());
        task_ = null;
      }
      return taskBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        EBPFOnCPUProfiling, EBPFOnCPUProfiling.Builder, EBPFOnCPUProfilingOrBuilder> onCPUBuilder_;
    /**
     * <code>.skywalking.v3.EBPFOnCPUProfiling onCPU = 2;</code>
     * @return Whether the onCPU field is set.
     */
    @Override
    public boolean hasOnCPU() {
      return profilingCase_ == 2;
    }
    /**
     * <code>.skywalking.v3.EBPFOnCPUProfiling onCPU = 2;</code>
     * @return The onCPU.
     */
    @Override
    public EBPFOnCPUProfiling getOnCPU() {
      if (onCPUBuilder_ == null) {
        if (profilingCase_ == 2) {
          return (EBPFOnCPUProfiling) profiling_;
        }
        return EBPFOnCPUProfiling.getDefaultInstance();
      } else {
        if (profilingCase_ == 2) {
          return onCPUBuilder_.getMessage();
        }
        return EBPFOnCPUProfiling.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.EBPFOnCPUProfiling onCPU = 2;</code>
     */
    public Builder setOnCPU(EBPFOnCPUProfiling value) {
      if (onCPUBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        profiling_ = value;
        onChanged();
      } else {
        onCPUBuilder_.setMessage(value);
      }
      profilingCase_ = 2;
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFOnCPUProfiling onCPU = 2;</code>
     */
    public Builder setOnCPU(
        EBPFOnCPUProfiling.Builder builderForValue) {
      if (onCPUBuilder_ == null) {
        profiling_ = builderForValue.build();
        onChanged();
      } else {
        onCPUBuilder_.setMessage(builderForValue.build());
      }
      profilingCase_ = 2;
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFOnCPUProfiling onCPU = 2;</code>
     */
    public Builder mergeOnCPU(EBPFOnCPUProfiling value) {
      if (onCPUBuilder_ == null) {
        if (profilingCase_ == 2 &&
            profiling_ != EBPFOnCPUProfiling.getDefaultInstance()) {
          profiling_ = EBPFOnCPUProfiling.newBuilder((EBPFOnCPUProfiling) profiling_)
              .mergeFrom(value).buildPartial();
        } else {
          profiling_ = value;
        }
        onChanged();
      } else {
        if (profilingCase_ == 2) {
          onCPUBuilder_.mergeFrom(value);
        }
        onCPUBuilder_.setMessage(value);
      }
      profilingCase_ = 2;
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFOnCPUProfiling onCPU = 2;</code>
     */
    public Builder clearOnCPU() {
      if (onCPUBuilder_ == null) {
        if (profilingCase_ == 2) {
          profilingCase_ = 0;
          profiling_ = null;
          onChanged();
        }
      } else {
        if (profilingCase_ == 2) {
          profilingCase_ = 0;
          profiling_ = null;
        }
        onCPUBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFOnCPUProfiling onCPU = 2;</code>
     */
    public EBPFOnCPUProfiling.Builder getOnCPUBuilder() {
      return getOnCPUFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.EBPFOnCPUProfiling onCPU = 2;</code>
     */
    @Override
    public EBPFOnCPUProfilingOrBuilder getOnCPUOrBuilder() {
      if ((profilingCase_ == 2) && (onCPUBuilder_ != null)) {
        return onCPUBuilder_.getMessageOrBuilder();
      } else {
        if (profilingCase_ == 2) {
          return (EBPFOnCPUProfiling) profiling_;
        }
        return EBPFOnCPUProfiling.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.EBPFOnCPUProfiling onCPU = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        EBPFOnCPUProfiling, EBPFOnCPUProfiling.Builder, EBPFOnCPUProfilingOrBuilder>
        getOnCPUFieldBuilder() {
      if (onCPUBuilder_ == null) {
        if (!(profilingCase_ == 2)) {
          profiling_ = EBPFOnCPUProfiling.getDefaultInstance();
        }
        onCPUBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            EBPFOnCPUProfiling, EBPFOnCPUProfiling.Builder, EBPFOnCPUProfilingOrBuilder>(
                (EBPFOnCPUProfiling) profiling_,
                getParentForChildren(),
                isClean());
        profiling_ = null;
      }
      profilingCase_ = 2;
      onChanged();;
      return onCPUBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        EBPFOffCPUProfiling, EBPFOffCPUProfiling.Builder, EBPFOffCPUProfilingOrBuilder> offCPUBuilder_;
    /**
     * <code>.skywalking.v3.EBPFOffCPUProfiling offCPU = 3;</code>
     * @return Whether the offCPU field is set.
     */
    @Override
    public boolean hasOffCPU() {
      return profilingCase_ == 3;
    }
    /**
     * <code>.skywalking.v3.EBPFOffCPUProfiling offCPU = 3;</code>
     * @return The offCPU.
     */
    @Override
    public EBPFOffCPUProfiling getOffCPU() {
      if (offCPUBuilder_ == null) {
        if (profilingCase_ == 3) {
          return (EBPFOffCPUProfiling) profiling_;
        }
        return EBPFOffCPUProfiling.getDefaultInstance();
      } else {
        if (profilingCase_ == 3) {
          return offCPUBuilder_.getMessage();
        }
        return EBPFOffCPUProfiling.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.EBPFOffCPUProfiling offCPU = 3;</code>
     */
    public Builder setOffCPU(EBPFOffCPUProfiling value) {
      if (offCPUBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        profiling_ = value;
        onChanged();
      } else {
        offCPUBuilder_.setMessage(value);
      }
      profilingCase_ = 3;
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFOffCPUProfiling offCPU = 3;</code>
     */
    public Builder setOffCPU(
        EBPFOffCPUProfiling.Builder builderForValue) {
      if (offCPUBuilder_ == null) {
        profiling_ = builderForValue.build();
        onChanged();
      } else {
        offCPUBuilder_.setMessage(builderForValue.build());
      }
      profilingCase_ = 3;
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFOffCPUProfiling offCPU = 3;</code>
     */
    public Builder mergeOffCPU(EBPFOffCPUProfiling value) {
      if (offCPUBuilder_ == null) {
        if (profilingCase_ == 3 &&
            profiling_ != EBPFOffCPUProfiling.getDefaultInstance()) {
          profiling_ = EBPFOffCPUProfiling.newBuilder((EBPFOffCPUProfiling) profiling_)
              .mergeFrom(value).buildPartial();
        } else {
          profiling_ = value;
        }
        onChanged();
      } else {
        if (profilingCase_ == 3) {
          offCPUBuilder_.mergeFrom(value);
        }
        offCPUBuilder_.setMessage(value);
      }
      profilingCase_ = 3;
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFOffCPUProfiling offCPU = 3;</code>
     */
    public Builder clearOffCPU() {
      if (offCPUBuilder_ == null) {
        if (profilingCase_ == 3) {
          profilingCase_ = 0;
          profiling_ = null;
          onChanged();
        }
      } else {
        if (profilingCase_ == 3) {
          profilingCase_ = 0;
          profiling_ = null;
        }
        offCPUBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFOffCPUProfiling offCPU = 3;</code>
     */
    public EBPFOffCPUProfiling.Builder getOffCPUBuilder() {
      return getOffCPUFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.EBPFOffCPUProfiling offCPU = 3;</code>
     */
    @Override
    public EBPFOffCPUProfilingOrBuilder getOffCPUOrBuilder() {
      if ((profilingCase_ == 3) && (offCPUBuilder_ != null)) {
        return offCPUBuilder_.getMessageOrBuilder();
      } else {
        if (profilingCase_ == 3) {
          return (EBPFOffCPUProfiling) profiling_;
        }
        return EBPFOffCPUProfiling.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.EBPFOffCPUProfiling offCPU = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        EBPFOffCPUProfiling, EBPFOffCPUProfiling.Builder, EBPFOffCPUProfilingOrBuilder>
        getOffCPUFieldBuilder() {
      if (offCPUBuilder_ == null) {
        if (!(profilingCase_ == 3)) {
          profiling_ = EBPFOffCPUProfiling.getDefaultInstance();
        }
        offCPUBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            EBPFOffCPUProfiling, EBPFOffCPUProfiling.Builder, EBPFOffCPUProfilingOrBuilder>(
                (EBPFOffCPUProfiling) profiling_,
                getParentForChildren(),
                isClean());
        profiling_ = null;
      }
      profilingCase_ = 3;
      onChanged();;
      return offCPUBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.EBPFProfilingData)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.EBPFProfilingData)
  private static final EBPFProfilingData DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new EBPFProfilingData();
  }

  public static EBPFProfilingData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EBPFProfilingData>
      PARSER = new com.google.protobuf.AbstractParser<EBPFProfilingData>() {
    @Override
    public EBPFProfilingData parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new EBPFProfilingData(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<EBPFProfilingData> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<EBPFProfilingData> getParserForType() {
    return PARSER;
  }

  @Override
  public EBPFProfilingData getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

