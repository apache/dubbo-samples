// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/accesslog.proto

package org.apache.skywalking.apm.network.ebpf.accesslog.v3;

/**
 * Protobuf type {@code skywalking.v3.AccessLogHTTPProtocol}
 */
public final class AccessLogHTTPProtocol extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.AccessLogHTTPProtocol)
    AccessLogHTTPProtocolOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AccessLogHTTPProtocol.newBuilder() to construct.
  private AccessLogHTTPProtocol(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AccessLogHTTPProtocol() {
    version_ = 0;
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new AccessLogHTTPProtocol();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AccessLogHTTPProtocol(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            EBPFTimestamp.Builder subBuilder = null;
            if (startTime_ != null) {
              subBuilder = startTime_.toBuilder();
            }
            startTime_ = input.readMessage(EBPFTimestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(startTime_);
              startTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            EBPFTimestamp.Builder subBuilder = null;
            if (endTime_ != null) {
              subBuilder = endTime_.toBuilder();
            }
            endTime_ = input.readMessage(EBPFTimestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(endTime_);
              endTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 24: {
            int rawValue = input.readEnum();

            version_ = rawValue;
            break;
          }
          case 34: {
            AccessLogHTTPProtocolRequest.Builder subBuilder = null;
            if (request_ != null) {
              subBuilder = request_.toBuilder();
            }
            request_ = input.readMessage(AccessLogHTTPProtocolRequest.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(request_);
              request_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            AccessLogHTTPProtocolResponse.Builder subBuilder = null;
            if (response_ != null) {
              subBuilder = response_.toBuilder();
            }
            response_ = input.readMessage(AccessLogHTTPProtocolResponse.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(response_);
              response_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Accesslog.internal_static_skywalking_v3_AccessLogHTTPProtocol_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Accesslog.internal_static_skywalking_v3_AccessLogHTTPProtocol_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            AccessLogHTTPProtocol.class, Builder.class);
  }

  public static final int STARTTIME_FIELD_NUMBER = 1;
  private EBPFTimestamp startTime_;
  /**
   * <pre>
   * first bytes receive/write timestamp
   * </pre>
   *
   * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
   * @return Whether the startTime field is set.
   */
  @Override
  public boolean hasStartTime() {
    return startTime_ != null;
  }
  /**
   * <pre>
   * first bytes receive/write timestamp
   * </pre>
   *
   * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
   * @return The startTime.
   */
  @Override
  public EBPFTimestamp getStartTime() {
    return startTime_ == null ? EBPFTimestamp.getDefaultInstance() : startTime_;
  }
  /**
   * <pre>
   * first bytes receive/write timestamp
   * </pre>
   *
   * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
   */
  @Override
  public EBPFTimestampOrBuilder getStartTimeOrBuilder() {
    return getStartTime();
  }

  public static final int ENDTIME_FIELD_NUMBER = 2;
  private EBPFTimestamp endTime_;
  /**
   * <pre>
   * last bytes receive/write timestamp
   * </pre>
   *
   * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
   * @return Whether the endTime field is set.
   */
  @Override
  public boolean hasEndTime() {
    return endTime_ != null;
  }
  /**
   * <pre>
   * last bytes receive/write timestamp
   * </pre>
   *
   * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
   * @return The endTime.
   */
  @Override
  public EBPFTimestamp getEndTime() {
    return endTime_ == null ? EBPFTimestamp.getDefaultInstance() : endTime_;
  }
  /**
   * <pre>
   * last bytes receive/write timestamp
   * </pre>
   *
   * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
   */
  @Override
  public EBPFTimestampOrBuilder getEndTimeOrBuilder() {
    return getEndTime();
  }

  public static final int VERSION_FIELD_NUMBER = 3;
  private int version_;
  /**
   * <code>.skywalking.v3.AccessLogHTTPProtocolVersion version = 3;</code>
   * @return The enum numeric value on the wire for version.
   */
  @Override public int getVersionValue() {
    return version_;
  }
  /**
   * <code>.skywalking.v3.AccessLogHTTPProtocolVersion version = 3;</code>
   * @return The version.
   */
  @Override public AccessLogHTTPProtocolVersion getVersion() {
    @SuppressWarnings("deprecation")
    AccessLogHTTPProtocolVersion result = AccessLogHTTPProtocolVersion.valueOf(version_);
    return result == null ? AccessLogHTTPProtocolVersion.UNRECOGNIZED : result;
  }

  public static final int REQUEST_FIELD_NUMBER = 4;
  private AccessLogHTTPProtocolRequest request_;
  /**
   * <code>.skywalking.v3.AccessLogHTTPProtocolRequest request = 4;</code>
   * @return Whether the request field is set.
   */
  @Override
  public boolean hasRequest() {
    return request_ != null;
  }
  /**
   * <code>.skywalking.v3.AccessLogHTTPProtocolRequest request = 4;</code>
   * @return The request.
   */
  @Override
  public AccessLogHTTPProtocolRequest getRequest() {
    return request_ == null ? AccessLogHTTPProtocolRequest.getDefaultInstance() : request_;
  }
  /**
   * <code>.skywalking.v3.AccessLogHTTPProtocolRequest request = 4;</code>
   */
  @Override
  public AccessLogHTTPProtocolRequestOrBuilder getRequestOrBuilder() {
    return getRequest();
  }

  public static final int RESPONSE_FIELD_NUMBER = 5;
  private AccessLogHTTPProtocolResponse response_;
  /**
   * <code>.skywalking.v3.AccessLogHTTPProtocolResponse response = 5;</code>
   * @return Whether the response field is set.
   */
  @Override
  public boolean hasResponse() {
    return response_ != null;
  }
  /**
   * <code>.skywalking.v3.AccessLogHTTPProtocolResponse response = 5;</code>
   * @return The response.
   */
  @Override
  public AccessLogHTTPProtocolResponse getResponse() {
    return response_ == null ? AccessLogHTTPProtocolResponse.getDefaultInstance() : response_;
  }
  /**
   * <code>.skywalking.v3.AccessLogHTTPProtocolResponse response = 5;</code>
   */
  @Override
  public AccessLogHTTPProtocolResponseOrBuilder getResponseOrBuilder() {
    return getResponse();
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (startTime_ != null) {
      output.writeMessage(1, getStartTime());
    }
    if (endTime_ != null) {
      output.writeMessage(2, getEndTime());
    }
    if (version_ != AccessLogHTTPProtocolVersion.HTTP1.getNumber()) {
      output.writeEnum(3, version_);
    }
    if (request_ != null) {
      output.writeMessage(4, getRequest());
    }
    if (response_ != null) {
      output.writeMessage(5, getResponse());
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (startTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getStartTime());
    }
    if (endTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getEndTime());
    }
    if (version_ != AccessLogHTTPProtocolVersion.HTTP1.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, version_);
    }
    if (request_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getRequest());
    }
    if (response_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getResponse());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof AccessLogHTTPProtocol)) {
      return super.equals(obj);
    }
    AccessLogHTTPProtocol other = (AccessLogHTTPProtocol) obj;

    if (hasStartTime() != other.hasStartTime()) return false;
    if (hasStartTime()) {
      if (!getStartTime()
          .equals(other.getStartTime())) return false;
    }
    if (hasEndTime() != other.hasEndTime()) return false;
    if (hasEndTime()) {
      if (!getEndTime()
          .equals(other.getEndTime())) return false;
    }
    if (version_ != other.version_) return false;
    if (hasRequest() != other.hasRequest()) return false;
    if (hasRequest()) {
      if (!getRequest()
          .equals(other.getRequest())) return false;
    }
    if (hasResponse() != other.hasResponse()) return false;
    if (hasResponse()) {
      if (!getResponse()
          .equals(other.getResponse())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasStartTime()) {
      hash = (37 * hash) + STARTTIME_FIELD_NUMBER;
      hash = (53 * hash) + getStartTime().hashCode();
    }
    if (hasEndTime()) {
      hash = (37 * hash) + ENDTIME_FIELD_NUMBER;
      hash = (53 * hash) + getEndTime().hashCode();
    }
    hash = (37 * hash) + VERSION_FIELD_NUMBER;
    hash = (53 * hash) + version_;
    if (hasRequest()) {
      hash = (37 * hash) + REQUEST_FIELD_NUMBER;
      hash = (53 * hash) + getRequest().hashCode();
    }
    if (hasResponse()) {
      hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
      hash = (53 * hash) + getResponse().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static AccessLogHTTPProtocol parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AccessLogHTTPProtocol parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AccessLogHTTPProtocol parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AccessLogHTTPProtocol parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AccessLogHTTPProtocol parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AccessLogHTTPProtocol parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AccessLogHTTPProtocol parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static AccessLogHTTPProtocol parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static AccessLogHTTPProtocol parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static AccessLogHTTPProtocol parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static AccessLogHTTPProtocol parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static AccessLogHTTPProtocol parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(AccessLogHTTPProtocol prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code skywalking.v3.AccessLogHTTPProtocol}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.AccessLogHTTPProtocol)
      AccessLogHTTPProtocolOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Accesslog.internal_static_skywalking_v3_AccessLogHTTPProtocol_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Accesslog.internal_static_skywalking_v3_AccessLogHTTPProtocol_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              AccessLogHTTPProtocol.class, Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.ebpf.accesslog.v3.AccessLogHTTPProtocol.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      if (startTimeBuilder_ == null) {
        startTime_ = null;
      } else {
        startTime_ = null;
        startTimeBuilder_ = null;
      }
      if (endTimeBuilder_ == null) {
        endTime_ = null;
      } else {
        endTime_ = null;
        endTimeBuilder_ = null;
      }
      version_ = 0;

      if (requestBuilder_ == null) {
        request_ = null;
      } else {
        request_ = null;
        requestBuilder_ = null;
      }
      if (responseBuilder_ == null) {
        response_ = null;
      } else {
        response_ = null;
        responseBuilder_ = null;
      }
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Accesslog.internal_static_skywalking_v3_AccessLogHTTPProtocol_descriptor;
    }

    @Override
    public AccessLogHTTPProtocol getDefaultInstanceForType() {
      return AccessLogHTTPProtocol.getDefaultInstance();
    }

    @Override
    public AccessLogHTTPProtocol build() {
      AccessLogHTTPProtocol result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public AccessLogHTTPProtocol buildPartial() {
      AccessLogHTTPProtocol result = new AccessLogHTTPProtocol(this);
      if (startTimeBuilder_ == null) {
        result.startTime_ = startTime_;
      } else {
        result.startTime_ = startTimeBuilder_.build();
      }
      if (endTimeBuilder_ == null) {
        result.endTime_ = endTime_;
      } else {
        result.endTime_ = endTimeBuilder_.build();
      }
      result.version_ = version_;
      if (requestBuilder_ == null) {
        result.request_ = request_;
      } else {
        result.request_ = requestBuilder_.build();
      }
      if (responseBuilder_ == null) {
        result.response_ = response_;
      } else {
        result.response_ = responseBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof AccessLogHTTPProtocol) {
        return mergeFrom((AccessLogHTTPProtocol)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(AccessLogHTTPProtocol other) {
      if (other == AccessLogHTTPProtocol.getDefaultInstance()) return this;
      if (other.hasStartTime()) {
        mergeStartTime(other.getStartTime());
      }
      if (other.hasEndTime()) {
        mergeEndTime(other.getEndTime());
      }
      if (other.version_ != 0) {
        setVersionValue(other.getVersionValue());
      }
      if (other.hasRequest()) {
        mergeRequest(other.getRequest());
      }
      if (other.hasResponse()) {
        mergeResponse(other.getResponse());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      AccessLogHTTPProtocol parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (AccessLogHTTPProtocol) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private EBPFTimestamp startTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        EBPFTimestamp, EBPFTimestamp.Builder, EBPFTimestampOrBuilder> startTimeBuilder_;
    /**
     * <pre>
     * first bytes receive/write timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
     * @return Whether the startTime field is set.
     */
    public boolean hasStartTime() {
      return startTimeBuilder_ != null || startTime_ != null;
    }
    /**
     * <pre>
     * first bytes receive/write timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
     * @return The startTime.
     */
    public EBPFTimestamp getStartTime() {
      if (startTimeBuilder_ == null) {
        return startTime_ == null ? EBPFTimestamp.getDefaultInstance() : startTime_;
      } else {
        return startTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * first bytes receive/write timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
     */
    public Builder setStartTime(EBPFTimestamp value) {
      if (startTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        startTime_ = value;
        onChanged();
      } else {
        startTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * first bytes receive/write timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
     */
    public Builder setStartTime(
        EBPFTimestamp.Builder builderForValue) {
      if (startTimeBuilder_ == null) {
        startTime_ = builderForValue.build();
        onChanged();
      } else {
        startTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * first bytes receive/write timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
     */
    public Builder mergeStartTime(EBPFTimestamp value) {
      if (startTimeBuilder_ == null) {
        if (startTime_ != null) {
          startTime_ =
            EBPFTimestamp.newBuilder(startTime_).mergeFrom(value).buildPartial();
        } else {
          startTime_ = value;
        }
        onChanged();
      } else {
        startTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * first bytes receive/write timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
     */
    public Builder clearStartTime() {
      if (startTimeBuilder_ == null) {
        startTime_ = null;
        onChanged();
      } else {
        startTime_ = null;
        startTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * first bytes receive/write timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
     */
    public EBPFTimestamp.Builder getStartTimeBuilder() {

      onChanged();
      return getStartTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * first bytes receive/write timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
     */
    public EBPFTimestampOrBuilder getStartTimeOrBuilder() {
      if (startTimeBuilder_ != null) {
        return startTimeBuilder_.getMessageOrBuilder();
      } else {
        return startTime_ == null ?
            EBPFTimestamp.getDefaultInstance() : startTime_;
      }
    }
    /**
     * <pre>
     * first bytes receive/write timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp startTime = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        EBPFTimestamp, EBPFTimestamp.Builder, EBPFTimestampOrBuilder>
        getStartTimeFieldBuilder() {
      if (startTimeBuilder_ == null) {
        startTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            EBPFTimestamp, EBPFTimestamp.Builder, EBPFTimestampOrBuilder>(
                getStartTime(),
                getParentForChildren(),
                isClean());
        startTime_ = null;
      }
      return startTimeBuilder_;
    }

    private EBPFTimestamp endTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        EBPFTimestamp, EBPFTimestamp.Builder, EBPFTimestampOrBuilder> endTimeBuilder_;
    /**
     * <pre>
     * last bytes receive/write timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
     * @return Whether the endTime field is set.
     */
    public boolean hasEndTime() {
      return endTimeBuilder_ != null || endTime_ != null;
    }
    /**
     * <pre>
     * last bytes receive/write timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
     * @return The endTime.
     */
    public EBPFTimestamp getEndTime() {
      if (endTimeBuilder_ == null) {
        return endTime_ == null ? EBPFTimestamp.getDefaultInstance() : endTime_;
      } else {
        return endTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * last bytes receive/write timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
     */
    public Builder setEndTime(EBPFTimestamp value) {
      if (endTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        endTime_ = value;
        onChanged();
      } else {
        endTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * last bytes receive/write timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
     */
    public Builder setEndTime(
        EBPFTimestamp.Builder builderForValue) {
      if (endTimeBuilder_ == null) {
        endTime_ = builderForValue.build();
        onChanged();
      } else {
        endTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * last bytes receive/write timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
     */
    public Builder mergeEndTime(EBPFTimestamp value) {
      if (endTimeBuilder_ == null) {
        if (endTime_ != null) {
          endTime_ =
            EBPFTimestamp.newBuilder(endTime_).mergeFrom(value).buildPartial();
        } else {
          endTime_ = value;
        }
        onChanged();
      } else {
        endTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * last bytes receive/write timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
     */
    public Builder clearEndTime() {
      if (endTimeBuilder_ == null) {
        endTime_ = null;
        onChanged();
      } else {
        endTime_ = null;
        endTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * last bytes receive/write timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
     */
    public EBPFTimestamp.Builder getEndTimeBuilder() {

      onChanged();
      return getEndTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * last bytes receive/write timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
     */
    public EBPFTimestampOrBuilder getEndTimeOrBuilder() {
      if (endTimeBuilder_ != null) {
        return endTimeBuilder_.getMessageOrBuilder();
      } else {
        return endTime_ == null ?
            EBPFTimestamp.getDefaultInstance() : endTime_;
      }
    }
    /**
     * <pre>
     * last bytes receive/write timestamp
     * </pre>
     *
     * <code>.skywalking.v3.EBPFTimestamp endTime = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        EBPFTimestamp, EBPFTimestamp.Builder, EBPFTimestampOrBuilder>
        getEndTimeFieldBuilder() {
      if (endTimeBuilder_ == null) {
        endTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            EBPFTimestamp, EBPFTimestamp.Builder, EBPFTimestampOrBuilder>(
                getEndTime(),
                getParentForChildren(),
                isClean());
        endTime_ = null;
      }
      return endTimeBuilder_;
    }

    private int version_ = 0;
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolVersion version = 3;</code>
     * @return The enum numeric value on the wire for version.
     */
    @Override public int getVersionValue() {
      return version_;
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolVersion version = 3;</code>
     * @param value The enum numeric value on the wire for version to set.
     * @return This builder for chaining.
     */
    public Builder setVersionValue(int value) {

      version_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolVersion version = 3;</code>
     * @return The version.
     */
    @Override
    public AccessLogHTTPProtocolVersion getVersion() {
      @SuppressWarnings("deprecation")
      AccessLogHTTPProtocolVersion result = AccessLogHTTPProtocolVersion.valueOf(version_);
      return result == null ? AccessLogHTTPProtocolVersion.UNRECOGNIZED : result;
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolVersion version = 3;</code>
     * @param value The version to set.
     * @return This builder for chaining.
     */
    public Builder setVersion(AccessLogHTTPProtocolVersion value) {
      if (value == null) {
        throw new NullPointerException();
      }

      version_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolVersion version = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearVersion() {

      version_ = 0;
      onChanged();
      return this;
    }

    private AccessLogHTTPProtocolRequest request_;
    private com.google.protobuf.SingleFieldBuilderV3<
        AccessLogHTTPProtocolRequest, AccessLogHTTPProtocolRequest.Builder, AccessLogHTTPProtocolRequestOrBuilder> requestBuilder_;
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolRequest request = 4;</code>
     * @return Whether the request field is set.
     */
    public boolean hasRequest() {
      return requestBuilder_ != null || request_ != null;
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolRequest request = 4;</code>
     * @return The request.
     */
    public AccessLogHTTPProtocolRequest getRequest() {
      if (requestBuilder_ == null) {
        return request_ == null ? AccessLogHTTPProtocolRequest.getDefaultInstance() : request_;
      } else {
        return requestBuilder_.getMessage();
      }
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolRequest request = 4;</code>
     */
    public Builder setRequest(AccessLogHTTPProtocolRequest value) {
      if (requestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        request_ = value;
        onChanged();
      } else {
        requestBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolRequest request = 4;</code>
     */
    public Builder setRequest(
        AccessLogHTTPProtocolRequest.Builder builderForValue) {
      if (requestBuilder_ == null) {
        request_ = builderForValue.build();
        onChanged();
      } else {
        requestBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolRequest request = 4;</code>
     */
    public Builder mergeRequest(AccessLogHTTPProtocolRequest value) {
      if (requestBuilder_ == null) {
        if (request_ != null) {
          request_ =
            AccessLogHTTPProtocolRequest.newBuilder(request_).mergeFrom(value).buildPartial();
        } else {
          request_ = value;
        }
        onChanged();
      } else {
        requestBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolRequest request = 4;</code>
     */
    public Builder clearRequest() {
      if (requestBuilder_ == null) {
        request_ = null;
        onChanged();
      } else {
        request_ = null;
        requestBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolRequest request = 4;</code>
     */
    public AccessLogHTTPProtocolRequest.Builder getRequestBuilder() {

      onChanged();
      return getRequestFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolRequest request = 4;</code>
     */
    public AccessLogHTTPProtocolRequestOrBuilder getRequestOrBuilder() {
      if (requestBuilder_ != null) {
        return requestBuilder_.getMessageOrBuilder();
      } else {
        return request_ == null ?
            AccessLogHTTPProtocolRequest.getDefaultInstance() : request_;
      }
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolRequest request = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        AccessLogHTTPProtocolRequest, AccessLogHTTPProtocolRequest.Builder, AccessLogHTTPProtocolRequestOrBuilder>
        getRequestFieldBuilder() {
      if (requestBuilder_ == null) {
        requestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            AccessLogHTTPProtocolRequest, AccessLogHTTPProtocolRequest.Builder, AccessLogHTTPProtocolRequestOrBuilder>(
                getRequest(),
                getParentForChildren(),
                isClean());
        request_ = null;
      }
      return requestBuilder_;
    }

    private AccessLogHTTPProtocolResponse response_;
    private com.google.protobuf.SingleFieldBuilderV3<
        AccessLogHTTPProtocolResponse, AccessLogHTTPProtocolResponse.Builder, AccessLogHTTPProtocolResponseOrBuilder> responseBuilder_;
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolResponse response = 5;</code>
     * @return Whether the response field is set.
     */
    public boolean hasResponse() {
      return responseBuilder_ != null || response_ != null;
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolResponse response = 5;</code>
     * @return The response.
     */
    public AccessLogHTTPProtocolResponse getResponse() {
      if (responseBuilder_ == null) {
        return response_ == null ? AccessLogHTTPProtocolResponse.getDefaultInstance() : response_;
      } else {
        return responseBuilder_.getMessage();
      }
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolResponse response = 5;</code>
     */
    public Builder setResponse(AccessLogHTTPProtocolResponse value) {
      if (responseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        response_ = value;
        onChanged();
      } else {
        responseBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolResponse response = 5;</code>
     */
    public Builder setResponse(
        AccessLogHTTPProtocolResponse.Builder builderForValue) {
      if (responseBuilder_ == null) {
        response_ = builderForValue.build();
        onChanged();
      } else {
        responseBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolResponse response = 5;</code>
     */
    public Builder mergeResponse(AccessLogHTTPProtocolResponse value) {
      if (responseBuilder_ == null) {
        if (response_ != null) {
          response_ =
            AccessLogHTTPProtocolResponse.newBuilder(response_).mergeFrom(value).buildPartial();
        } else {
          response_ = value;
        }
        onChanged();
      } else {
        responseBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolResponse response = 5;</code>
     */
    public Builder clearResponse() {
      if (responseBuilder_ == null) {
        response_ = null;
        onChanged();
      } else {
        response_ = null;
        responseBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolResponse response = 5;</code>
     */
    public AccessLogHTTPProtocolResponse.Builder getResponseBuilder() {

      onChanged();
      return getResponseFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolResponse response = 5;</code>
     */
    public AccessLogHTTPProtocolResponseOrBuilder getResponseOrBuilder() {
      if (responseBuilder_ != null) {
        return responseBuilder_.getMessageOrBuilder();
      } else {
        return response_ == null ?
            AccessLogHTTPProtocolResponse.getDefaultInstance() : response_;
      }
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolResponse response = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        AccessLogHTTPProtocolResponse, AccessLogHTTPProtocolResponse.Builder, AccessLogHTTPProtocolResponseOrBuilder>
        getResponseFieldBuilder() {
      if (responseBuilder_ == null) {
        responseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            AccessLogHTTPProtocolResponse, AccessLogHTTPProtocolResponse.Builder, AccessLogHTTPProtocolResponseOrBuilder>(
                getResponse(),
                getParentForChildren(),
                isClean());
        response_ = null;
      }
      return responseBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.AccessLogHTTPProtocol)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.AccessLogHTTPProtocol)
  private static final AccessLogHTTPProtocol DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new AccessLogHTTPProtocol();
  }

  public static AccessLogHTTPProtocol getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AccessLogHTTPProtocol>
      PARSER = new com.google.protobuf.AbstractParser<AccessLogHTTPProtocol>() {
    @Override
    public AccessLogHTTPProtocol parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AccessLogHTTPProtocol(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AccessLogHTTPProtocol> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<AccessLogHTTPProtocol> getParserForType() {
    return PARSER;
  }

  @Override
  public AccessLogHTTPProtocol getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

