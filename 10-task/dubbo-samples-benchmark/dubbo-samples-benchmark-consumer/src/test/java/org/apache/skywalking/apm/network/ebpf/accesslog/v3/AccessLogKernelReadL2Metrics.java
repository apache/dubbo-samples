// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/accesslog.proto

package org.apache.skywalking.apm.network.ebpf.accesslog.v3;

/**
 * Protobuf type {@code skywalking.v3.AccessLogKernelReadL2Metrics}
 */
public final class AccessLogKernelReadL2Metrics extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.AccessLogKernelReadL2Metrics)
    AccessLogKernelReadL2MetricsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AccessLogKernelReadL2Metrics.newBuilder() to construct.
  private AccessLogKernelReadL2Metrics(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AccessLogKernelReadL2Metrics() {
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new AccessLogKernelReadL2Metrics();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AccessLogKernelReadL2Metrics(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            ifindex_ = input.readUInt32();
            break;
          }
          case 16: {

            totalPackageCount_ = input.readUInt32();
            break;
          }
          case 24: {

            totalPackageSize_ = input.readUInt64();
            break;
          }
          case 32: {

            totalPackageToQueueDuration_ = input.readUInt64();
            break;
          }
          case 40: {

            totalRcvPackageFromQueueDuration_ = input.readUInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Accesslog.internal_static_skywalking_v3_AccessLogKernelReadL2Metrics_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Accesslog.internal_static_skywalking_v3_AccessLogKernelReadL2Metrics_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            AccessLogKernelReadL2Metrics.class, Builder.class);
  }

  public static final int IFINDEX_FIELD_NUMBER = 1;
  private int ifindex_;
  /**
   * <pre>
   * from network hardware interface index, get the net hardware name through EBPFAccessLogNodeNetInterface#index
   * </pre>
   *
   * <code>uint32 ifindex = 1;</code>
   * @return The ifindex.
   */
  @Override
  public int getIfindex() {
    return ifindex_;
  }

  public static final int TOTALPACKAGECOUNT_FIELD_NUMBER = 2;
  private int totalPackageCount_;
  /**
   * <pre>
   * total package count
   * </pre>
   *
   * <code>uint32 totalPackageCount = 2;</code>
   * @return The totalPackageCount.
   */
  @Override
  public int getTotalPackageCount() {
    return totalPackageCount_;
  }

  public static final int TOTALPACKAGESIZE_FIELD_NUMBER = 3;
  private long totalPackageSize_;
  /**
   * <pre>
   * total package size
   * </pre>
   *
   * <code>uint64 totalPackageSize = 3;</code>
   * @return The totalPackageSize.
   */
  @Override
  public long getTotalPackageSize() {
    return totalPackageSize_;
  }

  public static final int TOTALPACKAGETOQUEUEDURATION_FIELD_NUMBER = 4;
  private long totalPackageToQueueDuration_;
  /**
   * <pre>
   * total duration(nanosecond) of all data packets queued (waiting to be read).
   * </pre>
   *
   * <code>uint64 totalPackageToQueueDuration = 4;</code>
   * @return The totalPackageToQueueDuration.
   */
  @Override
  public long getTotalPackageToQueueDuration() {
    return totalPackageToQueueDuration_;
  }

  public static final int TOTALRCVPACKAGEFROMQUEUEDURATION_FIELD_NUMBER = 5;
  private long totalRcvPackageFromQueueDuration_;
  /**
   * <pre>
   * total duration(nanosecond) of all data packets read from the queue.
   * </pre>
   *
   * <code>uint64 totalRcvPackageFromQueueDuration = 5;</code>
   * @return The totalRcvPackageFromQueueDuration.
   */
  @Override
  public long getTotalRcvPackageFromQueueDuration() {
    return totalRcvPackageFromQueueDuration_;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (ifindex_ != 0) {
      output.writeUInt32(1, ifindex_);
    }
    if (totalPackageCount_ != 0) {
      output.writeUInt32(2, totalPackageCount_);
    }
    if (totalPackageSize_ != 0L) {
      output.writeUInt64(3, totalPackageSize_);
    }
    if (totalPackageToQueueDuration_ != 0L) {
      output.writeUInt64(4, totalPackageToQueueDuration_);
    }
    if (totalRcvPackageFromQueueDuration_ != 0L) {
      output.writeUInt64(5, totalRcvPackageFromQueueDuration_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (ifindex_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, ifindex_);
    }
    if (totalPackageCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, totalPackageCount_);
    }
    if (totalPackageSize_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, totalPackageSize_);
    }
    if (totalPackageToQueueDuration_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(4, totalPackageToQueueDuration_);
    }
    if (totalRcvPackageFromQueueDuration_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(5, totalRcvPackageFromQueueDuration_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof AccessLogKernelReadL2Metrics)) {
      return super.equals(obj);
    }
    AccessLogKernelReadL2Metrics other = (AccessLogKernelReadL2Metrics) obj;

    if (getIfindex()
        != other.getIfindex()) return false;
    if (getTotalPackageCount()
        != other.getTotalPackageCount()) return false;
    if (getTotalPackageSize()
        != other.getTotalPackageSize()) return false;
    if (getTotalPackageToQueueDuration()
        != other.getTotalPackageToQueueDuration()) return false;
    if (getTotalRcvPackageFromQueueDuration()
        != other.getTotalRcvPackageFromQueueDuration()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + IFINDEX_FIELD_NUMBER;
    hash = (53 * hash) + getIfindex();
    hash = (37 * hash) + TOTALPACKAGECOUNT_FIELD_NUMBER;
    hash = (53 * hash) + getTotalPackageCount();
    hash = (37 * hash) + TOTALPACKAGESIZE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalPackageSize());
    hash = (37 * hash) + TOTALPACKAGETOQUEUEDURATION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalPackageToQueueDuration());
    hash = (37 * hash) + TOTALRCVPACKAGEFROMQUEUEDURATION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalRcvPackageFromQueueDuration());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static AccessLogKernelReadL2Metrics parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AccessLogKernelReadL2Metrics parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AccessLogKernelReadL2Metrics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AccessLogKernelReadL2Metrics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AccessLogKernelReadL2Metrics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AccessLogKernelReadL2Metrics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AccessLogKernelReadL2Metrics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static AccessLogKernelReadL2Metrics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static AccessLogKernelReadL2Metrics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static AccessLogKernelReadL2Metrics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static AccessLogKernelReadL2Metrics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static AccessLogKernelReadL2Metrics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(AccessLogKernelReadL2Metrics prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code skywalking.v3.AccessLogKernelReadL2Metrics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.AccessLogKernelReadL2Metrics)
      AccessLogKernelReadL2MetricsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Accesslog.internal_static_skywalking_v3_AccessLogKernelReadL2Metrics_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Accesslog.internal_static_skywalking_v3_AccessLogKernelReadL2Metrics_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              AccessLogKernelReadL2Metrics.class, Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.ebpf.accesslog.v3.AccessLogKernelReadL2Metrics.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      ifindex_ = 0;

      totalPackageCount_ = 0;

      totalPackageSize_ = 0L;

      totalPackageToQueueDuration_ = 0L;

      totalRcvPackageFromQueueDuration_ = 0L;

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Accesslog.internal_static_skywalking_v3_AccessLogKernelReadL2Metrics_descriptor;
    }

    @Override
    public AccessLogKernelReadL2Metrics getDefaultInstanceForType() {
      return AccessLogKernelReadL2Metrics.getDefaultInstance();
    }

    @Override
    public AccessLogKernelReadL2Metrics build() {
      AccessLogKernelReadL2Metrics result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public AccessLogKernelReadL2Metrics buildPartial() {
      AccessLogKernelReadL2Metrics result = new AccessLogKernelReadL2Metrics(this);
      result.ifindex_ = ifindex_;
      result.totalPackageCount_ = totalPackageCount_;
      result.totalPackageSize_ = totalPackageSize_;
      result.totalPackageToQueueDuration_ = totalPackageToQueueDuration_;
      result.totalRcvPackageFromQueueDuration_ = totalRcvPackageFromQueueDuration_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof AccessLogKernelReadL2Metrics) {
        return mergeFrom((AccessLogKernelReadL2Metrics)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(AccessLogKernelReadL2Metrics other) {
      if (other == AccessLogKernelReadL2Metrics.getDefaultInstance()) return this;
      if (other.getIfindex() != 0) {
        setIfindex(other.getIfindex());
      }
      if (other.getTotalPackageCount() != 0) {
        setTotalPackageCount(other.getTotalPackageCount());
      }
      if (other.getTotalPackageSize() != 0L) {
        setTotalPackageSize(other.getTotalPackageSize());
      }
      if (other.getTotalPackageToQueueDuration() != 0L) {
        setTotalPackageToQueueDuration(other.getTotalPackageToQueueDuration());
      }
      if (other.getTotalRcvPackageFromQueueDuration() != 0L) {
        setTotalRcvPackageFromQueueDuration(other.getTotalRcvPackageFromQueueDuration());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      AccessLogKernelReadL2Metrics parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (AccessLogKernelReadL2Metrics) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int ifindex_ ;
    /**
     * <pre>
     * from network hardware interface index, get the net hardware name through EBPFAccessLogNodeNetInterface#index
     * </pre>
     *
     * <code>uint32 ifindex = 1;</code>
     * @return The ifindex.
     */
    @Override
    public int getIfindex() {
      return ifindex_;
    }
    /**
     * <pre>
     * from network hardware interface index, get the net hardware name through EBPFAccessLogNodeNetInterface#index
     * </pre>
     *
     * <code>uint32 ifindex = 1;</code>
     * @param value The ifindex to set.
     * @return This builder for chaining.
     */
    public Builder setIfindex(int value) {

      ifindex_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * from network hardware interface index, get the net hardware name through EBPFAccessLogNodeNetInterface#index
     * </pre>
     *
     * <code>uint32 ifindex = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearIfindex() {

      ifindex_ = 0;
      onChanged();
      return this;
    }

    private int totalPackageCount_ ;
    /**
     * <pre>
     * total package count
     * </pre>
     *
     * <code>uint32 totalPackageCount = 2;</code>
     * @return The totalPackageCount.
     */
    @Override
    public int getTotalPackageCount() {
      return totalPackageCount_;
    }
    /**
     * <pre>
     * total package count
     * </pre>
     *
     * <code>uint32 totalPackageCount = 2;</code>
     * @param value The totalPackageCount to set.
     * @return This builder for chaining.
     */
    public Builder setTotalPackageCount(int value) {

      totalPackageCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * total package count
     * </pre>
     *
     * <code>uint32 totalPackageCount = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalPackageCount() {

      totalPackageCount_ = 0;
      onChanged();
      return this;
    }

    private long totalPackageSize_ ;
    /**
     * <pre>
     * total package size
     * </pre>
     *
     * <code>uint64 totalPackageSize = 3;</code>
     * @return The totalPackageSize.
     */
    @Override
    public long getTotalPackageSize() {
      return totalPackageSize_;
    }
    /**
     * <pre>
     * total package size
     * </pre>
     *
     * <code>uint64 totalPackageSize = 3;</code>
     * @param value The totalPackageSize to set.
     * @return This builder for chaining.
     */
    public Builder setTotalPackageSize(long value) {

      totalPackageSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * total package size
     * </pre>
     *
     * <code>uint64 totalPackageSize = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalPackageSize() {

      totalPackageSize_ = 0L;
      onChanged();
      return this;
    }

    private long totalPackageToQueueDuration_ ;
    /**
     * <pre>
     * total duration(nanosecond) of all data packets queued (waiting to be read).
     * </pre>
     *
     * <code>uint64 totalPackageToQueueDuration = 4;</code>
     * @return The totalPackageToQueueDuration.
     */
    @Override
    public long getTotalPackageToQueueDuration() {
      return totalPackageToQueueDuration_;
    }
    /**
     * <pre>
     * total duration(nanosecond) of all data packets queued (waiting to be read).
     * </pre>
     *
     * <code>uint64 totalPackageToQueueDuration = 4;</code>
     * @param value The totalPackageToQueueDuration to set.
     * @return This builder for chaining.
     */
    public Builder setTotalPackageToQueueDuration(long value) {

      totalPackageToQueueDuration_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * total duration(nanosecond) of all data packets queued (waiting to be read).
     * </pre>
     *
     * <code>uint64 totalPackageToQueueDuration = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalPackageToQueueDuration() {

      totalPackageToQueueDuration_ = 0L;
      onChanged();
      return this;
    }

    private long totalRcvPackageFromQueueDuration_ ;
    /**
     * <pre>
     * total duration(nanosecond) of all data packets read from the queue.
     * </pre>
     *
     * <code>uint64 totalRcvPackageFromQueueDuration = 5;</code>
     * @return The totalRcvPackageFromQueueDuration.
     */
    @Override
    public long getTotalRcvPackageFromQueueDuration() {
      return totalRcvPackageFromQueueDuration_;
    }
    /**
     * <pre>
     * total duration(nanosecond) of all data packets read from the queue.
     * </pre>
     *
     * <code>uint64 totalRcvPackageFromQueueDuration = 5;</code>
     * @param value The totalRcvPackageFromQueueDuration to set.
     * @return This builder for chaining.
     */
    public Builder setTotalRcvPackageFromQueueDuration(long value) {

      totalRcvPackageFromQueueDuration_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * total duration(nanosecond) of all data packets read from the queue.
     * </pre>
     *
     * <code>uint64 totalRcvPackageFromQueueDuration = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalRcvPackageFromQueueDuration() {

      totalRcvPackageFromQueueDuration_ = 0L;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.AccessLogKernelReadL2Metrics)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.AccessLogKernelReadL2Metrics)
  private static final AccessLogKernelReadL2Metrics DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new AccessLogKernelReadL2Metrics();
  }

  public static AccessLogKernelReadL2Metrics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AccessLogKernelReadL2Metrics>
      PARSER = new com.google.protobuf.AbstractParser<AccessLogKernelReadL2Metrics>() {
    @Override
    public AccessLogKernelReadL2Metrics parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AccessLogKernelReadL2Metrics(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AccessLogKernelReadL2Metrics> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<AccessLogKernelReadL2Metrics> getParserForType() {
    return PARSER;
  }

  @Override
  public AccessLogKernelReadL2Metrics getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

