// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/profiling/Process.proto

package org.apache.skywalking.apm.network.ebpf.profiling.process.v3;

/**
 * Protobuf type {@code skywalking.v3.EBPFProcessDownstream}
 */
public final class EBPFProcessDownstream extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.EBPFProcessDownstream)
    EBPFProcessDownstreamOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EBPFProcessDownstream.newBuilder() to construct.
  private EBPFProcessDownstream(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EBPFProcessDownstream() {
    processId_ = "";
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new EBPFProcessDownstream();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private EBPFProcessDownstream(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            String s = input.readStringRequireUtf8();

            processId_ = s;
            break;
          }
          case 18: {
            EBPFHostProcessDownstream.Builder subBuilder = null;
            if (processCase_ == 2) {
              subBuilder = ((EBPFHostProcessDownstream) process_).toBuilder();
            }
            process_ =
                input.readMessage(EBPFHostProcessDownstream.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((EBPFHostProcessDownstream) process_);
              process_ = subBuilder.buildPartial();
            }
            processCase_ = 2;
            break;
          }
          case 26: {
            EBPFKubernetesProcessDownstream.Builder subBuilder = null;
            if (processCase_ == 3) {
              subBuilder = ((EBPFKubernetesProcessDownstream) process_).toBuilder();
            }
            process_ =
                input.readMessage(EBPFKubernetesProcessDownstream.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((EBPFKubernetesProcessDownstream) process_);
              process_ = subBuilder.buildPartial();
            }
            processCase_ = 3;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Process.internal_static_skywalking_v3_EBPFProcessDownstream_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Process.internal_static_skywalking_v3_EBPFProcessDownstream_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            EBPFProcessDownstream.class, Builder.class);
  }

  private int processCase_ = 0;
  private Object process_;
  public enum ProcessCase
      implements com.google.protobuf.Internal.EnumLite,
          InternalOneOfEnum {
    HOSTPROCESS(2),
    K8SPROCESS(3),
    PROCESS_NOT_SET(0);
    private final int value;
    private ProcessCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static ProcessCase valueOf(int value) {
      return forNumber(value);
    }

    public static ProcessCase forNumber(int value) {
      switch (value) {
        case 2: return HOSTPROCESS;
        case 3: return K8SPROCESS;
        case 0: return PROCESS_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ProcessCase
  getProcessCase() {
    return ProcessCase.forNumber(
        processCase_);
  }

  public static final int PROCESSID_FIELD_NUMBER = 1;
  private volatile Object processId_;
  /**
   * <pre>
   * Generated process id
   * </pre>
   *
   * <code>string processId = 1;</code>
   * @return The processId.
   */
  @Override
  public String getProcessId() {
    Object ref = processId_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      processId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Generated process id
   * </pre>
   *
   * <code>string processId = 1;</code>
   * @return The bytes for processId.
   */
  @Override
  public com.google.protobuf.ByteString
      getProcessIdBytes() {
    Object ref = processId_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      processId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HOSTPROCESS_FIELD_NUMBER = 2;
  /**
   * <code>.skywalking.v3.EBPFHostProcessDownstream hostProcess = 2;</code>
   * @return Whether the hostProcess field is set.
   */
  @Override
  public boolean hasHostProcess() {
    return processCase_ == 2;
  }
  /**
   * <code>.skywalking.v3.EBPFHostProcessDownstream hostProcess = 2;</code>
   * @return The hostProcess.
   */
  @Override
  public EBPFHostProcessDownstream getHostProcess() {
    if (processCase_ == 2) {
       return (EBPFHostProcessDownstream) process_;
    }
    return EBPFHostProcessDownstream.getDefaultInstance();
  }
  /**
   * <code>.skywalking.v3.EBPFHostProcessDownstream hostProcess = 2;</code>
   */
  @Override
  public EBPFHostProcessDownstreamOrBuilder getHostProcessOrBuilder() {
    if (processCase_ == 2) {
       return (EBPFHostProcessDownstream) process_;
    }
    return EBPFHostProcessDownstream.getDefaultInstance();
  }

  public static final int K8SPROCESS_FIELD_NUMBER = 3;
  /**
   * <code>.skywalking.v3.EBPFKubernetesProcessDownstream k8sProcess = 3;</code>
   * @return Whether the k8sProcess field is set.
   */
  @Override
  public boolean hasK8SProcess() {
    return processCase_ == 3;
  }
  /**
   * <code>.skywalking.v3.EBPFKubernetesProcessDownstream k8sProcess = 3;</code>
   * @return The k8sProcess.
   */
  @Override
  public EBPFKubernetesProcessDownstream getK8SProcess() {
    if (processCase_ == 3) {
       return (EBPFKubernetesProcessDownstream) process_;
    }
    return EBPFKubernetesProcessDownstream.getDefaultInstance();
  }
  /**
   * <code>.skywalking.v3.EBPFKubernetesProcessDownstream k8sProcess = 3;</code>
   */
  @Override
  public EBPFKubernetesProcessDownstreamOrBuilder getK8SProcessOrBuilder() {
    if (processCase_ == 3) {
       return (EBPFKubernetesProcessDownstream) process_;
    }
    return EBPFKubernetesProcessDownstream.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(processId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, processId_);
    }
    if (processCase_ == 2) {
      output.writeMessage(2, (EBPFHostProcessDownstream) process_);
    }
    if (processCase_ == 3) {
      output.writeMessage(3, (EBPFKubernetesProcessDownstream) process_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(processId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, processId_);
    }
    if (processCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (EBPFHostProcessDownstream) process_);
    }
    if (processCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (EBPFKubernetesProcessDownstream) process_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof EBPFProcessDownstream)) {
      return super.equals(obj);
    }
    EBPFProcessDownstream other = (EBPFProcessDownstream) obj;

    if (!getProcessId()
        .equals(other.getProcessId())) return false;
    if (!getProcessCase().equals(other.getProcessCase())) return false;
    switch (processCase_) {
      case 2:
        if (!getHostProcess()
            .equals(other.getHostProcess())) return false;
        break;
      case 3:
        if (!getK8SProcess()
            .equals(other.getK8SProcess())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PROCESSID_FIELD_NUMBER;
    hash = (53 * hash) + getProcessId().hashCode();
    switch (processCase_) {
      case 2:
        hash = (37 * hash) + HOSTPROCESS_FIELD_NUMBER;
        hash = (53 * hash) + getHostProcess().hashCode();
        break;
      case 3:
        hash = (37 * hash) + K8SPROCESS_FIELD_NUMBER;
        hash = (53 * hash) + getK8SProcess().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static EBPFProcessDownstream parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static EBPFProcessDownstream parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static EBPFProcessDownstream parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static EBPFProcessDownstream parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static EBPFProcessDownstream parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static EBPFProcessDownstream parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static EBPFProcessDownstream parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static EBPFProcessDownstream parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static EBPFProcessDownstream parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static EBPFProcessDownstream parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static EBPFProcessDownstream parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static EBPFProcessDownstream parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(EBPFProcessDownstream prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code skywalking.v3.EBPFProcessDownstream}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.EBPFProcessDownstream)
      EBPFProcessDownstreamOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Process.internal_static_skywalking_v3_EBPFProcessDownstream_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Process.internal_static_skywalking_v3_EBPFProcessDownstream_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EBPFProcessDownstream.class, Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessDownstream.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      processId_ = "";

      processCase_ = 0;
      process_ = null;
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Process.internal_static_skywalking_v3_EBPFProcessDownstream_descriptor;
    }

    @Override
    public EBPFProcessDownstream getDefaultInstanceForType() {
      return EBPFProcessDownstream.getDefaultInstance();
    }

    @Override
    public EBPFProcessDownstream build() {
      EBPFProcessDownstream result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public EBPFProcessDownstream buildPartial() {
      EBPFProcessDownstream result = new EBPFProcessDownstream(this);
      result.processId_ = processId_;
      if (processCase_ == 2) {
        if (hostProcessBuilder_ == null) {
          result.process_ = process_;
        } else {
          result.process_ = hostProcessBuilder_.build();
        }
      }
      if (processCase_ == 3) {
        if (k8SProcessBuilder_ == null) {
          result.process_ = process_;
        } else {
          result.process_ = k8SProcessBuilder_.build();
        }
      }
      result.processCase_ = processCase_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof EBPFProcessDownstream) {
        return mergeFrom((EBPFProcessDownstream)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(EBPFProcessDownstream other) {
      if (other == EBPFProcessDownstream.getDefaultInstance()) return this;
      if (!other.getProcessId().isEmpty()) {
        processId_ = other.processId_;
        onChanged();
      }
      switch (other.getProcessCase()) {
        case HOSTPROCESS: {
          mergeHostProcess(other.getHostProcess());
          break;
        }
        case K8SPROCESS: {
          mergeK8SProcess(other.getK8SProcess());
          break;
        }
        case PROCESS_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      EBPFProcessDownstream parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (EBPFProcessDownstream) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int processCase_ = 0;
    private Object process_;
    public ProcessCase
        getProcessCase() {
      return ProcessCase.forNumber(
          processCase_);
    }

    public Builder clearProcess() {
      processCase_ = 0;
      process_ = null;
      onChanged();
      return this;
    }


    private Object processId_ = "";
    /**
     * <pre>
     * Generated process id
     * </pre>
     *
     * <code>string processId = 1;</code>
     * @return The processId.
     */
    public String getProcessId() {
      Object ref = processId_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        processId_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * Generated process id
     * </pre>
     *
     * <code>string processId = 1;</code>
     * @return The bytes for processId.
     */
    public com.google.protobuf.ByteString
        getProcessIdBytes() {
      Object ref = processId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        processId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Generated process id
     * </pre>
     *
     * <code>string processId = 1;</code>
     * @param value The processId to set.
     * @return This builder for chaining.
     */
    public Builder setProcessId(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      processId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Generated process id
     * </pre>
     *
     * <code>string processId = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearProcessId() {

      processId_ = getDefaultInstance().getProcessId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Generated process id
     * </pre>
     *
     * <code>string processId = 1;</code>
     * @param value The bytes for processId to set.
     * @return This builder for chaining.
     */
    public Builder setProcessIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      processId_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        EBPFHostProcessDownstream, EBPFHostProcessDownstream.Builder, EBPFHostProcessDownstreamOrBuilder> hostProcessBuilder_;
    /**
     * <code>.skywalking.v3.EBPFHostProcessDownstream hostProcess = 2;</code>
     * @return Whether the hostProcess field is set.
     */
    @Override
    public boolean hasHostProcess() {
      return processCase_ == 2;
    }
    /**
     * <code>.skywalking.v3.EBPFHostProcessDownstream hostProcess = 2;</code>
     * @return The hostProcess.
     */
    @Override
    public EBPFHostProcessDownstream getHostProcess() {
      if (hostProcessBuilder_ == null) {
        if (processCase_ == 2) {
          return (EBPFHostProcessDownstream) process_;
        }
        return EBPFHostProcessDownstream.getDefaultInstance();
      } else {
        if (processCase_ == 2) {
          return hostProcessBuilder_.getMessage();
        }
        return EBPFHostProcessDownstream.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.EBPFHostProcessDownstream hostProcess = 2;</code>
     */
    public Builder setHostProcess(EBPFHostProcessDownstream value) {
      if (hostProcessBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        process_ = value;
        onChanged();
      } else {
        hostProcessBuilder_.setMessage(value);
      }
      processCase_ = 2;
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFHostProcessDownstream hostProcess = 2;</code>
     */
    public Builder setHostProcess(
        EBPFHostProcessDownstream.Builder builderForValue) {
      if (hostProcessBuilder_ == null) {
        process_ = builderForValue.build();
        onChanged();
      } else {
        hostProcessBuilder_.setMessage(builderForValue.build());
      }
      processCase_ = 2;
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFHostProcessDownstream hostProcess = 2;</code>
     */
    public Builder mergeHostProcess(EBPFHostProcessDownstream value) {
      if (hostProcessBuilder_ == null) {
        if (processCase_ == 2 &&
            process_ != EBPFHostProcessDownstream.getDefaultInstance()) {
          process_ = EBPFHostProcessDownstream.newBuilder((EBPFHostProcessDownstream) process_)
              .mergeFrom(value).buildPartial();
        } else {
          process_ = value;
        }
        onChanged();
      } else {
        if (processCase_ == 2) {
          hostProcessBuilder_.mergeFrom(value);
        }
        hostProcessBuilder_.setMessage(value);
      }
      processCase_ = 2;
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFHostProcessDownstream hostProcess = 2;</code>
     */
    public Builder clearHostProcess() {
      if (hostProcessBuilder_ == null) {
        if (processCase_ == 2) {
          processCase_ = 0;
          process_ = null;
          onChanged();
        }
      } else {
        if (processCase_ == 2) {
          processCase_ = 0;
          process_ = null;
        }
        hostProcessBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFHostProcessDownstream hostProcess = 2;</code>
     */
    public EBPFHostProcessDownstream.Builder getHostProcessBuilder() {
      return getHostProcessFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.EBPFHostProcessDownstream hostProcess = 2;</code>
     */
    @Override
    public EBPFHostProcessDownstreamOrBuilder getHostProcessOrBuilder() {
      if ((processCase_ == 2) && (hostProcessBuilder_ != null)) {
        return hostProcessBuilder_.getMessageOrBuilder();
      } else {
        if (processCase_ == 2) {
          return (EBPFHostProcessDownstream) process_;
        }
        return EBPFHostProcessDownstream.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.EBPFHostProcessDownstream hostProcess = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        EBPFHostProcessDownstream, EBPFHostProcessDownstream.Builder, EBPFHostProcessDownstreamOrBuilder>
        getHostProcessFieldBuilder() {
      if (hostProcessBuilder_ == null) {
        if (!(processCase_ == 2)) {
          process_ = EBPFHostProcessDownstream.getDefaultInstance();
        }
        hostProcessBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            EBPFHostProcessDownstream, EBPFHostProcessDownstream.Builder, EBPFHostProcessDownstreamOrBuilder>(
                (EBPFHostProcessDownstream) process_,
                getParentForChildren(),
                isClean());
        process_ = null;
      }
      processCase_ = 2;
      onChanged();;
      return hostProcessBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        EBPFKubernetesProcessDownstream, EBPFKubernetesProcessDownstream.Builder, EBPFKubernetesProcessDownstreamOrBuilder> k8SProcessBuilder_;
    /**
     * <code>.skywalking.v3.EBPFKubernetesProcessDownstream k8sProcess = 3;</code>
     * @return Whether the k8sProcess field is set.
     */
    @Override
    public boolean hasK8SProcess() {
      return processCase_ == 3;
    }
    /**
     * <code>.skywalking.v3.EBPFKubernetesProcessDownstream k8sProcess = 3;</code>
     * @return The k8sProcess.
     */
    @Override
    public EBPFKubernetesProcessDownstream getK8SProcess() {
      if (k8SProcessBuilder_ == null) {
        if (processCase_ == 3) {
          return (EBPFKubernetesProcessDownstream) process_;
        }
        return EBPFKubernetesProcessDownstream.getDefaultInstance();
      } else {
        if (processCase_ == 3) {
          return k8SProcessBuilder_.getMessage();
        }
        return EBPFKubernetesProcessDownstream.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.EBPFKubernetesProcessDownstream k8sProcess = 3;</code>
     */
    public Builder setK8SProcess(EBPFKubernetesProcessDownstream value) {
      if (k8SProcessBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        process_ = value;
        onChanged();
      } else {
        k8SProcessBuilder_.setMessage(value);
      }
      processCase_ = 3;
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFKubernetesProcessDownstream k8sProcess = 3;</code>
     */
    public Builder setK8SProcess(
        EBPFKubernetesProcessDownstream.Builder builderForValue) {
      if (k8SProcessBuilder_ == null) {
        process_ = builderForValue.build();
        onChanged();
      } else {
        k8SProcessBuilder_.setMessage(builderForValue.build());
      }
      processCase_ = 3;
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFKubernetesProcessDownstream k8sProcess = 3;</code>
     */
    public Builder mergeK8SProcess(EBPFKubernetesProcessDownstream value) {
      if (k8SProcessBuilder_ == null) {
        if (processCase_ == 3 &&
            process_ != EBPFKubernetesProcessDownstream.getDefaultInstance()) {
          process_ = EBPFKubernetesProcessDownstream.newBuilder((EBPFKubernetesProcessDownstream) process_)
              .mergeFrom(value).buildPartial();
        } else {
          process_ = value;
        }
        onChanged();
      } else {
        if (processCase_ == 3) {
          k8SProcessBuilder_.mergeFrom(value);
        }
        k8SProcessBuilder_.setMessage(value);
      }
      processCase_ = 3;
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFKubernetesProcessDownstream k8sProcess = 3;</code>
     */
    public Builder clearK8SProcess() {
      if (k8SProcessBuilder_ == null) {
        if (processCase_ == 3) {
          processCase_ = 0;
          process_ = null;
          onChanged();
        }
      } else {
        if (processCase_ == 3) {
          processCase_ = 0;
          process_ = null;
        }
        k8SProcessBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFKubernetesProcessDownstream k8sProcess = 3;</code>
     */
    public EBPFKubernetesProcessDownstream.Builder getK8SProcessBuilder() {
      return getK8SProcessFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.EBPFKubernetesProcessDownstream k8sProcess = 3;</code>
     */
    @Override
    public EBPFKubernetesProcessDownstreamOrBuilder getK8SProcessOrBuilder() {
      if ((processCase_ == 3) && (k8SProcessBuilder_ != null)) {
        return k8SProcessBuilder_.getMessageOrBuilder();
      } else {
        if (processCase_ == 3) {
          return (EBPFKubernetesProcessDownstream) process_;
        }
        return EBPFKubernetesProcessDownstream.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.EBPFKubernetesProcessDownstream k8sProcess = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        EBPFKubernetesProcessDownstream, EBPFKubernetesProcessDownstream.Builder, EBPFKubernetesProcessDownstreamOrBuilder>
        getK8SProcessFieldBuilder() {
      if (k8SProcessBuilder_ == null) {
        if (!(processCase_ == 3)) {
          process_ = EBPFKubernetesProcessDownstream.getDefaultInstance();
        }
        k8SProcessBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            EBPFKubernetesProcessDownstream, EBPFKubernetesProcessDownstream.Builder, EBPFKubernetesProcessDownstreamOrBuilder>(
                (EBPFKubernetesProcessDownstream) process_,
                getParentForChildren(),
                isClean());
        process_ = null;
      }
      processCase_ = 3;
      onChanged();;
      return k8SProcessBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.EBPFProcessDownstream)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.EBPFProcessDownstream)
  private static final EBPFProcessDownstream DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new EBPFProcessDownstream();
  }

  public static EBPFProcessDownstream getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EBPFProcessDownstream>
      PARSER = new com.google.protobuf.AbstractParser<EBPFProcessDownstream>() {
    @Override
    public EBPFProcessDownstream parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new EBPFProcessDownstream(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<EBPFProcessDownstream> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<EBPFProcessDownstream> getParserForType() {
    return PARSER;
  }

  @Override
  public EBPFProcessDownstream getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

