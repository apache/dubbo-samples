// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/accesslog.proto

package org.apache.skywalking.apm.network.ebpf.accesslog.v3;

/**
 * Protobuf type {@code skywalking.v3.AccessLogKernelWriteL3Metrics}
 */
public final class AccessLogKernelWriteL3Metrics extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.AccessLogKernelWriteL3Metrics)
    AccessLogKernelWriteL3MetricsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AccessLogKernelWriteL3Metrics.newBuilder() to construct.
  private AccessLogKernelWriteL3Metrics(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AccessLogKernelWriteL3Metrics() {
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new AccessLogKernelWriteL3Metrics();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AccessLogKernelWriteL3Metrics(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            totalDuration_ = input.readUInt64();
            break;
          }
          case 16: {

            totalLocalDuration_ = input.readUInt64();
            break;
          }
          case 24: {

            totalOutputDuration_ = input.readUInt64();
            break;
          }
          case 40: {

            totalResolveMACCount_ = input.readUInt64();
            break;
          }
          case 48: {

            totalResolveMACDuration_ = input.readUInt64();
            break;
          }
          case 56: {

            totalNetFilterCount_ = input.readUInt64();
            break;
          }
          case 64: {

            totalNetFilterDuration_ = input.readUInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Accesslog.internal_static_skywalking_v3_AccessLogKernelWriteL3Metrics_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Accesslog.internal_static_skywalking_v3_AccessLogKernelWriteL3Metrics_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            AccessLogKernelWriteL3Metrics.class, Builder.class);
  }

  public static final int TOTALDURATION_FIELD_NUMBER = 1;
  private long totalDuration_;
  /**
   * <pre>
   * total duration(nanosecond) of layer 3
   * </pre>
   *
   * <code>uint64 totalDuration = 1;</code>
   * @return The totalDuration.
   */
  @Override
  public long getTotalDuration() {
    return totalDuration_;
  }

  public static final int TOTALLOCALDURATION_FIELD_NUMBER = 2;
  private long totalLocalDuration_;
  /**
   * <pre>
   * total local out use duration(nanoseconds) -&gt; kernel: ip_local_out
   * </pre>
   *
   * <code>uint64 totalLocalDuration = 2;</code>
   * @return The totalLocalDuration.
   */
  @Override
  public long getTotalLocalDuration() {
    return totalLocalDuration_;
  }

  public static final int TOTALOUTPUTDURATION_FIELD_NUMBER = 3;
  private long totalOutputDuration_;
  /**
   * <pre>
   * total output use duration(nanoseconds) -&gt; kernel: ip_finish_output2 - ip_output
   * </pre>
   *
   * <code>uint64 totalOutputDuration = 3;</code>
   * @return The totalOutputDuration.
   */
  @Override
  public long getTotalOutputDuration() {
    return totalOutputDuration_;
  }

  public static final int TOTALRESOLVEMACCOUNT_FIELD_NUMBER = 5;
  private long totalResolveMACCount_;
  /**
   * <pre>
   * total resolve remote MAC address(ARP Request) count and duration(nanosecond) -&gt; kernel: neigh_resolve_output
   * </pre>
   *
   * <code>uint64 totalResolveMACCount = 5;</code>
   * @return The totalResolveMACCount.
   */
  @Override
  public long getTotalResolveMACCount() {
    return totalResolveMACCount_;
  }

  public static final int TOTALRESOLVEMACDURATION_FIELD_NUMBER = 6;
  private long totalResolveMACDuration_;
  /**
   * <code>uint64 totalResolveMACDuration = 6;</code>
   * @return The totalResolveMACDuration.
   */
  @Override
  public long getTotalResolveMACDuration() {
    return totalResolveMACDuration_;
  }

  public static final int TOTALNETFILTERCOUNT_FIELD_NUMBER = 7;
  private long totalNetFilterCount_;
  /**
   * <pre>
   * total netfiltering count and duration(nanosecond) -&gt; kernel: nf_hook
   * </pre>
   *
   * <code>uint64 totalNetFilterCount = 7;</code>
   * @return The totalNetFilterCount.
   */
  @Override
  public long getTotalNetFilterCount() {
    return totalNetFilterCount_;
  }

  public static final int TOTALNETFILTERDURATION_FIELD_NUMBER = 8;
  private long totalNetFilterDuration_;
  /**
   * <code>uint64 totalNetFilterDuration = 8;</code>
   * @return The totalNetFilterDuration.
   */
  @Override
  public long getTotalNetFilterDuration() {
    return totalNetFilterDuration_;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (totalDuration_ != 0L) {
      output.writeUInt64(1, totalDuration_);
    }
    if (totalLocalDuration_ != 0L) {
      output.writeUInt64(2, totalLocalDuration_);
    }
    if (totalOutputDuration_ != 0L) {
      output.writeUInt64(3, totalOutputDuration_);
    }
    if (totalResolveMACCount_ != 0L) {
      output.writeUInt64(5, totalResolveMACCount_);
    }
    if (totalResolveMACDuration_ != 0L) {
      output.writeUInt64(6, totalResolveMACDuration_);
    }
    if (totalNetFilterCount_ != 0L) {
      output.writeUInt64(7, totalNetFilterCount_);
    }
    if (totalNetFilterDuration_ != 0L) {
      output.writeUInt64(8, totalNetFilterDuration_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (totalDuration_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, totalDuration_);
    }
    if (totalLocalDuration_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, totalLocalDuration_);
    }
    if (totalOutputDuration_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, totalOutputDuration_);
    }
    if (totalResolveMACCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(5, totalResolveMACCount_);
    }
    if (totalResolveMACDuration_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(6, totalResolveMACDuration_);
    }
    if (totalNetFilterCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(7, totalNetFilterCount_);
    }
    if (totalNetFilterDuration_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(8, totalNetFilterDuration_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof AccessLogKernelWriteL3Metrics)) {
      return super.equals(obj);
    }
    AccessLogKernelWriteL3Metrics other = (AccessLogKernelWriteL3Metrics) obj;

    if (getTotalDuration()
        != other.getTotalDuration()) return false;
    if (getTotalLocalDuration()
        != other.getTotalLocalDuration()) return false;
    if (getTotalOutputDuration()
        != other.getTotalOutputDuration()) return false;
    if (getTotalResolveMACCount()
        != other.getTotalResolveMACCount()) return false;
    if (getTotalResolveMACDuration()
        != other.getTotalResolveMACDuration()) return false;
    if (getTotalNetFilterCount()
        != other.getTotalNetFilterCount()) return false;
    if (getTotalNetFilterDuration()
        != other.getTotalNetFilterDuration()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TOTALDURATION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalDuration());
    hash = (37 * hash) + TOTALLOCALDURATION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalLocalDuration());
    hash = (37 * hash) + TOTALOUTPUTDURATION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalOutputDuration());
    hash = (37 * hash) + TOTALRESOLVEMACCOUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalResolveMACCount());
    hash = (37 * hash) + TOTALRESOLVEMACDURATION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalResolveMACDuration());
    hash = (37 * hash) + TOTALNETFILTERCOUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalNetFilterCount());
    hash = (37 * hash) + TOTALNETFILTERDURATION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalNetFilterDuration());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static AccessLogKernelWriteL3Metrics parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AccessLogKernelWriteL3Metrics parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AccessLogKernelWriteL3Metrics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AccessLogKernelWriteL3Metrics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AccessLogKernelWriteL3Metrics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AccessLogKernelWriteL3Metrics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AccessLogKernelWriteL3Metrics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static AccessLogKernelWriteL3Metrics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static AccessLogKernelWriteL3Metrics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static AccessLogKernelWriteL3Metrics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static AccessLogKernelWriteL3Metrics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static AccessLogKernelWriteL3Metrics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(AccessLogKernelWriteL3Metrics prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code skywalking.v3.AccessLogKernelWriteL3Metrics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.AccessLogKernelWriteL3Metrics)
      AccessLogKernelWriteL3MetricsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Accesslog.internal_static_skywalking_v3_AccessLogKernelWriteL3Metrics_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Accesslog.internal_static_skywalking_v3_AccessLogKernelWriteL3Metrics_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              AccessLogKernelWriteL3Metrics.class, Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.ebpf.accesslog.v3.AccessLogKernelWriteL3Metrics.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      totalDuration_ = 0L;

      totalLocalDuration_ = 0L;

      totalOutputDuration_ = 0L;

      totalResolveMACCount_ = 0L;

      totalResolveMACDuration_ = 0L;

      totalNetFilterCount_ = 0L;

      totalNetFilterDuration_ = 0L;

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Accesslog.internal_static_skywalking_v3_AccessLogKernelWriteL3Metrics_descriptor;
    }

    @Override
    public AccessLogKernelWriteL3Metrics getDefaultInstanceForType() {
      return AccessLogKernelWriteL3Metrics.getDefaultInstance();
    }

    @Override
    public AccessLogKernelWriteL3Metrics build() {
      AccessLogKernelWriteL3Metrics result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public AccessLogKernelWriteL3Metrics buildPartial() {
      AccessLogKernelWriteL3Metrics result = new AccessLogKernelWriteL3Metrics(this);
      result.totalDuration_ = totalDuration_;
      result.totalLocalDuration_ = totalLocalDuration_;
      result.totalOutputDuration_ = totalOutputDuration_;
      result.totalResolveMACCount_ = totalResolveMACCount_;
      result.totalResolveMACDuration_ = totalResolveMACDuration_;
      result.totalNetFilterCount_ = totalNetFilterCount_;
      result.totalNetFilterDuration_ = totalNetFilterDuration_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof AccessLogKernelWriteL3Metrics) {
        return mergeFrom((AccessLogKernelWriteL3Metrics)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(AccessLogKernelWriteL3Metrics other) {
      if (other == AccessLogKernelWriteL3Metrics.getDefaultInstance()) return this;
      if (other.getTotalDuration() != 0L) {
        setTotalDuration(other.getTotalDuration());
      }
      if (other.getTotalLocalDuration() != 0L) {
        setTotalLocalDuration(other.getTotalLocalDuration());
      }
      if (other.getTotalOutputDuration() != 0L) {
        setTotalOutputDuration(other.getTotalOutputDuration());
      }
      if (other.getTotalResolveMACCount() != 0L) {
        setTotalResolveMACCount(other.getTotalResolveMACCount());
      }
      if (other.getTotalResolveMACDuration() != 0L) {
        setTotalResolveMACDuration(other.getTotalResolveMACDuration());
      }
      if (other.getTotalNetFilterCount() != 0L) {
        setTotalNetFilterCount(other.getTotalNetFilterCount());
      }
      if (other.getTotalNetFilterDuration() != 0L) {
        setTotalNetFilterDuration(other.getTotalNetFilterDuration());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      AccessLogKernelWriteL3Metrics parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (AccessLogKernelWriteL3Metrics) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long totalDuration_ ;
    /**
     * <pre>
     * total duration(nanosecond) of layer 3
     * </pre>
     *
     * <code>uint64 totalDuration = 1;</code>
     * @return The totalDuration.
     */
    @Override
    public long getTotalDuration() {
      return totalDuration_;
    }
    /**
     * <pre>
     * total duration(nanosecond) of layer 3
     * </pre>
     *
     * <code>uint64 totalDuration = 1;</code>
     * @param value The totalDuration to set.
     * @return This builder for chaining.
     */
    public Builder setTotalDuration(long value) {

      totalDuration_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * total duration(nanosecond) of layer 3
     * </pre>
     *
     * <code>uint64 totalDuration = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalDuration() {

      totalDuration_ = 0L;
      onChanged();
      return this;
    }

    private long totalLocalDuration_ ;
    /**
     * <pre>
     * total local out use duration(nanoseconds) -&gt; kernel: ip_local_out
     * </pre>
     *
     * <code>uint64 totalLocalDuration = 2;</code>
     * @return The totalLocalDuration.
     */
    @Override
    public long getTotalLocalDuration() {
      return totalLocalDuration_;
    }
    /**
     * <pre>
     * total local out use duration(nanoseconds) -&gt; kernel: ip_local_out
     * </pre>
     *
     * <code>uint64 totalLocalDuration = 2;</code>
     * @param value The totalLocalDuration to set.
     * @return This builder for chaining.
     */
    public Builder setTotalLocalDuration(long value) {

      totalLocalDuration_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * total local out use duration(nanoseconds) -&gt; kernel: ip_local_out
     * </pre>
     *
     * <code>uint64 totalLocalDuration = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalLocalDuration() {

      totalLocalDuration_ = 0L;
      onChanged();
      return this;
    }

    private long totalOutputDuration_ ;
    /**
     * <pre>
     * total output use duration(nanoseconds) -&gt; kernel: ip_finish_output2 - ip_output
     * </pre>
     *
     * <code>uint64 totalOutputDuration = 3;</code>
     * @return The totalOutputDuration.
     */
    @Override
    public long getTotalOutputDuration() {
      return totalOutputDuration_;
    }
    /**
     * <pre>
     * total output use duration(nanoseconds) -&gt; kernel: ip_finish_output2 - ip_output
     * </pre>
     *
     * <code>uint64 totalOutputDuration = 3;</code>
     * @param value The totalOutputDuration to set.
     * @return This builder for chaining.
     */
    public Builder setTotalOutputDuration(long value) {

      totalOutputDuration_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * total output use duration(nanoseconds) -&gt; kernel: ip_finish_output2 - ip_output
     * </pre>
     *
     * <code>uint64 totalOutputDuration = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalOutputDuration() {

      totalOutputDuration_ = 0L;
      onChanged();
      return this;
    }

    private long totalResolveMACCount_ ;
    /**
     * <pre>
     * total resolve remote MAC address(ARP Request) count and duration(nanosecond) -&gt; kernel: neigh_resolve_output
     * </pre>
     *
     * <code>uint64 totalResolveMACCount = 5;</code>
     * @return The totalResolveMACCount.
     */
    @Override
    public long getTotalResolveMACCount() {
      return totalResolveMACCount_;
    }
    /**
     * <pre>
     * total resolve remote MAC address(ARP Request) count and duration(nanosecond) -&gt; kernel: neigh_resolve_output
     * </pre>
     *
     * <code>uint64 totalResolveMACCount = 5;</code>
     * @param value The totalResolveMACCount to set.
     * @return This builder for chaining.
     */
    public Builder setTotalResolveMACCount(long value) {

      totalResolveMACCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * total resolve remote MAC address(ARP Request) count and duration(nanosecond) -&gt; kernel: neigh_resolve_output
     * </pre>
     *
     * <code>uint64 totalResolveMACCount = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalResolveMACCount() {

      totalResolveMACCount_ = 0L;
      onChanged();
      return this;
    }

    private long totalResolveMACDuration_ ;
    /**
     * <code>uint64 totalResolveMACDuration = 6;</code>
     * @return The totalResolveMACDuration.
     */
    @Override
    public long getTotalResolveMACDuration() {
      return totalResolveMACDuration_;
    }
    /**
     * <code>uint64 totalResolveMACDuration = 6;</code>
     * @param value The totalResolveMACDuration to set.
     * @return This builder for chaining.
     */
    public Builder setTotalResolveMACDuration(long value) {

      totalResolveMACDuration_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 totalResolveMACDuration = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalResolveMACDuration() {

      totalResolveMACDuration_ = 0L;
      onChanged();
      return this;
    }

    private long totalNetFilterCount_ ;
    /**
     * <pre>
     * total netfiltering count and duration(nanosecond) -&gt; kernel: nf_hook
     * </pre>
     *
     * <code>uint64 totalNetFilterCount = 7;</code>
     * @return The totalNetFilterCount.
     */
    @Override
    public long getTotalNetFilterCount() {
      return totalNetFilterCount_;
    }
    /**
     * <pre>
     * total netfiltering count and duration(nanosecond) -&gt; kernel: nf_hook
     * </pre>
     *
     * <code>uint64 totalNetFilterCount = 7;</code>
     * @param value The totalNetFilterCount to set.
     * @return This builder for chaining.
     */
    public Builder setTotalNetFilterCount(long value) {

      totalNetFilterCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * total netfiltering count and duration(nanosecond) -&gt; kernel: nf_hook
     * </pre>
     *
     * <code>uint64 totalNetFilterCount = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalNetFilterCount() {

      totalNetFilterCount_ = 0L;
      onChanged();
      return this;
    }

    private long totalNetFilterDuration_ ;
    /**
     * <code>uint64 totalNetFilterDuration = 8;</code>
     * @return The totalNetFilterDuration.
     */
    @Override
    public long getTotalNetFilterDuration() {
      return totalNetFilterDuration_;
    }
    /**
     * <code>uint64 totalNetFilterDuration = 8;</code>
     * @param value The totalNetFilterDuration to set.
     * @return This builder for chaining.
     */
    public Builder setTotalNetFilterDuration(long value) {

      totalNetFilterDuration_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 totalNetFilterDuration = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalNetFilterDuration() {

      totalNetFilterDuration_ = 0L;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.AccessLogKernelWriteL3Metrics)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.AccessLogKernelWriteL3Metrics)
  private static final AccessLogKernelWriteL3Metrics DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new AccessLogKernelWriteL3Metrics();
  }

  public static AccessLogKernelWriteL3Metrics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AccessLogKernelWriteL3Metrics>
      PARSER = new com.google.protobuf.AbstractParser<AccessLogKernelWriteL3Metrics>() {
    @Override
    public AccessLogKernelWriteL3Metrics parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AccessLogKernelWriteL3Metrics(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AccessLogKernelWriteL3Metrics> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<AccessLogKernelWriteL3Metrics> getParserForType() {
    return PARSER;
  }

  @Override
  public AccessLogKernelWriteL3Metrics getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

