// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: profile/Profile.proto

package org.apache.skywalking.apm.network.language.profile.v3;

public interface ThreadSnapshotOrBuilder extends
    // @@protoc_insertion_point(interface_extends:skywalking.v3.ThreadSnapshot)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * profile task id
   * </pre>
   *
   * <code>string taskId = 1;</code>
   * @return The taskId.
   */
  String getTaskId();
  /**
   * <pre>
   * profile task id
   * </pre>
   *
   * <code>string taskId = 1;</code>
   * @return The bytes for taskId.
   */
  com.google.protobuf.ByteString
      getTaskIdBytes();

  /**
   * <pre>
   * dumped segment id
   * </pre>
   *
   * <code>string traceSegmentId = 2;</code>
   * @return The traceSegmentId.
   */
  String getTraceSegmentId();
  /**
   * <pre>
   * dumped segment id
   * </pre>
   *
   * <code>string traceSegmentId = 2;</code>
   * @return The bytes for traceSegmentId.
   */
  com.google.protobuf.ByteString
      getTraceSegmentIdBytes();

  /**
   * <pre>
   * dump timestamp
   * </pre>
   *
   * <code>int64 time = 3;</code>
   * @return The time.
   */
  long getTime();

  /**
   * <pre>
   * snapshot dump sequence, start with zero
   * </pre>
   *
   * <code>int32 sequence = 4;</code>
   * @return The sequence.
   */
  int getSequence();

  /**
   * <pre>
   * snapshot stack
   * </pre>
   *
   * <code>.skywalking.v3.ThreadStack stack = 5;</code>
   * @return Whether the stack field is set.
   */
  boolean hasStack();
  /**
   * <pre>
   * snapshot stack
   * </pre>
   *
   * <code>.skywalking.v3.ThreadStack stack = 5;</code>
   * @return The stack.
   */
  ThreadStack getStack();
  /**
   * <pre>
   * snapshot stack
   * </pre>
   *
   * <code>.skywalking.v3.ThreadStack stack = 5;</code>
   */
  ThreadStackOrBuilder getStackOrBuilder();
}
