// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/profiling/Profile.proto

package org.apache.skywalking.apm.network.ebpf.profiling.v3;

/**
 * Protobuf type {@code skywalking.v3.EBPFOnCPUProfiling}
 */
public final class EBPFOnCPUProfiling extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.EBPFOnCPUProfiling)
    EBPFOnCPUProfilingOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EBPFOnCPUProfiling.newBuilder() to construct.
  private EBPFOnCPUProfiling(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EBPFOnCPUProfiling() {
    stacks_ = java.util.Collections.emptyList();
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new EBPFOnCPUProfiling();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private EBPFOnCPUProfiling(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              stacks_ = new java.util.ArrayList<EBPFProfilingStackMetadata>();
              mutable_bitField0_ |= 0x00000001;
            }
            stacks_.add(
                input.readMessage(EBPFProfilingStackMetadata.parser(), extensionRegistry));
            break;
          }
          case 16: {

            dumpCount_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        stacks_ = java.util.Collections.unmodifiableList(stacks_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Profile.internal_static_skywalking_v3_EBPFOnCPUProfiling_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Profile.internal_static_skywalking_v3_EBPFOnCPUProfiling_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            EBPFOnCPUProfiling.class, Builder.class);
  }

  public static final int STACKS_FIELD_NUMBER = 1;
  private java.util.List<EBPFProfilingStackMetadata> stacks_;
  /**
   * <pre>
   * stack data in one task(thread)
   * </pre>
   *
   * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
   */
  @Override
  public java.util.List<EBPFProfilingStackMetadata> getStacksList() {
    return stacks_;
  }
  /**
   * <pre>
   * stack data in one task(thread)
   * </pre>
   *
   * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
   */
  @Override
  public java.util.List<? extends EBPFProfilingStackMetadataOrBuilder>
      getStacksOrBuilderList() {
    return stacks_;
  }
  /**
   * <pre>
   * stack data in one task(thread)
   * </pre>
   *
   * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
   */
  @Override
  public int getStacksCount() {
    return stacks_.size();
  }
  /**
   * <pre>
   * stack data in one task(thread)
   * </pre>
   *
   * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
   */
  @Override
  public EBPFProfilingStackMetadata getStacks(int index) {
    return stacks_.get(index);
  }
  /**
   * <pre>
   * stack data in one task(thread)
   * </pre>
   *
   * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
   */
  @Override
  public EBPFProfilingStackMetadataOrBuilder getStacksOrBuilder(
      int index) {
    return stacks_.get(index);
  }

  public static final int DUMPCOUNT_FIELD_NUMBER = 2;
  private int dumpCount_;
  /**
   * <pre>
   * stack counts
   * </pre>
   *
   * <code>int32 dumpCount = 2;</code>
   * @return The dumpCount.
   */
  @Override
  public int getDumpCount() {
    return dumpCount_;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < stacks_.size(); i++) {
      output.writeMessage(1, stacks_.get(i));
    }
    if (dumpCount_ != 0) {
      output.writeInt32(2, dumpCount_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < stacks_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, stacks_.get(i));
    }
    if (dumpCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, dumpCount_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof EBPFOnCPUProfiling)) {
      return super.equals(obj);
    }
    EBPFOnCPUProfiling other = (EBPFOnCPUProfiling) obj;

    if (!getStacksList()
        .equals(other.getStacksList())) return false;
    if (getDumpCount()
        != other.getDumpCount()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getStacksCount() > 0) {
      hash = (37 * hash) + STACKS_FIELD_NUMBER;
      hash = (53 * hash) + getStacksList().hashCode();
    }
    hash = (37 * hash) + DUMPCOUNT_FIELD_NUMBER;
    hash = (53 * hash) + getDumpCount();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static EBPFOnCPUProfiling parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static EBPFOnCPUProfiling parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static EBPFOnCPUProfiling parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static EBPFOnCPUProfiling parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static EBPFOnCPUProfiling parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static EBPFOnCPUProfiling parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static EBPFOnCPUProfiling parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static EBPFOnCPUProfiling parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static EBPFOnCPUProfiling parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static EBPFOnCPUProfiling parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static EBPFOnCPUProfiling parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static EBPFOnCPUProfiling parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(EBPFOnCPUProfiling prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code skywalking.v3.EBPFOnCPUProfiling}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.EBPFOnCPUProfiling)
      EBPFOnCPUProfilingOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Profile.internal_static_skywalking_v3_EBPFOnCPUProfiling_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Profile.internal_static_skywalking_v3_EBPFOnCPUProfiling_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EBPFOnCPUProfiling.class, Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFOnCPUProfiling.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getStacksFieldBuilder();
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      if (stacksBuilder_ == null) {
        stacks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        stacksBuilder_.clear();
      }
      dumpCount_ = 0;

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Profile.internal_static_skywalking_v3_EBPFOnCPUProfiling_descriptor;
    }

    @Override
    public EBPFOnCPUProfiling getDefaultInstanceForType() {
      return EBPFOnCPUProfiling.getDefaultInstance();
    }

    @Override
    public EBPFOnCPUProfiling build() {
      EBPFOnCPUProfiling result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public EBPFOnCPUProfiling buildPartial() {
      EBPFOnCPUProfiling result = new EBPFOnCPUProfiling(this);
      int from_bitField0_ = bitField0_;
      if (stacksBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          stacks_ = java.util.Collections.unmodifiableList(stacks_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.stacks_ = stacks_;
      } else {
        result.stacks_ = stacksBuilder_.build();
      }
      result.dumpCount_ = dumpCount_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof EBPFOnCPUProfiling) {
        return mergeFrom((EBPFOnCPUProfiling)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(EBPFOnCPUProfiling other) {
      if (other == EBPFOnCPUProfiling.getDefaultInstance()) return this;
      if (stacksBuilder_ == null) {
        if (!other.stacks_.isEmpty()) {
          if (stacks_.isEmpty()) {
            stacks_ = other.stacks_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureStacksIsMutable();
            stacks_.addAll(other.stacks_);
          }
          onChanged();
        }
      } else {
        if (!other.stacks_.isEmpty()) {
          if (stacksBuilder_.isEmpty()) {
            stacksBuilder_.dispose();
            stacksBuilder_ = null;
            stacks_ = other.stacks_;
            bitField0_ = (bitField0_ & ~0x00000001);
            stacksBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getStacksFieldBuilder() : null;
          } else {
            stacksBuilder_.addAllMessages(other.stacks_);
          }
        }
      }
      if (other.getDumpCount() != 0) {
        setDumpCount(other.getDumpCount());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      EBPFOnCPUProfiling parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (EBPFOnCPUProfiling) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<EBPFProfilingStackMetadata> stacks_ =
      java.util.Collections.emptyList();
    private void ensureStacksIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        stacks_ = new java.util.ArrayList<EBPFProfilingStackMetadata>(stacks_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        EBPFProfilingStackMetadata, EBPFProfilingStackMetadata.Builder, EBPFProfilingStackMetadataOrBuilder> stacksBuilder_;

    /**
     * <pre>
     * stack data in one task(thread)
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
     */
    public java.util.List<EBPFProfilingStackMetadata> getStacksList() {
      if (stacksBuilder_ == null) {
        return java.util.Collections.unmodifiableList(stacks_);
      } else {
        return stacksBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * stack data in one task(thread)
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
     */
    public int getStacksCount() {
      if (stacksBuilder_ == null) {
        return stacks_.size();
      } else {
        return stacksBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * stack data in one task(thread)
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
     */
    public EBPFProfilingStackMetadata getStacks(int index) {
      if (stacksBuilder_ == null) {
        return stacks_.get(index);
      } else {
        return stacksBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * stack data in one task(thread)
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
     */
    public Builder setStacks(
        int index, EBPFProfilingStackMetadata value) {
      if (stacksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStacksIsMutable();
        stacks_.set(index, value);
        onChanged();
      } else {
        stacksBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * stack data in one task(thread)
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
     */
    public Builder setStacks(
        int index, EBPFProfilingStackMetadata.Builder builderForValue) {
      if (stacksBuilder_ == null) {
        ensureStacksIsMutable();
        stacks_.set(index, builderForValue.build());
        onChanged();
      } else {
        stacksBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * stack data in one task(thread)
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
     */
    public Builder addStacks(EBPFProfilingStackMetadata value) {
      if (stacksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStacksIsMutable();
        stacks_.add(value);
        onChanged();
      } else {
        stacksBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * stack data in one task(thread)
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
     */
    public Builder addStacks(
        int index, EBPFProfilingStackMetadata value) {
      if (stacksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStacksIsMutable();
        stacks_.add(index, value);
        onChanged();
      } else {
        stacksBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * stack data in one task(thread)
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
     */
    public Builder addStacks(
        EBPFProfilingStackMetadata.Builder builderForValue) {
      if (stacksBuilder_ == null) {
        ensureStacksIsMutable();
        stacks_.add(builderForValue.build());
        onChanged();
      } else {
        stacksBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * stack data in one task(thread)
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
     */
    public Builder addStacks(
        int index, EBPFProfilingStackMetadata.Builder builderForValue) {
      if (stacksBuilder_ == null) {
        ensureStacksIsMutable();
        stacks_.add(index, builderForValue.build());
        onChanged();
      } else {
        stacksBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * stack data in one task(thread)
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
     */
    public Builder addAllStacks(
        Iterable<? extends EBPFProfilingStackMetadata> values) {
      if (stacksBuilder_ == null) {
        ensureStacksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, stacks_);
        onChanged();
      } else {
        stacksBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * stack data in one task(thread)
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
     */
    public Builder clearStacks() {
      if (stacksBuilder_ == null) {
        stacks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        stacksBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * stack data in one task(thread)
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
     */
    public Builder removeStacks(int index) {
      if (stacksBuilder_ == null) {
        ensureStacksIsMutable();
        stacks_.remove(index);
        onChanged();
      } else {
        stacksBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * stack data in one task(thread)
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
     */
    public EBPFProfilingStackMetadata.Builder getStacksBuilder(
        int index) {
      return getStacksFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * stack data in one task(thread)
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
     */
    public EBPFProfilingStackMetadataOrBuilder getStacksOrBuilder(
        int index) {
      if (stacksBuilder_ == null) {
        return stacks_.get(index);  } else {
        return stacksBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * stack data in one task(thread)
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
     */
    public java.util.List<? extends EBPFProfilingStackMetadataOrBuilder>
         getStacksOrBuilderList() {
      if (stacksBuilder_ != null) {
        return stacksBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(stacks_);
      }
    }
    /**
     * <pre>
     * stack data in one task(thread)
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
     */
    public EBPFProfilingStackMetadata.Builder addStacksBuilder() {
      return getStacksFieldBuilder().addBuilder(
          EBPFProfilingStackMetadata.getDefaultInstance());
    }
    /**
     * <pre>
     * stack data in one task(thread)
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
     */
    public EBPFProfilingStackMetadata.Builder addStacksBuilder(
        int index) {
      return getStacksFieldBuilder().addBuilder(
          index, EBPFProfilingStackMetadata.getDefaultInstance());
    }
    /**
     * <pre>
     * stack data in one task(thread)
     * </pre>
     *
     * <code>repeated .skywalking.v3.EBPFProfilingStackMetadata stacks = 1;</code>
     */
    public java.util.List<EBPFProfilingStackMetadata.Builder>
         getStacksBuilderList() {
      return getStacksFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        EBPFProfilingStackMetadata, EBPFProfilingStackMetadata.Builder, EBPFProfilingStackMetadataOrBuilder>
        getStacksFieldBuilder() {
      if (stacksBuilder_ == null) {
        stacksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            EBPFProfilingStackMetadata, EBPFProfilingStackMetadata.Builder, EBPFProfilingStackMetadataOrBuilder>(
                stacks_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        stacks_ = null;
      }
      return stacksBuilder_;
    }

    private int dumpCount_ ;
    /**
     * <pre>
     * stack counts
     * </pre>
     *
     * <code>int32 dumpCount = 2;</code>
     * @return The dumpCount.
     */
    @Override
    public int getDumpCount() {
      return dumpCount_;
    }
    /**
     * <pre>
     * stack counts
     * </pre>
     *
     * <code>int32 dumpCount = 2;</code>
     * @param value The dumpCount to set.
     * @return This builder for chaining.
     */
    public Builder setDumpCount(int value) {

      dumpCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * stack counts
     * </pre>
     *
     * <code>int32 dumpCount = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearDumpCount() {

      dumpCount_ = 0;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.EBPFOnCPUProfiling)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.EBPFOnCPUProfiling)
  private static final EBPFOnCPUProfiling DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new EBPFOnCPUProfiling();
  }

  public static EBPFOnCPUProfiling getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EBPFOnCPUProfiling>
      PARSER = new com.google.protobuf.AbstractParser<EBPFOnCPUProfiling>() {
    @Override
    public EBPFOnCPUProfiling parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new EBPFOnCPUProfiling(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<EBPFOnCPUProfiling> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<EBPFOnCPUProfiling> getParserForType() {
    return PARSER;
  }

  @Override
  public EBPFOnCPUProfiling getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

