// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/profiling/Process.proto

package org.apache.skywalking.apm.network.ebpf.profiling.process.v3;

/**
 * Protobuf type {@code skywalking.v3.EBPFHostProcessMetadata}
 */
public final class EBPFHostProcessMetadata extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.EBPFHostProcessMetadata)
    EBPFHostProcessMetadataOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EBPFHostProcessMetadata.newBuilder() to construct.
  private EBPFHostProcessMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EBPFHostProcessMetadata() {
    properties_ = java.util.Collections.emptyList();
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new EBPFHostProcessMetadata();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private EBPFHostProcessMetadata(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            EBPFProcessEntityMetadata.Builder subBuilder = null;
            if (entity_ != null) {
              subBuilder = entity_.toBuilder();
            }
            entity_ = input.readMessage(EBPFProcessEntityMetadata.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(entity_);
              entity_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {

            pid_ = input.readInt32();
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              properties_ = new java.util.ArrayList<org.apache.skywalking.apm.network.common.v3.KeyStringValuePair>();
              mutable_bitField0_ |= 0x00000001;
            }
            properties_.add(
                input.readMessage(org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        properties_ = java.util.Collections.unmodifiableList(properties_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Process.internal_static_skywalking_v3_EBPFHostProcessMetadata_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Process.internal_static_skywalking_v3_EBPFHostProcessMetadata_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            EBPFHostProcessMetadata.class, Builder.class);
  }

  public static final int ENTITY_FIELD_NUMBER = 1;
  private EBPFProcessEntityMetadata entity_;
  /**
   * <pre>
   * [required] Entity metadata
   * Must ensure that entity information is unique at the time of reporting
   * </pre>
   *
   * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
   * @return Whether the entity field is set.
   */
  @Override
  public boolean hasEntity() {
    return entity_ != null;
  }
  /**
   * <pre>
   * [required] Entity metadata
   * Must ensure that entity information is unique at the time of reporting
   * </pre>
   *
   * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
   * @return The entity.
   */
  @Override
  public EBPFProcessEntityMetadata getEntity() {
    return entity_ == null ? EBPFProcessEntityMetadata.getDefaultInstance() : entity_;
  }
  /**
   * <pre>
   * [required] Entity metadata
   * Must ensure that entity information is unique at the time of reporting
   * </pre>
   *
   * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
   */
  @Override
  public EBPFProcessEntityMetadataOrBuilder getEntityOrBuilder() {
    return getEntity();
  }

  public static final int PID_FIELD_NUMBER = 2;
  private int pid_;
  /**
   * <pre>
   * [required] The Process id of the host
   * </pre>
   *
   * <code>int32 pid = 2;</code>
   * @return The pid.
   */
  @Override
  public int getPid() {
    return pid_;
  }

  public static final int PROPERTIES_FIELD_NUMBER = 3;
  private java.util.List<org.apache.skywalking.apm.network.common.v3.KeyStringValuePair> properties_;
  /**
   * <pre>
   * [optional] properties of the process
   * </pre>
   *
   * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
   */
  @Override
  public java.util.List<org.apache.skywalking.apm.network.common.v3.KeyStringValuePair> getPropertiesList() {
    return properties_;
  }
  /**
   * <pre>
   * [optional] properties of the process
   * </pre>
   *
   * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
   */
  @Override
  public java.util.List<? extends org.apache.skywalking.apm.network.common.v3.KeyStringValuePairOrBuilder>
      getPropertiesOrBuilderList() {
    return properties_;
  }
  /**
   * <pre>
   * [optional] properties of the process
   * </pre>
   *
   * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
   */
  @Override
  public int getPropertiesCount() {
    return properties_.size();
  }
  /**
   * <pre>
   * [optional] properties of the process
   * </pre>
   *
   * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
   */
  @Override
  public org.apache.skywalking.apm.network.common.v3.KeyStringValuePair getProperties(int index) {
    return properties_.get(index);
  }
  /**
   * <pre>
   * [optional] properties of the process
   * </pre>
   *
   * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
   */
  @Override
  public org.apache.skywalking.apm.network.common.v3.KeyStringValuePairOrBuilder getPropertiesOrBuilder(
      int index) {
    return properties_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (entity_ != null) {
      output.writeMessage(1, getEntity());
    }
    if (pid_ != 0) {
      output.writeInt32(2, pid_);
    }
    for (int i = 0; i < properties_.size(); i++) {
      output.writeMessage(3, properties_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (entity_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getEntity());
    }
    if (pid_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, pid_);
    }
    for (int i = 0; i < properties_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, properties_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof EBPFHostProcessMetadata)) {
      return super.equals(obj);
    }
    EBPFHostProcessMetadata other = (EBPFHostProcessMetadata) obj;

    if (hasEntity() != other.hasEntity()) return false;
    if (hasEntity()) {
      if (!getEntity()
          .equals(other.getEntity())) return false;
    }
    if (getPid()
        != other.getPid()) return false;
    if (!getPropertiesList()
        .equals(other.getPropertiesList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasEntity()) {
      hash = (37 * hash) + ENTITY_FIELD_NUMBER;
      hash = (53 * hash) + getEntity().hashCode();
    }
    hash = (37 * hash) + PID_FIELD_NUMBER;
    hash = (53 * hash) + getPid();
    if (getPropertiesCount() > 0) {
      hash = (37 * hash) + PROPERTIES_FIELD_NUMBER;
      hash = (53 * hash) + getPropertiesList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static EBPFHostProcessMetadata parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static EBPFHostProcessMetadata parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static EBPFHostProcessMetadata parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static EBPFHostProcessMetadata parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static EBPFHostProcessMetadata parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static EBPFHostProcessMetadata parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static EBPFHostProcessMetadata parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static EBPFHostProcessMetadata parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static EBPFHostProcessMetadata parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static EBPFHostProcessMetadata parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static EBPFHostProcessMetadata parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static EBPFHostProcessMetadata parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(EBPFHostProcessMetadata prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code skywalking.v3.EBPFHostProcessMetadata}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.EBPFHostProcessMetadata)
      EBPFHostProcessMetadataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Process.internal_static_skywalking_v3_EBPFHostProcessMetadata_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Process.internal_static_skywalking_v3_EBPFHostProcessMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EBPFHostProcessMetadata.class, Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getPropertiesFieldBuilder();
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      if (entityBuilder_ == null) {
        entity_ = null;
      } else {
        entity_ = null;
        entityBuilder_ = null;
      }
      pid_ = 0;

      if (propertiesBuilder_ == null) {
        properties_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        propertiesBuilder_.clear();
      }
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Process.internal_static_skywalking_v3_EBPFHostProcessMetadata_descriptor;
    }

    @Override
    public EBPFHostProcessMetadata getDefaultInstanceForType() {
      return EBPFHostProcessMetadata.getDefaultInstance();
    }

    @Override
    public EBPFHostProcessMetadata build() {
      EBPFHostProcessMetadata result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public EBPFHostProcessMetadata buildPartial() {
      EBPFHostProcessMetadata result = new EBPFHostProcessMetadata(this);
      int from_bitField0_ = bitField0_;
      if (entityBuilder_ == null) {
        result.entity_ = entity_;
      } else {
        result.entity_ = entityBuilder_.build();
      }
      result.pid_ = pid_;
      if (propertiesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          properties_ = java.util.Collections.unmodifiableList(properties_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.properties_ = properties_;
      } else {
        result.properties_ = propertiesBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof EBPFHostProcessMetadata) {
        return mergeFrom((EBPFHostProcessMetadata)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(EBPFHostProcessMetadata other) {
      if (other == EBPFHostProcessMetadata.getDefaultInstance()) return this;
      if (other.hasEntity()) {
        mergeEntity(other.getEntity());
      }
      if (other.getPid() != 0) {
        setPid(other.getPid());
      }
      if (propertiesBuilder_ == null) {
        if (!other.properties_.isEmpty()) {
          if (properties_.isEmpty()) {
            properties_ = other.properties_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePropertiesIsMutable();
            properties_.addAll(other.properties_);
          }
          onChanged();
        }
      } else {
        if (!other.properties_.isEmpty()) {
          if (propertiesBuilder_.isEmpty()) {
            propertiesBuilder_.dispose();
            propertiesBuilder_ = null;
            properties_ = other.properties_;
            bitField0_ = (bitField0_ & ~0x00000001);
            propertiesBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPropertiesFieldBuilder() : null;
          } else {
            propertiesBuilder_.addAllMessages(other.properties_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      EBPFHostProcessMetadata parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (EBPFHostProcessMetadata) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private EBPFProcessEntityMetadata entity_;
    private com.google.protobuf.SingleFieldBuilderV3<
        EBPFProcessEntityMetadata, EBPFProcessEntityMetadata.Builder, EBPFProcessEntityMetadataOrBuilder> entityBuilder_;
    /**
     * <pre>
     * [required] Entity metadata
     * Must ensure that entity information is unique at the time of reporting
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
     * @return Whether the entity field is set.
     */
    public boolean hasEntity() {
      return entityBuilder_ != null || entity_ != null;
    }
    /**
     * <pre>
     * [required] Entity metadata
     * Must ensure that entity information is unique at the time of reporting
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
     * @return The entity.
     */
    public EBPFProcessEntityMetadata getEntity() {
      if (entityBuilder_ == null) {
        return entity_ == null ? EBPFProcessEntityMetadata.getDefaultInstance() : entity_;
      } else {
        return entityBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * [required] Entity metadata
     * Must ensure that entity information is unique at the time of reporting
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
     */
    public Builder setEntity(EBPFProcessEntityMetadata value) {
      if (entityBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        entity_ = value;
        onChanged();
      } else {
        entityBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * [required] Entity metadata
     * Must ensure that entity information is unique at the time of reporting
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
     */
    public Builder setEntity(
        EBPFProcessEntityMetadata.Builder builderForValue) {
      if (entityBuilder_ == null) {
        entity_ = builderForValue.build();
        onChanged();
      } else {
        entityBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * [required] Entity metadata
     * Must ensure that entity information is unique at the time of reporting
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
     */
    public Builder mergeEntity(EBPFProcessEntityMetadata value) {
      if (entityBuilder_ == null) {
        if (entity_ != null) {
          entity_ =
            EBPFProcessEntityMetadata.newBuilder(entity_).mergeFrom(value).buildPartial();
        } else {
          entity_ = value;
        }
        onChanged();
      } else {
        entityBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * [required] Entity metadata
     * Must ensure that entity information is unique at the time of reporting
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
     */
    public Builder clearEntity() {
      if (entityBuilder_ == null) {
        entity_ = null;
        onChanged();
      } else {
        entity_ = null;
        entityBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * [required] Entity metadata
     * Must ensure that entity information is unique at the time of reporting
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
     */
    public EBPFProcessEntityMetadata.Builder getEntityBuilder() {

      onChanged();
      return getEntityFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * [required] Entity metadata
     * Must ensure that entity information is unique at the time of reporting
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
     */
    public EBPFProcessEntityMetadataOrBuilder getEntityOrBuilder() {
      if (entityBuilder_ != null) {
        return entityBuilder_.getMessageOrBuilder();
      } else {
        return entity_ == null ?
            EBPFProcessEntityMetadata.getDefaultInstance() : entity_;
      }
    }
    /**
     * <pre>
     * [required] Entity metadata
     * Must ensure that entity information is unique at the time of reporting
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        EBPFProcessEntityMetadata, EBPFProcessEntityMetadata.Builder, EBPFProcessEntityMetadataOrBuilder>
        getEntityFieldBuilder() {
      if (entityBuilder_ == null) {
        entityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            EBPFProcessEntityMetadata, EBPFProcessEntityMetadata.Builder, EBPFProcessEntityMetadataOrBuilder>(
                getEntity(),
                getParentForChildren(),
                isClean());
        entity_ = null;
      }
      return entityBuilder_;
    }

    private int pid_ ;
    /**
     * <pre>
     * [required] The Process id of the host
     * </pre>
     *
     * <code>int32 pid = 2;</code>
     * @return The pid.
     */
    @Override
    public int getPid() {
      return pid_;
    }
    /**
     * <pre>
     * [required] The Process id of the host
     * </pre>
     *
     * <code>int32 pid = 2;</code>
     * @param value The pid to set.
     * @return This builder for chaining.
     */
    public Builder setPid(int value) {

      pid_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [required] The Process id of the host
     * </pre>
     *
     * <code>int32 pid = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearPid() {

      pid_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<org.apache.skywalking.apm.network.common.v3.KeyStringValuePair> properties_ =
      java.util.Collections.emptyList();
    private void ensurePropertiesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        properties_ = new java.util.ArrayList<org.apache.skywalking.apm.network.common.v3.KeyStringValuePair>(properties_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.apache.skywalking.apm.network.common.v3.KeyStringValuePair, org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.Builder, org.apache.skywalking.apm.network.common.v3.KeyStringValuePairOrBuilder> propertiesBuilder_;

    /**
     * <pre>
     * [optional] properties of the process
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
     */
    public java.util.List<org.apache.skywalking.apm.network.common.v3.KeyStringValuePair> getPropertiesList() {
      if (propertiesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(properties_);
      } else {
        return propertiesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * [optional] properties of the process
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
     */
    public int getPropertiesCount() {
      if (propertiesBuilder_ == null) {
        return properties_.size();
      } else {
        return propertiesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * [optional] properties of the process
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
     */
    public org.apache.skywalking.apm.network.common.v3.KeyStringValuePair getProperties(int index) {
      if (propertiesBuilder_ == null) {
        return properties_.get(index);
      } else {
        return propertiesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * [optional] properties of the process
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
     */
    public Builder setProperties(
        int index, org.apache.skywalking.apm.network.common.v3.KeyStringValuePair value) {
      if (propertiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePropertiesIsMutable();
        properties_.set(index, value);
        onChanged();
      } else {
        propertiesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * [optional] properties of the process
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
     */
    public Builder setProperties(
        int index, org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.Builder builderForValue) {
      if (propertiesBuilder_ == null) {
        ensurePropertiesIsMutable();
        properties_.set(index, builderForValue.build());
        onChanged();
      } else {
        propertiesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * [optional] properties of the process
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
     */
    public Builder addProperties(org.apache.skywalking.apm.network.common.v3.KeyStringValuePair value) {
      if (propertiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePropertiesIsMutable();
        properties_.add(value);
        onChanged();
      } else {
        propertiesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * [optional] properties of the process
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
     */
    public Builder addProperties(
        int index, org.apache.skywalking.apm.network.common.v3.KeyStringValuePair value) {
      if (propertiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePropertiesIsMutable();
        properties_.add(index, value);
        onChanged();
      } else {
        propertiesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * [optional] properties of the process
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
     */
    public Builder addProperties(
        org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.Builder builderForValue) {
      if (propertiesBuilder_ == null) {
        ensurePropertiesIsMutable();
        properties_.add(builderForValue.build());
        onChanged();
      } else {
        propertiesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * [optional] properties of the process
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
     */
    public Builder addProperties(
        int index, org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.Builder builderForValue) {
      if (propertiesBuilder_ == null) {
        ensurePropertiesIsMutable();
        properties_.add(index, builderForValue.build());
        onChanged();
      } else {
        propertiesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * [optional] properties of the process
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
     */
    public Builder addAllProperties(
        Iterable<? extends org.apache.skywalking.apm.network.common.v3.KeyStringValuePair> values) {
      if (propertiesBuilder_ == null) {
        ensurePropertiesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, properties_);
        onChanged();
      } else {
        propertiesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * [optional] properties of the process
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
     */
    public Builder clearProperties() {
      if (propertiesBuilder_ == null) {
        properties_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        propertiesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * [optional] properties of the process
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
     */
    public Builder removeProperties(int index) {
      if (propertiesBuilder_ == null) {
        ensurePropertiesIsMutable();
        properties_.remove(index);
        onChanged();
      } else {
        propertiesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * [optional] properties of the process
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
     */
    public org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.Builder getPropertiesBuilder(
        int index) {
      return getPropertiesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * [optional] properties of the process
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
     */
    public org.apache.skywalking.apm.network.common.v3.KeyStringValuePairOrBuilder getPropertiesOrBuilder(
        int index) {
      if (propertiesBuilder_ == null) {
        return properties_.get(index);  } else {
        return propertiesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * [optional] properties of the process
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
     */
    public java.util.List<? extends org.apache.skywalking.apm.network.common.v3.KeyStringValuePairOrBuilder>
         getPropertiesOrBuilderList() {
      if (propertiesBuilder_ != null) {
        return propertiesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(properties_);
      }
    }
    /**
     * <pre>
     * [optional] properties of the process
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
     */
    public org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.Builder addPropertiesBuilder() {
      return getPropertiesFieldBuilder().addBuilder(
          org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.getDefaultInstance());
    }
    /**
     * <pre>
     * [optional] properties of the process
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
     */
    public org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.Builder addPropertiesBuilder(
        int index) {
      return getPropertiesFieldBuilder().addBuilder(
          index, org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.getDefaultInstance());
    }
    /**
     * <pre>
     * [optional] properties of the process
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 3;</code>
     */
    public java.util.List<org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.Builder>
         getPropertiesBuilderList() {
      return getPropertiesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.apache.skywalking.apm.network.common.v3.KeyStringValuePair, org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.Builder, org.apache.skywalking.apm.network.common.v3.KeyStringValuePairOrBuilder>
        getPropertiesFieldBuilder() {
      if (propertiesBuilder_ == null) {
        propertiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.apache.skywalking.apm.network.common.v3.KeyStringValuePair, org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.Builder, org.apache.skywalking.apm.network.common.v3.KeyStringValuePairOrBuilder>(
                properties_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        properties_ = null;
      }
      return propertiesBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.EBPFHostProcessMetadata)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.EBPFHostProcessMetadata)
  private static final EBPFHostProcessMetadata DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new EBPFHostProcessMetadata();
  }

  public static EBPFHostProcessMetadata getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EBPFHostProcessMetadata>
      PARSER = new com.google.protobuf.AbstractParser<EBPFHostProcessMetadata>() {
    @Override
    public EBPFHostProcessMetadata parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new EBPFHostProcessMetadata(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<EBPFHostProcessMetadata> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<EBPFHostProcessMetadata> getParserForType() {
    return PARSER;
  }

  @Override
  public EBPFHostProcessMetadata getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

