// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: language-agent/Meter.proto

package org.apache.skywalking.apm.network.language.agent.v3;

public final class Meter {
  private Meter() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skywalking_v3_Label_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skywalking_v3_Label_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skywalking_v3_MeterBucketValue_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skywalking_v3_MeterBucketValue_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skywalking_v3_MeterSingleValue_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skywalking_v3_MeterSingleValue_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skywalking_v3_MeterHistogram_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skywalking_v3_MeterHistogram_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skywalking_v3_MeterData_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skywalking_v3_MeterData_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skywalking_v3_MeterDataCollection_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skywalking_v3_MeterDataCollection_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\032language-agent/Meter.proto\022\rskywalking" +
      ".v3\032\024common/Command.proto\"$\n\005Label\022\014\n\004na" +
      "me\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"M\n\020MeterBucketVa" +
      "lue\022\016\n\006bucket\030\001 \001(\001\022\r\n\005count\030\002 \001(\003\022\032\n\022is" +
      "NegativeInfinity\030\003 \001(\010\"U\n\020MeterSingleVal" +
      "ue\022\014\n\004name\030\001 \001(\t\022$\n\006labels\030\002 \003(\0132\024.skywa" +
      "lking.v3.Label\022\r\n\005value\030\003 \001(\001\"u\n\016MeterHi" +
      "stogram\022\014\n\004name\030\001 \001(\t\022$\n\006labels\030\002 \003(\0132\024." +
      "skywalking.v3.Label\022/\n\006values\030\003 \003(\0132\037.sk" +
      "ywalking.v3.MeterBucketValue\"\276\001\n\tMeterDa" +
      "ta\0226\n\013singleValue\030\001 \001(\0132\037.skywalking.v3." +
      "MeterSingleValueH\000\0222\n\thistogram\030\002 \001(\0132\035." +
      "skywalking.v3.MeterHistogramH\000\022\017\n\007servic" +
      "e\030\003 \001(\t\022\027\n\017serviceInstance\030\004 \001(\t\022\021\n\ttime" +
      "stamp\030\005 \001(\003B\010\n\006metric\"B\n\023MeterDataCollec" +
      "tion\022+\n\tmeterData\030\001 \003(\0132\030.skywalking.v3." +
      "MeterData2\247\001\n\022MeterReportService\022@\n\007coll" +
      "ect\022\030.skywalking.v3.MeterData\032\027.skywalki" +
      "ng.v3.Commands\"\000(\001\022O\n\014collectBatch\022\".sky" +
      "walking.v3.MeterDataCollection\032\027.skywalk" +
      "ing.v3.Commands\"\000(\001Bs\n3org.apache.skywal" +
      "king.apm.network.language.agent.v3P\001Z:sk" +
      "ywalking.apache.org/repo/goapi/collect/l" +
      "anguage/agent/v3b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.apache.skywalking.apm.network.common.v3.CommandOuterClass.getDescriptor(),
        });
    internal_static_skywalking_v3_Label_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_skywalking_v3_Label_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skywalking_v3_Label_descriptor,
        new String[] { "Name", "Value", });
    internal_static_skywalking_v3_MeterBucketValue_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_skywalking_v3_MeterBucketValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skywalking_v3_MeterBucketValue_descriptor,
        new String[] { "Bucket", "Count", "IsNegativeInfinity", });
    internal_static_skywalking_v3_MeterSingleValue_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_skywalking_v3_MeterSingleValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skywalking_v3_MeterSingleValue_descriptor,
        new String[] { "Name", "Labels", "Value", });
    internal_static_skywalking_v3_MeterHistogram_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_skywalking_v3_MeterHistogram_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skywalking_v3_MeterHistogram_descriptor,
        new String[] { "Name", "Labels", "Values", });
    internal_static_skywalking_v3_MeterData_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_skywalking_v3_MeterData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skywalking_v3_MeterData_descriptor,
        new String[] { "SingleValue", "Histogram", "Service", "ServiceInstance", "Timestamp", "Metric", });
    internal_static_skywalking_v3_MeterDataCollection_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_skywalking_v3_MeterDataCollection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skywalking_v3_MeterDataCollection_descriptor,
        new String[] { "MeterData", });
    org.apache.skywalking.apm.network.common.v3.CommandOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
