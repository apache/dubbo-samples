// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/accesslog.proto

package org.apache.skywalking.apm.network.ebpf.accesslog.v3;

/**
 * Protobuf enum {@code skywalking.v3.AccessLogKernelWriteSyscall}
 */
public enum AccessLogKernelWriteSyscall
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>Write = 0;</code>
   */
  Write(0),
  /**
   * <code>Writev = 1;</code>
   */
  Writev(1),
  /**
   * <code>Send = 2;</code>
   */
  Send(2),
  /**
   * <code>SendTo = 3;</code>
   */
  SendTo(3),
  /**
   * <code>SendMsg = 4;</code>
   */
  SendMsg(4),
  /**
   * <code>SendMmsg = 5;</code>
   */
  SendMmsg(5),
  /**
   * <code>SendFile = 6;</code>
   */
  SendFile(6),
  /**
   * <code>SendFile64 = 7;</code>
   */
  SendFile64(7),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>Write = 0;</code>
   */
  public static final int Write_VALUE = 0;
  /**
   * <code>Writev = 1;</code>
   */
  public static final int Writev_VALUE = 1;
  /**
   * <code>Send = 2;</code>
   */
  public static final int Send_VALUE = 2;
  /**
   * <code>SendTo = 3;</code>
   */
  public static final int SendTo_VALUE = 3;
  /**
   * <code>SendMsg = 4;</code>
   */
  public static final int SendMsg_VALUE = 4;
  /**
   * <code>SendMmsg = 5;</code>
   */
  public static final int SendMmsg_VALUE = 5;
  /**
   * <code>SendFile = 6;</code>
   */
  public static final int SendFile_VALUE = 6;
  /**
   * <code>SendFile64 = 7;</code>
   */
  public static final int SendFile64_VALUE = 7;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @Deprecated
  public static AccessLogKernelWriteSyscall valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static AccessLogKernelWriteSyscall forNumber(int value) {
    switch (value) {
      case 0: return Write;
      case 1: return Writev;
      case 2: return Send;
      case 3: return SendTo;
      case 4: return SendMsg;
      case 5: return SendMmsg;
      case 6: return SendFile;
      case 7: return SendFile64;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<AccessLogKernelWriteSyscall>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      AccessLogKernelWriteSyscall> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<AccessLogKernelWriteSyscall>() {
          public AccessLogKernelWriteSyscall findValueByNumber(int number) {
            return AccessLogKernelWriteSyscall.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return Accesslog.getDescriptor().getEnumTypes().get(4);
  }

  private static final AccessLogKernelWriteSyscall[] VALUES = values();

  public static AccessLogKernelWriteSyscall valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private AccessLogKernelWriteSyscall(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:skywalking.v3.AccessLogKernelWriteSyscall)
}

