// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logging/Logging.proto

package org.apache.skywalking.apm.network.v3;

/**
 * <pre>
 * Logs with trace context, represent agent system has injects context(IDs) into log text.
 * </pre>
 *
 * Protobuf type {@code skywalking.v3.TraceContext}
 */
public final class TraceContext extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.TraceContext)
    TraceContextOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TraceContext.newBuilder() to construct.
  private TraceContext(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TraceContext() {
    traceId_ = "";
    traceSegmentId_ = "";
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new TraceContext();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TraceContext(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            String s = input.readStringRequireUtf8();

            traceId_ = s;
            break;
          }
          case 18: {
            String s = input.readStringRequireUtf8();

            traceSegmentId_ = s;
            break;
          }
          case 24: {

            spanId_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.skywalking.apm.network.logging.v3.Logging.internal_static_skywalking_v3_TraceContext_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.skywalking.apm.network.logging.v3.Logging.internal_static_skywalking_v3_TraceContext_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.skywalking.apm.network.logging.v3.TraceContext.class, org.apache.skywalking.apm.network.logging.v3.TraceContext.Builder.class);
  }

  public static final int TRACEID_FIELD_NUMBER = 1;
  private volatile Object traceId_;
  /**
   * <pre>
   * [Optional] A string id represents the whole trace.
   * </pre>
   *
   * <code>string traceId = 1;</code>
   * @return The traceId.
   */
  @Override
  public String getTraceId() {
    Object ref = traceId_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      traceId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * [Optional] A string id represents the whole trace.
   * </pre>
   *
   * <code>string traceId = 1;</code>
   * @return The bytes for traceId.
   */
  @Override
  public com.google.protobuf.ByteString
      getTraceIdBytes() {
    Object ref = traceId_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      traceId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TRACESEGMENTID_FIELD_NUMBER = 2;
  private volatile Object traceSegmentId_;
  /**
   * <pre>
   * [Optional] A unique id represents this segment. Other segments could use this id to reference as a child segment.
   * </pre>
   *
   * <code>string traceSegmentId = 2;</code>
   * @return The traceSegmentId.
   */
  @Override
  public String getTraceSegmentId() {
    Object ref = traceSegmentId_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      traceSegmentId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * [Optional] A unique id represents this segment. Other segments could use this id to reference as a child segment.
   * </pre>
   *
   * <code>string traceSegmentId = 2;</code>
   * @return The bytes for traceSegmentId.
   */
  @Override
  public com.google.protobuf.ByteString
      getTraceSegmentIdBytes() {
    Object ref = traceSegmentId_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      traceSegmentId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SPANID_FIELD_NUMBER = 3;
  private int spanId_;
  /**
   * <pre>
   * [Optional] The number id of the span. Should be unique in the whole segment.
   * Starting at 0.
   * </pre>
   *
   * <code>int32 spanId = 3;</code>
   * @return The spanId.
   */
  @Override
  public int getSpanId() {
    return spanId_;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(traceId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, traceId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(traceSegmentId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, traceSegmentId_);
    }
    if (spanId_ != 0) {
      output.writeInt32(3, spanId_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(traceId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, traceId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(traceSegmentId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, traceSegmentId_);
    }
    if (spanId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, spanId_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.skywalking.apm.network.logging.v3.TraceContext)) {
      return super.equals(obj);
    }
    org.apache.skywalking.apm.network.logging.v3.TraceContext other = (org.apache.skywalking.apm.network.logging.v3.TraceContext) obj;

    if (!getTraceId()
        .equals(other.getTraceId())) return false;
    if (!getTraceSegmentId()
        .equals(other.getTraceSegmentId())) return false;
    if (getSpanId()
        != other.getSpanId()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TRACEID_FIELD_NUMBER;
    hash = (53 * hash) + getTraceId().hashCode();
    hash = (37 * hash) + TRACESEGMENTID_FIELD_NUMBER;
    hash = (53 * hash) + getTraceSegmentId().hashCode();
    hash = (37 * hash) + SPANID_FIELD_NUMBER;
    hash = (53 * hash) + getSpanId();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.skywalking.apm.network.logging.v3.TraceContext parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.logging.v3.TraceContext parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.logging.v3.TraceContext parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.logging.v3.TraceContext parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.logging.v3.TraceContext parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.logging.v3.TraceContext parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.logging.v3.TraceContext parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.logging.v3.TraceContext parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.logging.v3.TraceContext parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.logging.v3.TraceContext parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.logging.v3.TraceContext parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.logging.v3.TraceContext parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.skywalking.apm.network.logging.v3.TraceContext prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Logs with trace context, represent agent system has injects context(IDs) into log text.
   * </pre>
   *
   * Protobuf type {@code skywalking.v3.TraceContext}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.TraceContext)
      org.apache.skywalking.apm.network.logging.v3.TraceContextOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.skywalking.apm.network.logging.v3.Logging.internal_static_skywalking_v3_TraceContext_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.skywalking.apm.network.logging.v3.Logging.internal_static_skywalking_v3_TraceContext_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.skywalking.apm.network.logging.v3.TraceContext.class, org.apache.skywalking.apm.network.logging.v3.TraceContext.Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.logging.v3.TraceContext.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      traceId_ = "";

      traceSegmentId_ = "";

      spanId_ = 0;

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.skywalking.apm.network.logging.v3.Logging.internal_static_skywalking_v3_TraceContext_descriptor;
    }

    @Override
    public org.apache.skywalking.apm.network.logging.v3.TraceContext getDefaultInstanceForType() {
      return org.apache.skywalking.apm.network.logging.v3.TraceContext.getDefaultInstance();
    }

    @Override
    public org.apache.skywalking.apm.network.logging.v3.TraceContext build() {
      org.apache.skywalking.apm.network.logging.v3.TraceContext result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public org.apache.skywalking.apm.network.logging.v3.TraceContext buildPartial() {
      org.apache.skywalking.apm.network.logging.v3.TraceContext result = new org.apache.skywalking.apm.network.logging.v3.TraceContext(this);
      result.traceId_ = traceId_;
      result.traceSegmentId_ = traceSegmentId_;
      result.spanId_ = spanId_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.skywalking.apm.network.logging.v3.TraceContext) {
        return mergeFrom((org.apache.skywalking.apm.network.logging.v3.TraceContext)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.skywalking.apm.network.logging.v3.TraceContext other) {
      if (other == org.apache.skywalking.apm.network.logging.v3.TraceContext.getDefaultInstance()) return this;
      if (!other.getTraceId().isEmpty()) {
        traceId_ = other.traceId_;
        onChanged();
      }
      if (!other.getTraceSegmentId().isEmpty()) {
        traceSegmentId_ = other.traceSegmentId_;
        onChanged();
      }
      if (other.getSpanId() != 0) {
        setSpanId(other.getSpanId());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.apache.skywalking.apm.network.logging.v3.TraceContext parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.apache.skywalking.apm.network.logging.v3.TraceContext) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private Object traceId_ = "";
    /**
     * <pre>
     * [Optional] A string id represents the whole trace.
     * </pre>
     *
     * <code>string traceId = 1;</code>
     * @return The traceId.
     */
    public String getTraceId() {
      Object ref = traceId_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        traceId_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * [Optional] A string id represents the whole trace.
     * </pre>
     *
     * <code>string traceId = 1;</code>
     * @return The bytes for traceId.
     */
    public com.google.protobuf.ByteString
        getTraceIdBytes() {
      Object ref = traceId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        traceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * [Optional] A string id represents the whole trace.
     * </pre>
     *
     * <code>string traceId = 1;</code>
     * @param value The traceId to set.
     * @return This builder for chaining.
     */
    public Builder setTraceId(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      traceId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [Optional] A string id represents the whole trace.
     * </pre>
     *
     * <code>string traceId = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTraceId() {

      traceId_ = getDefaultInstance().getTraceId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [Optional] A string id represents the whole trace.
     * </pre>
     *
     * <code>string traceId = 1;</code>
     * @param value The bytes for traceId to set.
     * @return This builder for chaining.
     */
    public Builder setTraceIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      traceId_ = value;
      onChanged();
      return this;
    }

    private Object traceSegmentId_ = "";
    /**
     * <pre>
     * [Optional] A unique id represents this segment. Other segments could use this id to reference as a child segment.
     * </pre>
     *
     * <code>string traceSegmentId = 2;</code>
     * @return The traceSegmentId.
     */
    public String getTraceSegmentId() {
      Object ref = traceSegmentId_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        traceSegmentId_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * [Optional] A unique id represents this segment. Other segments could use this id to reference as a child segment.
     * </pre>
     *
     * <code>string traceSegmentId = 2;</code>
     * @return The bytes for traceSegmentId.
     */
    public com.google.protobuf.ByteString
        getTraceSegmentIdBytes() {
      Object ref = traceSegmentId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        traceSegmentId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * [Optional] A unique id represents this segment. Other segments could use this id to reference as a child segment.
     * </pre>
     *
     * <code>string traceSegmentId = 2;</code>
     * @param value The traceSegmentId to set.
     * @return This builder for chaining.
     */
    public Builder setTraceSegmentId(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      traceSegmentId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [Optional] A unique id represents this segment. Other segments could use this id to reference as a child segment.
     * </pre>
     *
     * <code>string traceSegmentId = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTraceSegmentId() {

      traceSegmentId_ = getDefaultInstance().getTraceSegmentId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [Optional] A unique id represents this segment. Other segments could use this id to reference as a child segment.
     * </pre>
     *
     * <code>string traceSegmentId = 2;</code>
     * @param value The bytes for traceSegmentId to set.
     * @return This builder for chaining.
     */
    public Builder setTraceSegmentIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      traceSegmentId_ = value;
      onChanged();
      return this;
    }

    private int spanId_ ;
    /**
     * <pre>
     * [Optional] The number id of the span. Should be unique in the whole segment.
     * Starting at 0.
     * </pre>
     *
     * <code>int32 spanId = 3;</code>
     * @return The spanId.
     */
    @Override
    public int getSpanId() {
      return spanId_;
    }
    /**
     * <pre>
     * [Optional] The number id of the span. Should be unique in the whole segment.
     * Starting at 0.
     * </pre>
     *
     * <code>int32 spanId = 3;</code>
     * @param value The spanId to set.
     * @return This builder for chaining.
     */
    public Builder setSpanId(int value) {

      spanId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [Optional] The number id of the span. Should be unique in the whole segment.
     * Starting at 0.
     * </pre>
     *
     * <code>int32 spanId = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearSpanId() {

      spanId_ = 0;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.TraceContext)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.TraceContext)
  private static final org.apache.skywalking.apm.network.logging.v3.TraceContext DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.skywalking.apm.network.logging.v3.TraceContext();
  }

  public static org.apache.skywalking.apm.network.logging.v3.TraceContext getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TraceContext>
      PARSER = new com.google.protobuf.AbstractParser<TraceContext>() {
    @Override
    public TraceContext parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TraceContext(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TraceContext> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<TraceContext> getParserForType() {
    return PARSER;
  }

  @Override
  public org.apache.skywalking.apm.network.logging.v3.TraceContext getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

