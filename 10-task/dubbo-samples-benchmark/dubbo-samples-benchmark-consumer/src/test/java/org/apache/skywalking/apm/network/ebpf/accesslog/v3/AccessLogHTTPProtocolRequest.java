// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/accesslog.proto

package org.apache.skywalking.apm.network.ebpf.accesslog.v3;

/**
 * Protobuf type {@code skywalking.v3.AccessLogHTTPProtocolRequest}
 */
public final class AccessLogHTTPProtocolRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.AccessLogHTTPProtocolRequest)
    AccessLogHTTPProtocolRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AccessLogHTTPProtocolRequest.newBuilder() to construct.
  private AccessLogHTTPProtocolRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AccessLogHTTPProtocolRequest() {
    method_ = 0;
    path_ = "";
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new AccessLogHTTPProtocolRequest();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AccessLogHTTPProtocolRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            method_ = rawValue;
            break;
          }
          case 18: {
            String s = input.readStringRequireUtf8();

            path_ = s;
            break;
          }
          case 24: {

            sizeOfHeadersBytes_ = input.readUInt64();
            break;
          }
          case 32: {

            sizeOfBodyBytes_ = input.readUInt64();
            break;
          }
          case 42: {
            AccessLogTraceInfo.Builder subBuilder = null;
            if (trace_ != null) {
              subBuilder = trace_.toBuilder();
            }
            trace_ = input.readMessage(AccessLogTraceInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(trace_);
              trace_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Accesslog.internal_static_skywalking_v3_AccessLogHTTPProtocolRequest_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Accesslog.internal_static_skywalking_v3_AccessLogHTTPProtocolRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            AccessLogHTTPProtocolRequest.class, Builder.class);
  }

  public static final int METHOD_FIELD_NUMBER = 1;
  private int method_;
  /**
   * <code>.skywalking.v3.AccessLogHTTPProtocolRequestMethod method = 1;</code>
   * @return The enum numeric value on the wire for method.
   */
  @Override public int getMethodValue() {
    return method_;
  }
  /**
   * <code>.skywalking.v3.AccessLogHTTPProtocolRequestMethod method = 1;</code>
   * @return The method.
   */
  @Override public AccessLogHTTPProtocolRequestMethod getMethod() {
    @SuppressWarnings("deprecation")
    AccessLogHTTPProtocolRequestMethod result = AccessLogHTTPProtocolRequestMethod.valueOf(method_);
    return result == null ? AccessLogHTTPProtocolRequestMethod.UNRECOGNIZED : result;
  }

  public static final int PATH_FIELD_NUMBER = 2;
  private volatile Object path_;
  /**
   * <pre>
   * The path portion from the incoming request URI.
   * </pre>
   *
   * <code>string path = 2;</code>
   * @return The path.
   */
  @Override
  public String getPath() {
    Object ref = path_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      path_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The path portion from the incoming request URI.
   * </pre>
   *
   * <code>string path = 2;</code>
   * @return The bytes for path.
   */
  @Override
  public com.google.protobuf.ByteString
      getPathBytes() {
    Object ref = path_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      path_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SIZEOFHEADERSBYTES_FIELD_NUMBER = 3;
  private long sizeOfHeadersBytes_;
  /**
   * <pre>
   * Request header and body size.
   * </pre>
   *
   * <code>uint64 sizeOfHeadersBytes = 3;</code>
   * @return The sizeOfHeadersBytes.
   */
  @Override
  public long getSizeOfHeadersBytes() {
    return sizeOfHeadersBytes_;
  }

  public static final int SIZEOFBODYBYTES_FIELD_NUMBER = 4;
  private long sizeOfBodyBytes_;
  /**
   * <code>uint64 sizeOfBodyBytes = 4;</code>
   * @return The sizeOfBodyBytes.
   */
  @Override
  public long getSizeOfBodyBytes() {
    return sizeOfBodyBytes_;
  }

  public static final int TRACE_FIELD_NUMBER = 5;
  private AccessLogTraceInfo trace_;
  /**
   * <pre>
   * The trace information if detected.
   * </pre>
   *
   * <code>.skywalking.v3.AccessLogTraceInfo trace = 5;</code>
   * @return Whether the trace field is set.
   */
  @Override
  public boolean hasTrace() {
    return trace_ != null;
  }
  /**
   * <pre>
   * The trace information if detected.
   * </pre>
   *
   * <code>.skywalking.v3.AccessLogTraceInfo trace = 5;</code>
   * @return The trace.
   */
  @Override
  public AccessLogTraceInfo getTrace() {
    return trace_ == null ? AccessLogTraceInfo.getDefaultInstance() : trace_;
  }
  /**
   * <pre>
   * The trace information if detected.
   * </pre>
   *
   * <code>.skywalking.v3.AccessLogTraceInfo trace = 5;</code>
   */
  @Override
  public AccessLogTraceInfoOrBuilder getTraceOrBuilder() {
    return getTrace();
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (method_ != AccessLogHTTPProtocolRequestMethod.Get.getNumber()) {
      output.writeEnum(1, method_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(path_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, path_);
    }
    if (sizeOfHeadersBytes_ != 0L) {
      output.writeUInt64(3, sizeOfHeadersBytes_);
    }
    if (sizeOfBodyBytes_ != 0L) {
      output.writeUInt64(4, sizeOfBodyBytes_);
    }
    if (trace_ != null) {
      output.writeMessage(5, getTrace());
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (method_ != AccessLogHTTPProtocolRequestMethod.Get.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, method_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(path_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, path_);
    }
    if (sizeOfHeadersBytes_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, sizeOfHeadersBytes_);
    }
    if (sizeOfBodyBytes_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(4, sizeOfBodyBytes_);
    }
    if (trace_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getTrace());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof AccessLogHTTPProtocolRequest)) {
      return super.equals(obj);
    }
    AccessLogHTTPProtocolRequest other = (AccessLogHTTPProtocolRequest) obj;

    if (method_ != other.method_) return false;
    if (!getPath()
        .equals(other.getPath())) return false;
    if (getSizeOfHeadersBytes()
        != other.getSizeOfHeadersBytes()) return false;
    if (getSizeOfBodyBytes()
        != other.getSizeOfBodyBytes()) return false;
    if (hasTrace() != other.hasTrace()) return false;
    if (hasTrace()) {
      if (!getTrace()
          .equals(other.getTrace())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + METHOD_FIELD_NUMBER;
    hash = (53 * hash) + method_;
    hash = (37 * hash) + PATH_FIELD_NUMBER;
    hash = (53 * hash) + getPath().hashCode();
    hash = (37 * hash) + SIZEOFHEADERSBYTES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getSizeOfHeadersBytes());
    hash = (37 * hash) + SIZEOFBODYBYTES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getSizeOfBodyBytes());
    if (hasTrace()) {
      hash = (37 * hash) + TRACE_FIELD_NUMBER;
      hash = (53 * hash) + getTrace().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static AccessLogHTTPProtocolRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AccessLogHTTPProtocolRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AccessLogHTTPProtocolRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AccessLogHTTPProtocolRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AccessLogHTTPProtocolRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AccessLogHTTPProtocolRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AccessLogHTTPProtocolRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static AccessLogHTTPProtocolRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static AccessLogHTTPProtocolRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static AccessLogHTTPProtocolRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static AccessLogHTTPProtocolRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static AccessLogHTTPProtocolRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(AccessLogHTTPProtocolRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code skywalking.v3.AccessLogHTTPProtocolRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.AccessLogHTTPProtocolRequest)
      AccessLogHTTPProtocolRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Accesslog.internal_static_skywalking_v3_AccessLogHTTPProtocolRequest_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Accesslog.internal_static_skywalking_v3_AccessLogHTTPProtocolRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              AccessLogHTTPProtocolRequest.class, Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.ebpf.accesslog.v3.AccessLogHTTPProtocolRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      method_ = 0;

      path_ = "";

      sizeOfHeadersBytes_ = 0L;

      sizeOfBodyBytes_ = 0L;

      if (traceBuilder_ == null) {
        trace_ = null;
      } else {
        trace_ = null;
        traceBuilder_ = null;
      }
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Accesslog.internal_static_skywalking_v3_AccessLogHTTPProtocolRequest_descriptor;
    }

    @Override
    public AccessLogHTTPProtocolRequest getDefaultInstanceForType() {
      return AccessLogHTTPProtocolRequest.getDefaultInstance();
    }

    @Override
    public AccessLogHTTPProtocolRequest build() {
      AccessLogHTTPProtocolRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public AccessLogHTTPProtocolRequest buildPartial() {
      AccessLogHTTPProtocolRequest result = new AccessLogHTTPProtocolRequest(this);
      result.method_ = method_;
      result.path_ = path_;
      result.sizeOfHeadersBytes_ = sizeOfHeadersBytes_;
      result.sizeOfBodyBytes_ = sizeOfBodyBytes_;
      if (traceBuilder_ == null) {
        result.trace_ = trace_;
      } else {
        result.trace_ = traceBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof AccessLogHTTPProtocolRequest) {
        return mergeFrom((AccessLogHTTPProtocolRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(AccessLogHTTPProtocolRequest other) {
      if (other == AccessLogHTTPProtocolRequest.getDefaultInstance()) return this;
      if (other.method_ != 0) {
        setMethodValue(other.getMethodValue());
      }
      if (!other.getPath().isEmpty()) {
        path_ = other.path_;
        onChanged();
      }
      if (other.getSizeOfHeadersBytes() != 0L) {
        setSizeOfHeadersBytes(other.getSizeOfHeadersBytes());
      }
      if (other.getSizeOfBodyBytes() != 0L) {
        setSizeOfBodyBytes(other.getSizeOfBodyBytes());
      }
      if (other.hasTrace()) {
        mergeTrace(other.getTrace());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      AccessLogHTTPProtocolRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (AccessLogHTTPProtocolRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int method_ = 0;
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolRequestMethod method = 1;</code>
     * @return The enum numeric value on the wire for method.
     */
    @Override public int getMethodValue() {
      return method_;
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolRequestMethod method = 1;</code>
     * @param value The enum numeric value on the wire for method to set.
     * @return This builder for chaining.
     */
    public Builder setMethodValue(int value) {

      method_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolRequestMethod method = 1;</code>
     * @return The method.
     */
    @Override
    public AccessLogHTTPProtocolRequestMethod getMethod() {
      @SuppressWarnings("deprecation")
      AccessLogHTTPProtocolRequestMethod result = AccessLogHTTPProtocolRequestMethod.valueOf(method_);
      return result == null ? AccessLogHTTPProtocolRequestMethod.UNRECOGNIZED : result;
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolRequestMethod method = 1;</code>
     * @param value The method to set.
     * @return This builder for chaining.
     */
    public Builder setMethod(AccessLogHTTPProtocolRequestMethod value) {
      if (value == null) {
        throw new NullPointerException();
      }

      method_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.skywalking.v3.AccessLogHTTPProtocolRequestMethod method = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearMethod() {

      method_ = 0;
      onChanged();
      return this;
    }

    private Object path_ = "";
    /**
     * <pre>
     * The path portion from the incoming request URI.
     * </pre>
     *
     * <code>string path = 2;</code>
     * @return The path.
     */
    public String getPath() {
      Object ref = path_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        path_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * The path portion from the incoming request URI.
     * </pre>
     *
     * <code>string path = 2;</code>
     * @return The bytes for path.
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      Object ref = path_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The path portion from the incoming request URI.
     * </pre>
     *
     * <code>string path = 2;</code>
     * @param value The path to set.
     * @return This builder for chaining.
     */
    public Builder setPath(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      path_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The path portion from the incoming request URI.
     * </pre>
     *
     * <code>string path = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearPath() {

      path_ = getDefaultInstance().getPath();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The path portion from the incoming request URI.
     * </pre>
     *
     * <code>string path = 2;</code>
     * @param value The bytes for path to set.
     * @return This builder for chaining.
     */
    public Builder setPathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      path_ = value;
      onChanged();
      return this;
    }

    private long sizeOfHeadersBytes_ ;
    /**
     * <pre>
     * Request header and body size.
     * </pre>
     *
     * <code>uint64 sizeOfHeadersBytes = 3;</code>
     * @return The sizeOfHeadersBytes.
     */
    @Override
    public long getSizeOfHeadersBytes() {
      return sizeOfHeadersBytes_;
    }
    /**
     * <pre>
     * Request header and body size.
     * </pre>
     *
     * <code>uint64 sizeOfHeadersBytes = 3;</code>
     * @param value The sizeOfHeadersBytes to set.
     * @return This builder for chaining.
     */
    public Builder setSizeOfHeadersBytes(long value) {

      sizeOfHeadersBytes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Request header and body size.
     * </pre>
     *
     * <code>uint64 sizeOfHeadersBytes = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearSizeOfHeadersBytes() {

      sizeOfHeadersBytes_ = 0L;
      onChanged();
      return this;
    }

    private long sizeOfBodyBytes_ ;
    /**
     * <code>uint64 sizeOfBodyBytes = 4;</code>
     * @return The sizeOfBodyBytes.
     */
    @Override
    public long getSizeOfBodyBytes() {
      return sizeOfBodyBytes_;
    }
    /**
     * <code>uint64 sizeOfBodyBytes = 4;</code>
     * @param value The sizeOfBodyBytes to set.
     * @return This builder for chaining.
     */
    public Builder setSizeOfBodyBytes(long value) {

      sizeOfBodyBytes_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 sizeOfBodyBytes = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearSizeOfBodyBytes() {

      sizeOfBodyBytes_ = 0L;
      onChanged();
      return this;
    }

    private AccessLogTraceInfo trace_;
    private com.google.protobuf.SingleFieldBuilderV3<
        AccessLogTraceInfo, AccessLogTraceInfo.Builder, AccessLogTraceInfoOrBuilder> traceBuilder_;
    /**
     * <pre>
     * The trace information if detected.
     * </pre>
     *
     * <code>.skywalking.v3.AccessLogTraceInfo trace = 5;</code>
     * @return Whether the trace field is set.
     */
    public boolean hasTrace() {
      return traceBuilder_ != null || trace_ != null;
    }
    /**
     * <pre>
     * The trace information if detected.
     * </pre>
     *
     * <code>.skywalking.v3.AccessLogTraceInfo trace = 5;</code>
     * @return The trace.
     */
    public AccessLogTraceInfo getTrace() {
      if (traceBuilder_ == null) {
        return trace_ == null ? AccessLogTraceInfo.getDefaultInstance() : trace_;
      } else {
        return traceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The trace information if detected.
     * </pre>
     *
     * <code>.skywalking.v3.AccessLogTraceInfo trace = 5;</code>
     */
    public Builder setTrace(AccessLogTraceInfo value) {
      if (traceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        trace_ = value;
        onChanged();
      } else {
        traceBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The trace information if detected.
     * </pre>
     *
     * <code>.skywalking.v3.AccessLogTraceInfo trace = 5;</code>
     */
    public Builder setTrace(
        AccessLogTraceInfo.Builder builderForValue) {
      if (traceBuilder_ == null) {
        trace_ = builderForValue.build();
        onChanged();
      } else {
        traceBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The trace information if detected.
     * </pre>
     *
     * <code>.skywalking.v3.AccessLogTraceInfo trace = 5;</code>
     */
    public Builder mergeTrace(AccessLogTraceInfo value) {
      if (traceBuilder_ == null) {
        if (trace_ != null) {
          trace_ =
            AccessLogTraceInfo.newBuilder(trace_).mergeFrom(value).buildPartial();
        } else {
          trace_ = value;
        }
        onChanged();
      } else {
        traceBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The trace information if detected.
     * </pre>
     *
     * <code>.skywalking.v3.AccessLogTraceInfo trace = 5;</code>
     */
    public Builder clearTrace() {
      if (traceBuilder_ == null) {
        trace_ = null;
        onChanged();
      } else {
        trace_ = null;
        traceBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The trace information if detected.
     * </pre>
     *
     * <code>.skywalking.v3.AccessLogTraceInfo trace = 5;</code>
     */
    public AccessLogTraceInfo.Builder getTraceBuilder() {

      onChanged();
      return getTraceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The trace information if detected.
     * </pre>
     *
     * <code>.skywalking.v3.AccessLogTraceInfo trace = 5;</code>
     */
    public AccessLogTraceInfoOrBuilder getTraceOrBuilder() {
      if (traceBuilder_ != null) {
        return traceBuilder_.getMessageOrBuilder();
      } else {
        return trace_ == null ?
            AccessLogTraceInfo.getDefaultInstance() : trace_;
      }
    }
    /**
     * <pre>
     * The trace information if detected.
     * </pre>
     *
     * <code>.skywalking.v3.AccessLogTraceInfo trace = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        AccessLogTraceInfo, AccessLogTraceInfo.Builder, AccessLogTraceInfoOrBuilder>
        getTraceFieldBuilder() {
      if (traceBuilder_ == null) {
        traceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            AccessLogTraceInfo, AccessLogTraceInfo.Builder, AccessLogTraceInfoOrBuilder>(
                getTrace(),
                getParentForChildren(),
                isClean());
        trace_ = null;
      }
      return traceBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.AccessLogHTTPProtocolRequest)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.AccessLogHTTPProtocolRequest)
  private static final AccessLogHTTPProtocolRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new AccessLogHTTPProtocolRequest();
  }

  public static AccessLogHTTPProtocolRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AccessLogHTTPProtocolRequest>
      PARSER = new com.google.protobuf.AbstractParser<AccessLogHTTPProtocolRequest>() {
    @Override
    public AccessLogHTTPProtocolRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AccessLogHTTPProtocolRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AccessLogHTTPProtocolRequest> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<AccessLogHTTPProtocolRequest> getParserForType() {
    return PARSER;
  }

  @Override
  public AccessLogHTTPProtocolRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

