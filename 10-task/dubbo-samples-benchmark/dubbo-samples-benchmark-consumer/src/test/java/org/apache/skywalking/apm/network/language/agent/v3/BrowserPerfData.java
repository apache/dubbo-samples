// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: browser/BrowserPerf.proto

package org.apache.skywalking.apm.network.language.agent.v3;

/**
 * Protobuf type {@code skywalking.v3.BrowserPerfData}
 */
public final class BrowserPerfData extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.BrowserPerfData)
    BrowserPerfDataOrBuilder {
private static final long serialVersionUID = 0L;
  // Use BrowserPerfData.newBuilder() to construct.
  private BrowserPerfData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private BrowserPerfData() {
    service_ = "";
    serviceVersion_ = "";
    pagePath_ = "";
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new BrowserPerfData();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private BrowserPerfData(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            String s = input.readStringRequireUtf8();

            service_ = s;
            break;
          }
          case 18: {
            String s = input.readStringRequireUtf8();

            serviceVersion_ = s;
            break;
          }
          case 24: {

            time_ = input.readInt64();
            break;
          }
          case 34: {
            String s = input.readStringRequireUtf8();

            pagePath_ = s;
            break;
          }
          case 40: {

            redirectTime_ = input.readInt32();
            break;
          }
          case 48: {

            dnsTime_ = input.readInt32();
            break;
          }
          case 56: {

            ttfbTime_ = input.readInt32();
            break;
          }
          case 64: {

            tcpTime_ = input.readInt32();
            break;
          }
          case 72: {

            transTime_ = input.readInt32();
            break;
          }
          case 80: {

            domAnalysisTime_ = input.readInt32();
            break;
          }
          case 88: {

            fptTime_ = input.readInt32();
            break;
          }
          case 96: {

            domReadyTime_ = input.readInt32();
            break;
          }
          case 104: {

            loadPageTime_ = input.readInt32();
            break;
          }
          case 112: {

            resTime_ = input.readInt32();
            break;
          }
          case 120: {

            sslTime_ = input.readInt32();
            break;
          }
          case 128: {

            ttlTime_ = input.readInt32();
            break;
          }
          case 136: {

            firstPackTime_ = input.readInt32();
            break;
          }
          case 144: {

            fmpTime_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return BrowserPerf.internal_static_skywalking_v3_BrowserPerfData_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return BrowserPerf.internal_static_skywalking_v3_BrowserPerfData_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            BrowserPerfData.class, Builder.class);
  }

  public static final int SERVICE_FIELD_NUMBER = 1;
  private volatile Object service_;
  /**
   * <code>string service = 1;</code>
   * @return The service.
   */
  @Override
  public String getService() {
    Object ref = service_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      service_ = s;
      return s;
    }
  }
  /**
   * <code>string service = 1;</code>
   * @return The bytes for service.
   */
  @Override
  public com.google.protobuf.ByteString
      getServiceBytes() {
    Object ref = service_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      service_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SERVICEVERSION_FIELD_NUMBER = 2;
  private volatile Object serviceVersion_;
  /**
   * <pre>
   * Service version in browser is the Instance concept in the backend.
   * </pre>
   *
   * <code>string serviceVersion = 2;</code>
   * @return The serviceVersion.
   */
  @Override
  public String getServiceVersion() {
    Object ref = serviceVersion_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      serviceVersion_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Service version in browser is the Instance concept in the backend.
   * </pre>
   *
   * <code>string serviceVersion = 2;</code>
   * @return The bytes for serviceVersion.
   */
  @Override
  public com.google.protobuf.ByteString
      getServiceVersionBytes() {
    Object ref = serviceVersion_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      serviceVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TIME_FIELD_NUMBER = 3;
  private long time_;
  /**
   * <pre>
   * Perf data time, set by the backend side.
   * </pre>
   *
   * <code>int64 time = 3;</code>
   * @return The time.
   */
  @Override
  public long getTime() {
    return time_;
  }

  public static final int PAGEPATH_FIELD_NUMBER = 4;
  private volatile Object pagePath_;
  /**
   * <pre>
   * Page path in browser is the endpoint concept in the backend
   * Page path in the browser, mostly it is URI, without parameter
   * </pre>
   *
   * <code>string pagePath = 4;</code>
   * @return The pagePath.
   */
  @Override
  public String getPagePath() {
    Object ref = pagePath_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      pagePath_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Page path in browser is the endpoint concept in the backend
   * Page path in the browser, mostly it is URI, without parameter
   * </pre>
   *
   * <code>string pagePath = 4;</code>
   * @return The bytes for pagePath.
   */
  @Override
  public com.google.protobuf.ByteString
      getPagePathBytes() {
    Object ref = pagePath_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      pagePath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REDIRECTTIME_FIELD_NUMBER = 5;
  private int redirectTime_;
  /**
   * <pre>
   * Unit of all time related field should be `ms`.
   * </pre>
   *
   * <code>int32 redirectTime = 5;</code>
   * @return The redirectTime.
   */
  @Override
  public int getRedirectTime() {
    return redirectTime_;
  }

  public static final int DNSTIME_FIELD_NUMBER = 6;
  private int dnsTime_;
  /**
   * <pre>
   * DNS query time
   * </pre>
   *
   * <code>int32 dnsTime = 6;</code>
   * @return The dnsTime.
   */
  @Override
  public int getDnsTime() {
    return dnsTime_;
  }

  public static final int TTFBTIME_FIELD_NUMBER = 7;
  private int ttfbTime_;
  /**
   * <pre>
   * Time to first Byte
   * </pre>
   *
   * <code>int32 ttfbTime = 7;</code>
   * @return The ttfbTime.
   */
  @Override
  public int getTtfbTime() {
    return ttfbTime_;
  }

  public static final int TCPTIME_FIELD_NUMBER = 8;
  private int tcpTime_;
  /**
   * <pre>
   *  TCP connection time
   * </pre>
   *
   * <code>int32 tcpTime = 8;</code>
   * @return The tcpTime.
   */
  @Override
  public int getTcpTime() {
    return tcpTime_;
  }

  public static final int TRANSTIME_FIELD_NUMBER = 9;
  private int transTime_;
  /**
   * <pre>
   * Content transfer time
   * </pre>
   *
   * <code>int32 transTime = 9;</code>
   * @return The transTime.
   */
  @Override
  public int getTransTime() {
    return transTime_;
  }

  public static final int DOMANALYSISTIME_FIELD_NUMBER = 10;
  private int domAnalysisTime_;
  /**
   * <pre>
   * Dom parsing time
   * </pre>
   *
   * <code>int32 domAnalysisTime = 10;</code>
   * @return The domAnalysisTime.
   */
  @Override
  public int getDomAnalysisTime() {
    return domAnalysisTime_;
  }

  public static final int FPTTIME_FIELD_NUMBER = 11;
  private int fptTime_;
  /**
   * <pre>
   * First paint time or blank screen time
   * </pre>
   *
   * <code>int32 fptTime = 11;</code>
   * @return The fptTime.
   */
  @Override
  public int getFptTime() {
    return fptTime_;
  }

  public static final int DOMREADYTIME_FIELD_NUMBER = 12;
  private int domReadyTime_;
  /**
   * <pre>
   * Dom ready time
   * </pre>
   *
   * <code>int32 domReadyTime = 12;</code>
   * @return The domReadyTime.
   */
  @Override
  public int getDomReadyTime() {
    return domReadyTime_;
  }

  public static final int LOADPAGETIME_FIELD_NUMBER = 13;
  private int loadPageTime_;
  /**
   * <pre>
   * Page full load time
   * </pre>
   *
   * <code>int32 loadPageTime = 13;</code>
   * @return The loadPageTime.
   */
  @Override
  public int getLoadPageTime() {
    return loadPageTime_;
  }

  public static final int RESTIME_FIELD_NUMBER = 14;
  private int resTime_;
  /**
   * <pre>
   * Synchronous load resources in the page
   * </pre>
   *
   * <code>int32 resTime = 14;</code>
   * @return The resTime.
   */
  @Override
  public int getResTime() {
    return resTime_;
  }

  public static final int SSLTIME_FIELD_NUMBER = 15;
  private int sslTime_;
  /**
   * <pre>
   * Only valid for HTTPS
   * </pre>
   *
   * <code>int32 sslTime = 15;</code>
   * @return The sslTime.
   */
  @Override
  public int getSslTime() {
    return sslTime_;
  }

  public static final int TTLTIME_FIELD_NUMBER = 16;
  private int ttlTime_;
  /**
   * <pre>
   * Time to interact
   * </pre>
   *
   * <code>int32 ttlTime = 16;</code>
   * @return The ttlTime.
   */
  @Override
  public int getTtlTime() {
    return ttlTime_;
  }

  public static final int FIRSTPACKTIME_FIELD_NUMBER = 17;
  private int firstPackTime_;
  /**
   * <pre>
   * First pack time
   * </pre>
   *
   * <code>int32 firstPackTime = 17;</code>
   * @return The firstPackTime.
   */
  @Override
  public int getFirstPackTime() {
    return firstPackTime_;
  }

  public static final int FMPTIME_FIELD_NUMBER = 18;
  private int fmpTime_;
  /**
   * <pre>
   * First Meaningful Paint
   * </pre>
   *
   * <code>int32 fmpTime = 18;</code>
   * @return The fmpTime.
   */
  @Override
  public int getFmpTime() {
    return fmpTime_;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(service_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, service_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceVersion_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, serviceVersion_);
    }
    if (time_ != 0L) {
      output.writeInt64(3, time_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(pagePath_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, pagePath_);
    }
    if (redirectTime_ != 0) {
      output.writeInt32(5, redirectTime_);
    }
    if (dnsTime_ != 0) {
      output.writeInt32(6, dnsTime_);
    }
    if (ttfbTime_ != 0) {
      output.writeInt32(7, ttfbTime_);
    }
    if (tcpTime_ != 0) {
      output.writeInt32(8, tcpTime_);
    }
    if (transTime_ != 0) {
      output.writeInt32(9, transTime_);
    }
    if (domAnalysisTime_ != 0) {
      output.writeInt32(10, domAnalysisTime_);
    }
    if (fptTime_ != 0) {
      output.writeInt32(11, fptTime_);
    }
    if (domReadyTime_ != 0) {
      output.writeInt32(12, domReadyTime_);
    }
    if (loadPageTime_ != 0) {
      output.writeInt32(13, loadPageTime_);
    }
    if (resTime_ != 0) {
      output.writeInt32(14, resTime_);
    }
    if (sslTime_ != 0) {
      output.writeInt32(15, sslTime_);
    }
    if (ttlTime_ != 0) {
      output.writeInt32(16, ttlTime_);
    }
    if (firstPackTime_ != 0) {
      output.writeInt32(17, firstPackTime_);
    }
    if (fmpTime_ != 0) {
      output.writeInt32(18, fmpTime_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(service_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, service_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceVersion_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, serviceVersion_);
    }
    if (time_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, time_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(pagePath_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, pagePath_);
    }
    if (redirectTime_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, redirectTime_);
    }
    if (dnsTime_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, dnsTime_);
    }
    if (ttfbTime_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, ttfbTime_);
    }
    if (tcpTime_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, tcpTime_);
    }
    if (transTime_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, transTime_);
    }
    if (domAnalysisTime_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, domAnalysisTime_);
    }
    if (fptTime_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(11, fptTime_);
    }
    if (domReadyTime_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(12, domReadyTime_);
    }
    if (loadPageTime_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(13, loadPageTime_);
    }
    if (resTime_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(14, resTime_);
    }
    if (sslTime_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(15, sslTime_);
    }
    if (ttlTime_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(16, ttlTime_);
    }
    if (firstPackTime_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(17, firstPackTime_);
    }
    if (fmpTime_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(18, fmpTime_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof BrowserPerfData)) {
      return super.equals(obj);
    }
    BrowserPerfData other = (BrowserPerfData) obj;

    if (!getService()
        .equals(other.getService())) return false;
    if (!getServiceVersion()
        .equals(other.getServiceVersion())) return false;
    if (getTime()
        != other.getTime()) return false;
    if (!getPagePath()
        .equals(other.getPagePath())) return false;
    if (getRedirectTime()
        != other.getRedirectTime()) return false;
    if (getDnsTime()
        != other.getDnsTime()) return false;
    if (getTtfbTime()
        != other.getTtfbTime()) return false;
    if (getTcpTime()
        != other.getTcpTime()) return false;
    if (getTransTime()
        != other.getTransTime()) return false;
    if (getDomAnalysisTime()
        != other.getDomAnalysisTime()) return false;
    if (getFptTime()
        != other.getFptTime()) return false;
    if (getDomReadyTime()
        != other.getDomReadyTime()) return false;
    if (getLoadPageTime()
        != other.getLoadPageTime()) return false;
    if (getResTime()
        != other.getResTime()) return false;
    if (getSslTime()
        != other.getSslTime()) return false;
    if (getTtlTime()
        != other.getTtlTime()) return false;
    if (getFirstPackTime()
        != other.getFirstPackTime()) return false;
    if (getFmpTime()
        != other.getFmpTime()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SERVICE_FIELD_NUMBER;
    hash = (53 * hash) + getService().hashCode();
    hash = (37 * hash) + SERVICEVERSION_FIELD_NUMBER;
    hash = (53 * hash) + getServiceVersion().hashCode();
    hash = (37 * hash) + TIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTime());
    hash = (37 * hash) + PAGEPATH_FIELD_NUMBER;
    hash = (53 * hash) + getPagePath().hashCode();
    hash = (37 * hash) + REDIRECTTIME_FIELD_NUMBER;
    hash = (53 * hash) + getRedirectTime();
    hash = (37 * hash) + DNSTIME_FIELD_NUMBER;
    hash = (53 * hash) + getDnsTime();
    hash = (37 * hash) + TTFBTIME_FIELD_NUMBER;
    hash = (53 * hash) + getTtfbTime();
    hash = (37 * hash) + TCPTIME_FIELD_NUMBER;
    hash = (53 * hash) + getTcpTime();
    hash = (37 * hash) + TRANSTIME_FIELD_NUMBER;
    hash = (53 * hash) + getTransTime();
    hash = (37 * hash) + DOMANALYSISTIME_FIELD_NUMBER;
    hash = (53 * hash) + getDomAnalysisTime();
    hash = (37 * hash) + FPTTIME_FIELD_NUMBER;
    hash = (53 * hash) + getFptTime();
    hash = (37 * hash) + DOMREADYTIME_FIELD_NUMBER;
    hash = (53 * hash) + getDomReadyTime();
    hash = (37 * hash) + LOADPAGETIME_FIELD_NUMBER;
    hash = (53 * hash) + getLoadPageTime();
    hash = (37 * hash) + RESTIME_FIELD_NUMBER;
    hash = (53 * hash) + getResTime();
    hash = (37 * hash) + SSLTIME_FIELD_NUMBER;
    hash = (53 * hash) + getSslTime();
    hash = (37 * hash) + TTLTIME_FIELD_NUMBER;
    hash = (53 * hash) + getTtlTime();
    hash = (37 * hash) + FIRSTPACKTIME_FIELD_NUMBER;
    hash = (53 * hash) + getFirstPackTime();
    hash = (37 * hash) + FMPTIME_FIELD_NUMBER;
    hash = (53 * hash) + getFmpTime();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static BrowserPerfData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static BrowserPerfData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static BrowserPerfData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static BrowserPerfData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static BrowserPerfData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static BrowserPerfData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static BrowserPerfData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static BrowserPerfData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static BrowserPerfData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static BrowserPerfData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static BrowserPerfData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static BrowserPerfData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(BrowserPerfData prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code skywalking.v3.BrowserPerfData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.BrowserPerfData)
      BrowserPerfDataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return BrowserPerf.internal_static_skywalking_v3_BrowserPerfData_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return BrowserPerf.internal_static_skywalking_v3_BrowserPerfData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              BrowserPerfData.class, Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.language.agent.v3.BrowserPerfData.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      service_ = "";

      serviceVersion_ = "";

      time_ = 0L;

      pagePath_ = "";

      redirectTime_ = 0;

      dnsTime_ = 0;

      ttfbTime_ = 0;

      tcpTime_ = 0;

      transTime_ = 0;

      domAnalysisTime_ = 0;

      fptTime_ = 0;

      domReadyTime_ = 0;

      loadPageTime_ = 0;

      resTime_ = 0;

      sslTime_ = 0;

      ttlTime_ = 0;

      firstPackTime_ = 0;

      fmpTime_ = 0;

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return BrowserPerf.internal_static_skywalking_v3_BrowserPerfData_descriptor;
    }

    @Override
    public BrowserPerfData getDefaultInstanceForType() {
      return BrowserPerfData.getDefaultInstance();
    }

    @Override
    public BrowserPerfData build() {
      BrowserPerfData result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public BrowserPerfData buildPartial() {
      BrowserPerfData result = new BrowserPerfData(this);
      result.service_ = service_;
      result.serviceVersion_ = serviceVersion_;
      result.time_ = time_;
      result.pagePath_ = pagePath_;
      result.redirectTime_ = redirectTime_;
      result.dnsTime_ = dnsTime_;
      result.ttfbTime_ = ttfbTime_;
      result.tcpTime_ = tcpTime_;
      result.transTime_ = transTime_;
      result.domAnalysisTime_ = domAnalysisTime_;
      result.fptTime_ = fptTime_;
      result.domReadyTime_ = domReadyTime_;
      result.loadPageTime_ = loadPageTime_;
      result.resTime_ = resTime_;
      result.sslTime_ = sslTime_;
      result.ttlTime_ = ttlTime_;
      result.firstPackTime_ = firstPackTime_;
      result.fmpTime_ = fmpTime_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof BrowserPerfData) {
        return mergeFrom((BrowserPerfData)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(BrowserPerfData other) {
      if (other == BrowserPerfData.getDefaultInstance()) return this;
      if (!other.getService().isEmpty()) {
        service_ = other.service_;
        onChanged();
      }
      if (!other.getServiceVersion().isEmpty()) {
        serviceVersion_ = other.serviceVersion_;
        onChanged();
      }
      if (other.getTime() != 0L) {
        setTime(other.getTime());
      }
      if (!other.getPagePath().isEmpty()) {
        pagePath_ = other.pagePath_;
        onChanged();
      }
      if (other.getRedirectTime() != 0) {
        setRedirectTime(other.getRedirectTime());
      }
      if (other.getDnsTime() != 0) {
        setDnsTime(other.getDnsTime());
      }
      if (other.getTtfbTime() != 0) {
        setTtfbTime(other.getTtfbTime());
      }
      if (other.getTcpTime() != 0) {
        setTcpTime(other.getTcpTime());
      }
      if (other.getTransTime() != 0) {
        setTransTime(other.getTransTime());
      }
      if (other.getDomAnalysisTime() != 0) {
        setDomAnalysisTime(other.getDomAnalysisTime());
      }
      if (other.getFptTime() != 0) {
        setFptTime(other.getFptTime());
      }
      if (other.getDomReadyTime() != 0) {
        setDomReadyTime(other.getDomReadyTime());
      }
      if (other.getLoadPageTime() != 0) {
        setLoadPageTime(other.getLoadPageTime());
      }
      if (other.getResTime() != 0) {
        setResTime(other.getResTime());
      }
      if (other.getSslTime() != 0) {
        setSslTime(other.getSslTime());
      }
      if (other.getTtlTime() != 0) {
        setTtlTime(other.getTtlTime());
      }
      if (other.getFirstPackTime() != 0) {
        setFirstPackTime(other.getFirstPackTime());
      }
      if (other.getFmpTime() != 0) {
        setFmpTime(other.getFmpTime());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      BrowserPerfData parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (BrowserPerfData) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private Object service_ = "";
    /**
     * <code>string service = 1;</code>
     * @return The service.
     */
    public String getService() {
      Object ref = service_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        service_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string service = 1;</code>
     * @return The bytes for service.
     */
    public com.google.protobuf.ByteString
        getServiceBytes() {
      Object ref = service_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        service_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string service = 1;</code>
     * @param value The service to set.
     * @return This builder for chaining.
     */
    public Builder setService(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      service_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string service = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearService() {

      service_ = getDefaultInstance().getService();
      onChanged();
      return this;
    }
    /**
     * <code>string service = 1;</code>
     * @param value The bytes for service to set.
     * @return This builder for chaining.
     */
    public Builder setServiceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      service_ = value;
      onChanged();
      return this;
    }

    private Object serviceVersion_ = "";
    /**
     * <pre>
     * Service version in browser is the Instance concept in the backend.
     * </pre>
     *
     * <code>string serviceVersion = 2;</code>
     * @return The serviceVersion.
     */
    public String getServiceVersion() {
      Object ref = serviceVersion_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        serviceVersion_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * Service version in browser is the Instance concept in the backend.
     * </pre>
     *
     * <code>string serviceVersion = 2;</code>
     * @return The bytes for serviceVersion.
     */
    public com.google.protobuf.ByteString
        getServiceVersionBytes() {
      Object ref = serviceVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        serviceVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Service version in browser is the Instance concept in the backend.
     * </pre>
     *
     * <code>string serviceVersion = 2;</code>
     * @param value The serviceVersion to set.
     * @return This builder for chaining.
     */
    public Builder setServiceVersion(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      serviceVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Service version in browser is the Instance concept in the backend.
     * </pre>
     *
     * <code>string serviceVersion = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearServiceVersion() {

      serviceVersion_ = getDefaultInstance().getServiceVersion();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Service version in browser is the Instance concept in the backend.
     * </pre>
     *
     * <code>string serviceVersion = 2;</code>
     * @param value The bytes for serviceVersion to set.
     * @return This builder for chaining.
     */
    public Builder setServiceVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      serviceVersion_ = value;
      onChanged();
      return this;
    }

    private long time_ ;
    /**
     * <pre>
     * Perf data time, set by the backend side.
     * </pre>
     *
     * <code>int64 time = 3;</code>
     * @return The time.
     */
    @Override
    public long getTime() {
      return time_;
    }
    /**
     * <pre>
     * Perf data time, set by the backend side.
     * </pre>
     *
     * <code>int64 time = 3;</code>
     * @param value The time to set.
     * @return This builder for chaining.
     */
    public Builder setTime(long value) {

      time_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Perf data time, set by the backend side.
     * </pre>
     *
     * <code>int64 time = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearTime() {

      time_ = 0L;
      onChanged();
      return this;
    }

    private Object pagePath_ = "";
    /**
     * <pre>
     * Page path in browser is the endpoint concept in the backend
     * Page path in the browser, mostly it is URI, without parameter
     * </pre>
     *
     * <code>string pagePath = 4;</code>
     * @return The pagePath.
     */
    public String getPagePath() {
      Object ref = pagePath_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        pagePath_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * Page path in browser is the endpoint concept in the backend
     * Page path in the browser, mostly it is URI, without parameter
     * </pre>
     *
     * <code>string pagePath = 4;</code>
     * @return The bytes for pagePath.
     */
    public com.google.protobuf.ByteString
        getPagePathBytes() {
      Object ref = pagePath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        pagePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Page path in browser is the endpoint concept in the backend
     * Page path in the browser, mostly it is URI, without parameter
     * </pre>
     *
     * <code>string pagePath = 4;</code>
     * @param value The pagePath to set.
     * @return This builder for chaining.
     */
    public Builder setPagePath(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      pagePath_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Page path in browser is the endpoint concept in the backend
     * Page path in the browser, mostly it is URI, without parameter
     * </pre>
     *
     * <code>string pagePath = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearPagePath() {

      pagePath_ = getDefaultInstance().getPagePath();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Page path in browser is the endpoint concept in the backend
     * Page path in the browser, mostly it is URI, without parameter
     * </pre>
     *
     * <code>string pagePath = 4;</code>
     * @param value The bytes for pagePath to set.
     * @return This builder for chaining.
     */
    public Builder setPagePathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      pagePath_ = value;
      onChanged();
      return this;
    }

    private int redirectTime_ ;
    /**
     * <pre>
     * Unit of all time related field should be `ms`.
     * </pre>
     *
     * <code>int32 redirectTime = 5;</code>
     * @return The redirectTime.
     */
    @Override
    public int getRedirectTime() {
      return redirectTime_;
    }
    /**
     * <pre>
     * Unit of all time related field should be `ms`.
     * </pre>
     *
     * <code>int32 redirectTime = 5;</code>
     * @param value The redirectTime to set.
     * @return This builder for chaining.
     */
    public Builder setRedirectTime(int value) {

      redirectTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Unit of all time related field should be `ms`.
     * </pre>
     *
     * <code>int32 redirectTime = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearRedirectTime() {

      redirectTime_ = 0;
      onChanged();
      return this;
    }

    private int dnsTime_ ;
    /**
     * <pre>
     * DNS query time
     * </pre>
     *
     * <code>int32 dnsTime = 6;</code>
     * @return The dnsTime.
     */
    @Override
    public int getDnsTime() {
      return dnsTime_;
    }
    /**
     * <pre>
     * DNS query time
     * </pre>
     *
     * <code>int32 dnsTime = 6;</code>
     * @param value The dnsTime to set.
     * @return This builder for chaining.
     */
    public Builder setDnsTime(int value) {

      dnsTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * DNS query time
     * </pre>
     *
     * <code>int32 dnsTime = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearDnsTime() {

      dnsTime_ = 0;
      onChanged();
      return this;
    }

    private int ttfbTime_ ;
    /**
     * <pre>
     * Time to first Byte
     * </pre>
     *
     * <code>int32 ttfbTime = 7;</code>
     * @return The ttfbTime.
     */
    @Override
    public int getTtfbTime() {
      return ttfbTime_;
    }
    /**
     * <pre>
     * Time to first Byte
     * </pre>
     *
     * <code>int32 ttfbTime = 7;</code>
     * @param value The ttfbTime to set.
     * @return This builder for chaining.
     */
    public Builder setTtfbTime(int value) {

      ttfbTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Time to first Byte
     * </pre>
     *
     * <code>int32 ttfbTime = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearTtfbTime() {

      ttfbTime_ = 0;
      onChanged();
      return this;
    }

    private int tcpTime_ ;
    /**
     * <pre>
     *  TCP connection time
     * </pre>
     *
     * <code>int32 tcpTime = 8;</code>
     * @return The tcpTime.
     */
    @Override
    public int getTcpTime() {
      return tcpTime_;
    }
    /**
     * <pre>
     *  TCP connection time
     * </pre>
     *
     * <code>int32 tcpTime = 8;</code>
     * @param value The tcpTime to set.
     * @return This builder for chaining.
     */
    public Builder setTcpTime(int value) {

      tcpTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *  TCP connection time
     * </pre>
     *
     * <code>int32 tcpTime = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearTcpTime() {

      tcpTime_ = 0;
      onChanged();
      return this;
    }

    private int transTime_ ;
    /**
     * <pre>
     * Content transfer time
     * </pre>
     *
     * <code>int32 transTime = 9;</code>
     * @return The transTime.
     */
    @Override
    public int getTransTime() {
      return transTime_;
    }
    /**
     * <pre>
     * Content transfer time
     * </pre>
     *
     * <code>int32 transTime = 9;</code>
     * @param value The transTime to set.
     * @return This builder for chaining.
     */
    public Builder setTransTime(int value) {

      transTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Content transfer time
     * </pre>
     *
     * <code>int32 transTime = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearTransTime() {

      transTime_ = 0;
      onChanged();
      return this;
    }

    private int domAnalysisTime_ ;
    /**
     * <pre>
     * Dom parsing time
     * </pre>
     *
     * <code>int32 domAnalysisTime = 10;</code>
     * @return The domAnalysisTime.
     */
    @Override
    public int getDomAnalysisTime() {
      return domAnalysisTime_;
    }
    /**
     * <pre>
     * Dom parsing time
     * </pre>
     *
     * <code>int32 domAnalysisTime = 10;</code>
     * @param value The domAnalysisTime to set.
     * @return This builder for chaining.
     */
    public Builder setDomAnalysisTime(int value) {

      domAnalysisTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Dom parsing time
     * </pre>
     *
     * <code>int32 domAnalysisTime = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearDomAnalysisTime() {

      domAnalysisTime_ = 0;
      onChanged();
      return this;
    }

    private int fptTime_ ;
    /**
     * <pre>
     * First paint time or blank screen time
     * </pre>
     *
     * <code>int32 fptTime = 11;</code>
     * @return The fptTime.
     */
    @Override
    public int getFptTime() {
      return fptTime_;
    }
    /**
     * <pre>
     * First paint time or blank screen time
     * </pre>
     *
     * <code>int32 fptTime = 11;</code>
     * @param value The fptTime to set.
     * @return This builder for chaining.
     */
    public Builder setFptTime(int value) {

      fptTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * First paint time or blank screen time
     * </pre>
     *
     * <code>int32 fptTime = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearFptTime() {

      fptTime_ = 0;
      onChanged();
      return this;
    }

    private int domReadyTime_ ;
    /**
     * <pre>
     * Dom ready time
     * </pre>
     *
     * <code>int32 domReadyTime = 12;</code>
     * @return The domReadyTime.
     */
    @Override
    public int getDomReadyTime() {
      return domReadyTime_;
    }
    /**
     * <pre>
     * Dom ready time
     * </pre>
     *
     * <code>int32 domReadyTime = 12;</code>
     * @param value The domReadyTime to set.
     * @return This builder for chaining.
     */
    public Builder setDomReadyTime(int value) {

      domReadyTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Dom ready time
     * </pre>
     *
     * <code>int32 domReadyTime = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearDomReadyTime() {

      domReadyTime_ = 0;
      onChanged();
      return this;
    }

    private int loadPageTime_ ;
    /**
     * <pre>
     * Page full load time
     * </pre>
     *
     * <code>int32 loadPageTime = 13;</code>
     * @return The loadPageTime.
     */
    @Override
    public int getLoadPageTime() {
      return loadPageTime_;
    }
    /**
     * <pre>
     * Page full load time
     * </pre>
     *
     * <code>int32 loadPageTime = 13;</code>
     * @param value The loadPageTime to set.
     * @return This builder for chaining.
     */
    public Builder setLoadPageTime(int value) {

      loadPageTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Page full load time
     * </pre>
     *
     * <code>int32 loadPageTime = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearLoadPageTime() {

      loadPageTime_ = 0;
      onChanged();
      return this;
    }

    private int resTime_ ;
    /**
     * <pre>
     * Synchronous load resources in the page
     * </pre>
     *
     * <code>int32 resTime = 14;</code>
     * @return The resTime.
     */
    @Override
    public int getResTime() {
      return resTime_;
    }
    /**
     * <pre>
     * Synchronous load resources in the page
     * </pre>
     *
     * <code>int32 resTime = 14;</code>
     * @param value The resTime to set.
     * @return This builder for chaining.
     */
    public Builder setResTime(int value) {

      resTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Synchronous load resources in the page
     * </pre>
     *
     * <code>int32 resTime = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearResTime() {

      resTime_ = 0;
      onChanged();
      return this;
    }

    private int sslTime_ ;
    /**
     * <pre>
     * Only valid for HTTPS
     * </pre>
     *
     * <code>int32 sslTime = 15;</code>
     * @return The sslTime.
     */
    @Override
    public int getSslTime() {
      return sslTime_;
    }
    /**
     * <pre>
     * Only valid for HTTPS
     * </pre>
     *
     * <code>int32 sslTime = 15;</code>
     * @param value The sslTime to set.
     * @return This builder for chaining.
     */
    public Builder setSslTime(int value) {

      sslTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Only valid for HTTPS
     * </pre>
     *
     * <code>int32 sslTime = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearSslTime() {

      sslTime_ = 0;
      onChanged();
      return this;
    }

    private int ttlTime_ ;
    /**
     * <pre>
     * Time to interact
     * </pre>
     *
     * <code>int32 ttlTime = 16;</code>
     * @return The ttlTime.
     */
    @Override
    public int getTtlTime() {
      return ttlTime_;
    }
    /**
     * <pre>
     * Time to interact
     * </pre>
     *
     * <code>int32 ttlTime = 16;</code>
     * @param value The ttlTime to set.
     * @return This builder for chaining.
     */
    public Builder setTtlTime(int value) {

      ttlTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Time to interact
     * </pre>
     *
     * <code>int32 ttlTime = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearTtlTime() {

      ttlTime_ = 0;
      onChanged();
      return this;
    }

    private int firstPackTime_ ;
    /**
     * <pre>
     * First pack time
     * </pre>
     *
     * <code>int32 firstPackTime = 17;</code>
     * @return The firstPackTime.
     */
    @Override
    public int getFirstPackTime() {
      return firstPackTime_;
    }
    /**
     * <pre>
     * First pack time
     * </pre>
     *
     * <code>int32 firstPackTime = 17;</code>
     * @param value The firstPackTime to set.
     * @return This builder for chaining.
     */
    public Builder setFirstPackTime(int value) {

      firstPackTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * First pack time
     * </pre>
     *
     * <code>int32 firstPackTime = 17;</code>
     * @return This builder for chaining.
     */
    public Builder clearFirstPackTime() {

      firstPackTime_ = 0;
      onChanged();
      return this;
    }

    private int fmpTime_ ;
    /**
     * <pre>
     * First Meaningful Paint
     * </pre>
     *
     * <code>int32 fmpTime = 18;</code>
     * @return The fmpTime.
     */
    @Override
    public int getFmpTime() {
      return fmpTime_;
    }
    /**
     * <pre>
     * First Meaningful Paint
     * </pre>
     *
     * <code>int32 fmpTime = 18;</code>
     * @param value The fmpTime to set.
     * @return This builder for chaining.
     */
    public Builder setFmpTime(int value) {

      fmpTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * First Meaningful Paint
     * </pre>
     *
     * <code>int32 fmpTime = 18;</code>
     * @return This builder for chaining.
     */
    public Builder clearFmpTime() {

      fmpTime_ = 0;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.BrowserPerfData)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.BrowserPerfData)
  private static final BrowserPerfData DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new BrowserPerfData();
  }

  public static BrowserPerfData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BrowserPerfData>
      PARSER = new com.google.protobuf.AbstractParser<BrowserPerfData>() {
    @Override
    public BrowserPerfData parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new BrowserPerfData(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<BrowserPerfData> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<BrowserPerfData> getParserForType() {
    return PARSER;
  }

  @Override
  public BrowserPerfData getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

