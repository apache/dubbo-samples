// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logging/Logging.proto

package org.apache.skywalking.apm.network.v3;

/**
 * <pre>
 * The content of the log data
 * </pre>
 *
 * Protobuf type {@code skywalking.v3.LogDataBody}
 */
public final class LogDataBody extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.LogDataBody)
    LogDataBodyOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LogDataBody.newBuilder() to construct.
  private LogDataBody(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LogDataBody() {
    type_ = "";
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new LogDataBody();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private LogDataBody(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            String s = input.readStringRequireUtf8();

            type_ = s;
            break;
          }
          case 18: {
            org.apache.skywalking.apm.network.logging.v3.TextLog.Builder subBuilder = null;
            if (contentCase_ == 2) {
              subBuilder = ((org.apache.skywalking.apm.network.logging.v3.TextLog) content_).toBuilder();
            }
            content_ =
                input.readMessage(org.apache.skywalking.apm.network.logging.v3.TextLog.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.apache.skywalking.apm.network.logging.v3.TextLog) content_);
              content_ = subBuilder.buildPartial();
            }
            contentCase_ = 2;
            break;
          }
          case 26: {
            org.apache.skywalking.apm.network.logging.v3.JSONLog.Builder subBuilder = null;
            if (contentCase_ == 3) {
              subBuilder = ((org.apache.skywalking.apm.network.logging.v3.JSONLog) content_).toBuilder();
            }
            content_ =
                input.readMessage(org.apache.skywalking.apm.network.logging.v3.JSONLog.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.apache.skywalking.apm.network.logging.v3.JSONLog) content_);
              content_ = subBuilder.buildPartial();
            }
            contentCase_ = 3;
            break;
          }
          case 34: {
            org.apache.skywalking.apm.network.logging.v3.YAMLLog.Builder subBuilder = null;
            if (contentCase_ == 4) {
              subBuilder = ((org.apache.skywalking.apm.network.logging.v3.YAMLLog) content_).toBuilder();
            }
            content_ =
                input.readMessage(org.apache.skywalking.apm.network.logging.v3.YAMLLog.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.apache.skywalking.apm.network.logging.v3.YAMLLog) content_);
              content_ = subBuilder.buildPartial();
            }
            contentCase_ = 4;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.skywalking.apm.network.logging.v3.Logging.internal_static_skywalking_v3_LogDataBody_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.skywalking.apm.network.logging.v3.Logging.internal_static_skywalking_v3_LogDataBody_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.skywalking.apm.network.logging.v3.LogDataBody.class, org.apache.skywalking.apm.network.logging.v3.LogDataBody.Builder.class);
  }

  private int contentCase_ = 0;
  private Object content_;
  public enum ContentCase
      implements com.google.protobuf.Internal.EnumLite,
          InternalOneOfEnum {
    TEXT(2),
    JSON(3),
    YAML(4),
    CONTENT_NOT_SET(0);
    private final int value;
    private ContentCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static ContentCase valueOf(int value) {
      return forNumber(value);
    }

    public static ContentCase forNumber(int value) {
      switch (value) {
        case 2: return TEXT;
        case 3: return JSON;
        case 4: return YAML;
        case 0: return CONTENT_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ContentCase
  getContentCase() {
    return ContentCase.forNumber(
        contentCase_);
  }

  public static final int TYPE_FIELD_NUMBER = 1;
  private volatile Object type_;
  /**
   * <pre>
   * A type to match analyzer(s) at the OAP server.
   * The data could be analyzed at the client side, but could be partial
   * </pre>
   *
   * <code>string type = 1;</code>
   * @return The type.
   */
  @Override
  public String getType() {
    Object ref = type_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      type_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A type to match analyzer(s) at the OAP server.
   * The data could be analyzed at the client side, but could be partial
   * </pre>
   *
   * <code>string type = 1;</code>
   * @return The bytes for type.
   */
  @Override
  public com.google.protobuf.ByteString
      getTypeBytes() {
    Object ref = type_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      type_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TEXT_FIELD_NUMBER = 2;
  /**
   * <code>.skywalking.v3.TextLog text = 2;</code>
   * @return Whether the text field is set.
   */
  @Override
  public boolean hasText() {
    return contentCase_ == 2;
  }
  /**
   * <code>.skywalking.v3.TextLog text = 2;</code>
   * @return The text.
   */
  @Override
  public org.apache.skywalking.apm.network.logging.v3.TextLog getText() {
    if (contentCase_ == 2) {
       return (org.apache.skywalking.apm.network.logging.v3.TextLog) content_;
    }
    return org.apache.skywalking.apm.network.logging.v3.TextLog.getDefaultInstance();
  }
  /**
   * <code>.skywalking.v3.TextLog text = 2;</code>
   */
  @Override
  public org.apache.skywalking.apm.network.logging.v3.TextLogOrBuilder getTextOrBuilder() {
    if (contentCase_ == 2) {
       return (org.apache.skywalking.apm.network.logging.v3.TextLog) content_;
    }
    return org.apache.skywalking.apm.network.logging.v3.TextLog.getDefaultInstance();
  }

  public static final int JSON_FIELD_NUMBER = 3;
  /**
   * <code>.skywalking.v3.JSONLog json = 3;</code>
   * @return Whether the json field is set.
   */
  @Override
  public boolean hasJson() {
    return contentCase_ == 3;
  }
  /**
   * <code>.skywalking.v3.JSONLog json = 3;</code>
   * @return The json.
   */
  @Override
  public org.apache.skywalking.apm.network.logging.v3.JSONLog getJson() {
    if (contentCase_ == 3) {
       return (org.apache.skywalking.apm.network.logging.v3.JSONLog) content_;
    }
    return org.apache.skywalking.apm.network.logging.v3.JSONLog.getDefaultInstance();
  }
  /**
   * <code>.skywalking.v3.JSONLog json = 3;</code>
   */
  @Override
  public org.apache.skywalking.apm.network.logging.v3.JSONLogOrBuilder getJsonOrBuilder() {
    if (contentCase_ == 3) {
       return (org.apache.skywalking.apm.network.logging.v3.JSONLog) content_;
    }
    return org.apache.skywalking.apm.network.logging.v3.JSONLog.getDefaultInstance();
  }

  public static final int YAML_FIELD_NUMBER = 4;
  /**
   * <code>.skywalking.v3.YAMLLog yaml = 4;</code>
   * @return Whether the yaml field is set.
   */
  @Override
  public boolean hasYaml() {
    return contentCase_ == 4;
  }
  /**
   * <code>.skywalking.v3.YAMLLog yaml = 4;</code>
   * @return The yaml.
   */
  @Override
  public org.apache.skywalking.apm.network.logging.v3.YAMLLog getYaml() {
    if (contentCase_ == 4) {
       return (org.apache.skywalking.apm.network.logging.v3.YAMLLog) content_;
    }
    return org.apache.skywalking.apm.network.logging.v3.YAMLLog.getDefaultInstance();
  }
  /**
   * <code>.skywalking.v3.YAMLLog yaml = 4;</code>
   */
  @Override
  public org.apache.skywalking.apm.network.logging.v3.YAMLLogOrBuilder getYamlOrBuilder() {
    if (contentCase_ == 4) {
       return (org.apache.skywalking.apm.network.logging.v3.YAMLLog) content_;
    }
    return org.apache.skywalking.apm.network.logging.v3.YAMLLog.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
    }
    if (contentCase_ == 2) {
      output.writeMessage(2, (org.apache.skywalking.apm.network.logging.v3.TextLog) content_);
    }
    if (contentCase_ == 3) {
      output.writeMessage(3, (org.apache.skywalking.apm.network.logging.v3.JSONLog) content_);
    }
    if (contentCase_ == 4) {
      output.writeMessage(4, (org.apache.skywalking.apm.network.logging.v3.YAMLLog) content_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
    }
    if (contentCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (org.apache.skywalking.apm.network.logging.v3.TextLog) content_);
    }
    if (contentCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (org.apache.skywalking.apm.network.logging.v3.JSONLog) content_);
    }
    if (contentCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (org.apache.skywalking.apm.network.logging.v3.YAMLLog) content_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.skywalking.apm.network.logging.v3.LogDataBody)) {
      return super.equals(obj);
    }
    org.apache.skywalking.apm.network.logging.v3.LogDataBody other = (org.apache.skywalking.apm.network.logging.v3.LogDataBody) obj;

    if (!getType()
        .equals(other.getType())) return false;
    if (!getContentCase().equals(other.getContentCase())) return false;
    switch (contentCase_) {
      case 2:
        if (!getText()
            .equals(other.getText())) return false;
        break;
      case 3:
        if (!getJson()
            .equals(other.getJson())) return false;
        break;
      case 4:
        if (!getYaml()
            .equals(other.getYaml())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getType().hashCode();
    switch (contentCase_) {
      case 2:
        hash = (37 * hash) + TEXT_FIELD_NUMBER;
        hash = (53 * hash) + getText().hashCode();
        break;
      case 3:
        hash = (37 * hash) + JSON_FIELD_NUMBER;
        hash = (53 * hash) + getJson().hashCode();
        break;
      case 4:
        hash = (37 * hash) + YAML_FIELD_NUMBER;
        hash = (53 * hash) + getYaml().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.skywalking.apm.network.logging.v3.LogDataBody parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.logging.v3.LogDataBody parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.logging.v3.LogDataBody parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.logging.v3.LogDataBody parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.logging.v3.LogDataBody parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.logging.v3.LogDataBody parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.logging.v3.LogDataBody parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.logging.v3.LogDataBody parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.logging.v3.LogDataBody parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.logging.v3.LogDataBody parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.logging.v3.LogDataBody parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.logging.v3.LogDataBody parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.skywalking.apm.network.logging.v3.LogDataBody prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The content of the log data
   * </pre>
   *
   * Protobuf type {@code skywalking.v3.LogDataBody}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.LogDataBody)
      org.apache.skywalking.apm.network.logging.v3.LogDataBodyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.skywalking.apm.network.logging.v3.Logging.internal_static_skywalking_v3_LogDataBody_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.skywalking.apm.network.logging.v3.Logging.internal_static_skywalking_v3_LogDataBody_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.skywalking.apm.network.logging.v3.LogDataBody.class, org.apache.skywalking.apm.network.logging.v3.LogDataBody.Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.logging.v3.LogDataBody.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      type_ = "";

      contentCase_ = 0;
      content_ = null;
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.skywalking.apm.network.logging.v3.Logging.internal_static_skywalking_v3_LogDataBody_descriptor;
    }

    @Override
    public org.apache.skywalking.apm.network.logging.v3.LogDataBody getDefaultInstanceForType() {
      return org.apache.skywalking.apm.network.logging.v3.LogDataBody.getDefaultInstance();
    }

    @Override
    public org.apache.skywalking.apm.network.logging.v3.LogDataBody build() {
      org.apache.skywalking.apm.network.logging.v3.LogDataBody result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public org.apache.skywalking.apm.network.logging.v3.LogDataBody buildPartial() {
      org.apache.skywalking.apm.network.logging.v3.LogDataBody result = new org.apache.skywalking.apm.network.logging.v3.LogDataBody(this);
      result.type_ = type_;
      if (contentCase_ == 2) {
        if (textBuilder_ == null) {
          result.content_ = content_;
        } else {
          result.content_ = textBuilder_.build();
        }
      }
      if (contentCase_ == 3) {
        if (jsonBuilder_ == null) {
          result.content_ = content_;
        } else {
          result.content_ = jsonBuilder_.build();
        }
      }
      if (contentCase_ == 4) {
        if (yamlBuilder_ == null) {
          result.content_ = content_;
        } else {
          result.content_ = yamlBuilder_.build();
        }
      }
      result.contentCase_ = contentCase_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.skywalking.apm.network.logging.v3.LogDataBody) {
        return mergeFrom((org.apache.skywalking.apm.network.logging.v3.LogDataBody)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.skywalking.apm.network.logging.v3.LogDataBody other) {
      if (other == org.apache.skywalking.apm.network.logging.v3.LogDataBody.getDefaultInstance()) return this;
      if (!other.getType().isEmpty()) {
        type_ = other.type_;
        onChanged();
      }
      switch (other.getContentCase()) {
        case TEXT: {
          mergeText(other.getText());
          break;
        }
        case JSON: {
          mergeJson(other.getJson());
          break;
        }
        case YAML: {
          mergeYaml(other.getYaml());
          break;
        }
        case CONTENT_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.apache.skywalking.apm.network.logging.v3.LogDataBody parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.apache.skywalking.apm.network.logging.v3.LogDataBody) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int contentCase_ = 0;
    private Object content_;
    public ContentCase
        getContentCase() {
      return ContentCase.forNumber(
          contentCase_);
    }

    public Builder clearContent() {
      contentCase_ = 0;
      content_ = null;
      onChanged();
      return this;
    }


    private Object type_ = "";
    /**
     * <pre>
     * A type to match analyzer(s) at the OAP server.
     * The data could be analyzed at the client side, but could be partial
     * </pre>
     *
     * <code>string type = 1;</code>
     * @return The type.
     */
    public String getType() {
      Object ref = type_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        type_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * A type to match analyzer(s) at the OAP server.
     * The data could be analyzed at the client side, but could be partial
     * </pre>
     *
     * <code>string type = 1;</code>
     * @return The bytes for type.
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A type to match analyzer(s) at the OAP server.
     * The data could be analyzed at the client side, but could be partial
     * </pre>
     *
     * <code>string type = 1;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A type to match analyzer(s) at the OAP server.
     * The data could be analyzed at the client side, but could be partial
     * </pre>
     *
     * <code>string type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {

      type_ = getDefaultInstance().getType();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A type to match analyzer(s) at the OAP server.
     * The data could be analyzed at the client side, but could be partial
     * </pre>
     *
     * <code>string type = 1;</code>
     * @param value The bytes for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      type_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.logging.v3.TextLog, org.apache.skywalking.apm.network.logging.v3.TextLog.Builder, org.apache.skywalking.apm.network.logging.v3.TextLogOrBuilder> textBuilder_;
    /**
     * <code>.skywalking.v3.TextLog text = 2;</code>
     * @return Whether the text field is set.
     */
    @Override
    public boolean hasText() {
      return contentCase_ == 2;
    }
    /**
     * <code>.skywalking.v3.TextLog text = 2;</code>
     * @return The text.
     */
    @Override
    public org.apache.skywalking.apm.network.logging.v3.TextLog getText() {
      if (textBuilder_ == null) {
        if (contentCase_ == 2) {
          return (org.apache.skywalking.apm.network.logging.v3.TextLog) content_;
        }
        return org.apache.skywalking.apm.network.logging.v3.TextLog.getDefaultInstance();
      } else {
        if (contentCase_ == 2) {
          return textBuilder_.getMessage();
        }
        return org.apache.skywalking.apm.network.logging.v3.TextLog.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.TextLog text = 2;</code>
     */
    public Builder setText(org.apache.skywalking.apm.network.logging.v3.TextLog value) {
      if (textBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        content_ = value;
        onChanged();
      } else {
        textBuilder_.setMessage(value);
      }
      contentCase_ = 2;
      return this;
    }
    /**
     * <code>.skywalking.v3.TextLog text = 2;</code>
     */
    public Builder setText(
        org.apache.skywalking.apm.network.logging.v3.TextLog.Builder builderForValue) {
      if (textBuilder_ == null) {
        content_ = builderForValue.build();
        onChanged();
      } else {
        textBuilder_.setMessage(builderForValue.build());
      }
      contentCase_ = 2;
      return this;
    }
    /**
     * <code>.skywalking.v3.TextLog text = 2;</code>
     */
    public Builder mergeText(org.apache.skywalking.apm.network.logging.v3.TextLog value) {
      if (textBuilder_ == null) {
        if (contentCase_ == 2 &&
            content_ != org.apache.skywalking.apm.network.logging.v3.TextLog.getDefaultInstance()) {
          content_ = org.apache.skywalking.apm.network.logging.v3.TextLog.newBuilder((org.apache.skywalking.apm.network.logging.v3.TextLog) content_)
              .mergeFrom(value).buildPartial();
        } else {
          content_ = value;
        }
        onChanged();
      } else {
        if (contentCase_ == 2) {
          textBuilder_.mergeFrom(value);
        }
        textBuilder_.setMessage(value);
      }
      contentCase_ = 2;
      return this;
    }
    /**
     * <code>.skywalking.v3.TextLog text = 2;</code>
     */
    public Builder clearText() {
      if (textBuilder_ == null) {
        if (contentCase_ == 2) {
          contentCase_ = 0;
          content_ = null;
          onChanged();
        }
      } else {
        if (contentCase_ == 2) {
          contentCase_ = 0;
          content_ = null;
        }
        textBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.skywalking.v3.TextLog text = 2;</code>
     */
    public org.apache.skywalking.apm.network.logging.v3.TextLog.Builder getTextBuilder() {
      return getTextFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.TextLog text = 2;</code>
     */
    @Override
    public org.apache.skywalking.apm.network.logging.v3.TextLogOrBuilder getTextOrBuilder() {
      if ((contentCase_ == 2) && (textBuilder_ != null)) {
        return textBuilder_.getMessageOrBuilder();
      } else {
        if (contentCase_ == 2) {
          return (org.apache.skywalking.apm.network.logging.v3.TextLog) content_;
        }
        return org.apache.skywalking.apm.network.logging.v3.TextLog.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.TextLog text = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.logging.v3.TextLog, org.apache.skywalking.apm.network.logging.v3.TextLog.Builder, org.apache.skywalking.apm.network.logging.v3.TextLogOrBuilder>
        getTextFieldBuilder() {
      if (textBuilder_ == null) {
        if (!(contentCase_ == 2)) {
          content_ = org.apache.skywalking.apm.network.logging.v3.TextLog.getDefaultInstance();
        }
        textBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.skywalking.apm.network.logging.v3.TextLog, org.apache.skywalking.apm.network.logging.v3.TextLog.Builder, org.apache.skywalking.apm.network.logging.v3.TextLogOrBuilder>(
                (org.apache.skywalking.apm.network.logging.v3.TextLog) content_,
                getParentForChildren(),
                isClean());
        content_ = null;
      }
      contentCase_ = 2;
      onChanged();;
      return textBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.logging.v3.JSONLog, org.apache.skywalking.apm.network.logging.v3.JSONLog.Builder, org.apache.skywalking.apm.network.logging.v3.JSONLogOrBuilder> jsonBuilder_;
    /**
     * <code>.skywalking.v3.JSONLog json = 3;</code>
     * @return Whether the json field is set.
     */
    @Override
    public boolean hasJson() {
      return contentCase_ == 3;
    }
    /**
     * <code>.skywalking.v3.JSONLog json = 3;</code>
     * @return The json.
     */
    @Override
    public org.apache.skywalking.apm.network.logging.v3.JSONLog getJson() {
      if (jsonBuilder_ == null) {
        if (contentCase_ == 3) {
          return (org.apache.skywalking.apm.network.logging.v3.JSONLog) content_;
        }
        return org.apache.skywalking.apm.network.logging.v3.JSONLog.getDefaultInstance();
      } else {
        if (contentCase_ == 3) {
          return jsonBuilder_.getMessage();
        }
        return org.apache.skywalking.apm.network.logging.v3.JSONLog.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.JSONLog json = 3;</code>
     */
    public Builder setJson(org.apache.skywalking.apm.network.logging.v3.JSONLog value) {
      if (jsonBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        content_ = value;
        onChanged();
      } else {
        jsonBuilder_.setMessage(value);
      }
      contentCase_ = 3;
      return this;
    }
    /**
     * <code>.skywalking.v3.JSONLog json = 3;</code>
     */
    public Builder setJson(
        org.apache.skywalking.apm.network.logging.v3.JSONLog.Builder builderForValue) {
      if (jsonBuilder_ == null) {
        content_ = builderForValue.build();
        onChanged();
      } else {
        jsonBuilder_.setMessage(builderForValue.build());
      }
      contentCase_ = 3;
      return this;
    }
    /**
     * <code>.skywalking.v3.JSONLog json = 3;</code>
     */
    public Builder mergeJson(org.apache.skywalking.apm.network.logging.v3.JSONLog value) {
      if (jsonBuilder_ == null) {
        if (contentCase_ == 3 &&
            content_ != org.apache.skywalking.apm.network.logging.v3.JSONLog.getDefaultInstance()) {
          content_ = org.apache.skywalking.apm.network.logging.v3.JSONLog.newBuilder((org.apache.skywalking.apm.network.logging.v3.JSONLog) content_)
              .mergeFrom(value).buildPartial();
        } else {
          content_ = value;
        }
        onChanged();
      } else {
        if (contentCase_ == 3) {
          jsonBuilder_.mergeFrom(value);
        }
        jsonBuilder_.setMessage(value);
      }
      contentCase_ = 3;
      return this;
    }
    /**
     * <code>.skywalking.v3.JSONLog json = 3;</code>
     */
    public Builder clearJson() {
      if (jsonBuilder_ == null) {
        if (contentCase_ == 3) {
          contentCase_ = 0;
          content_ = null;
          onChanged();
        }
      } else {
        if (contentCase_ == 3) {
          contentCase_ = 0;
          content_ = null;
        }
        jsonBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.skywalking.v3.JSONLog json = 3;</code>
     */
    public org.apache.skywalking.apm.network.logging.v3.JSONLog.Builder getJsonBuilder() {
      return getJsonFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.JSONLog json = 3;</code>
     */
    @Override
    public org.apache.skywalking.apm.network.logging.v3.JSONLogOrBuilder getJsonOrBuilder() {
      if ((contentCase_ == 3) && (jsonBuilder_ != null)) {
        return jsonBuilder_.getMessageOrBuilder();
      } else {
        if (contentCase_ == 3) {
          return (org.apache.skywalking.apm.network.logging.v3.JSONLog) content_;
        }
        return org.apache.skywalking.apm.network.logging.v3.JSONLog.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.JSONLog json = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.logging.v3.JSONLog, org.apache.skywalking.apm.network.logging.v3.JSONLog.Builder, org.apache.skywalking.apm.network.logging.v3.JSONLogOrBuilder>
        getJsonFieldBuilder() {
      if (jsonBuilder_ == null) {
        if (!(contentCase_ == 3)) {
          content_ = org.apache.skywalking.apm.network.logging.v3.JSONLog.getDefaultInstance();
        }
        jsonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.skywalking.apm.network.logging.v3.JSONLog, org.apache.skywalking.apm.network.logging.v3.JSONLog.Builder, org.apache.skywalking.apm.network.logging.v3.JSONLogOrBuilder>(
                (org.apache.skywalking.apm.network.logging.v3.JSONLog) content_,
                getParentForChildren(),
                isClean());
        content_ = null;
      }
      contentCase_ = 3;
      onChanged();;
      return jsonBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.logging.v3.YAMLLog, org.apache.skywalking.apm.network.logging.v3.YAMLLog.Builder, org.apache.skywalking.apm.network.logging.v3.YAMLLogOrBuilder> yamlBuilder_;
    /**
     * <code>.skywalking.v3.YAMLLog yaml = 4;</code>
     * @return Whether the yaml field is set.
     */
    @Override
    public boolean hasYaml() {
      return contentCase_ == 4;
    }
    /**
     * <code>.skywalking.v3.YAMLLog yaml = 4;</code>
     * @return The yaml.
     */
    @Override
    public org.apache.skywalking.apm.network.logging.v3.YAMLLog getYaml() {
      if (yamlBuilder_ == null) {
        if (contentCase_ == 4) {
          return (org.apache.skywalking.apm.network.logging.v3.YAMLLog) content_;
        }
        return org.apache.skywalking.apm.network.logging.v3.YAMLLog.getDefaultInstance();
      } else {
        if (contentCase_ == 4) {
          return yamlBuilder_.getMessage();
        }
        return org.apache.skywalking.apm.network.logging.v3.YAMLLog.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.YAMLLog yaml = 4;</code>
     */
    public Builder setYaml(org.apache.skywalking.apm.network.logging.v3.YAMLLog value) {
      if (yamlBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        content_ = value;
        onChanged();
      } else {
        yamlBuilder_.setMessage(value);
      }
      contentCase_ = 4;
      return this;
    }
    /**
     * <code>.skywalking.v3.YAMLLog yaml = 4;</code>
     */
    public Builder setYaml(
        org.apache.skywalking.apm.network.logging.v3.YAMLLog.Builder builderForValue) {
      if (yamlBuilder_ == null) {
        content_ = builderForValue.build();
        onChanged();
      } else {
        yamlBuilder_.setMessage(builderForValue.build());
      }
      contentCase_ = 4;
      return this;
    }
    /**
     * <code>.skywalking.v3.YAMLLog yaml = 4;</code>
     */
    public Builder mergeYaml(org.apache.skywalking.apm.network.logging.v3.YAMLLog value) {
      if (yamlBuilder_ == null) {
        if (contentCase_ == 4 &&
            content_ != org.apache.skywalking.apm.network.logging.v3.YAMLLog.getDefaultInstance()) {
          content_ = org.apache.skywalking.apm.network.logging.v3.YAMLLog.newBuilder((org.apache.skywalking.apm.network.logging.v3.YAMLLog) content_)
              .mergeFrom(value).buildPartial();
        } else {
          content_ = value;
        }
        onChanged();
      } else {
        if (contentCase_ == 4) {
          yamlBuilder_.mergeFrom(value);
        }
        yamlBuilder_.setMessage(value);
      }
      contentCase_ = 4;
      return this;
    }
    /**
     * <code>.skywalking.v3.YAMLLog yaml = 4;</code>
     */
    public Builder clearYaml() {
      if (yamlBuilder_ == null) {
        if (contentCase_ == 4) {
          contentCase_ = 0;
          content_ = null;
          onChanged();
        }
      } else {
        if (contentCase_ == 4) {
          contentCase_ = 0;
          content_ = null;
        }
        yamlBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.skywalking.v3.YAMLLog yaml = 4;</code>
     */
    public org.apache.skywalking.apm.network.logging.v3.YAMLLog.Builder getYamlBuilder() {
      return getYamlFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.YAMLLog yaml = 4;</code>
     */
    @Override
    public org.apache.skywalking.apm.network.logging.v3.YAMLLogOrBuilder getYamlOrBuilder() {
      if ((contentCase_ == 4) && (yamlBuilder_ != null)) {
        return yamlBuilder_.getMessageOrBuilder();
      } else {
        if (contentCase_ == 4) {
          return (org.apache.skywalking.apm.network.logging.v3.YAMLLog) content_;
        }
        return org.apache.skywalking.apm.network.logging.v3.YAMLLog.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.YAMLLog yaml = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.logging.v3.YAMLLog, org.apache.skywalking.apm.network.logging.v3.YAMLLog.Builder, org.apache.skywalking.apm.network.logging.v3.YAMLLogOrBuilder>
        getYamlFieldBuilder() {
      if (yamlBuilder_ == null) {
        if (!(contentCase_ == 4)) {
          content_ = org.apache.skywalking.apm.network.logging.v3.YAMLLog.getDefaultInstance();
        }
        yamlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.skywalking.apm.network.logging.v3.YAMLLog, org.apache.skywalking.apm.network.logging.v3.YAMLLog.Builder, org.apache.skywalking.apm.network.logging.v3.YAMLLogOrBuilder>(
                (org.apache.skywalking.apm.network.logging.v3.YAMLLog) content_,
                getParentForChildren(),
                isClean());
        content_ = null;
      }
      contentCase_ = 4;
      onChanged();;
      return yamlBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.LogDataBody)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.LogDataBody)
  private static final org.apache.skywalking.apm.network.logging.v3.LogDataBody DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.skywalking.apm.network.logging.v3.LogDataBody();
  }

  public static org.apache.skywalking.apm.network.logging.v3.LogDataBody getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LogDataBody>
      PARSER = new com.google.protobuf.AbstractParser<LogDataBody>() {
    @Override
    public LogDataBody parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new LogDataBody(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<LogDataBody> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<LogDataBody> getParserForType() {
    return PARSER;
  }

  @Override
  public org.apache.skywalking.apm.network.logging.v3.LogDataBody getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

