<#--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
-->

apiVersion: v1
kind: Namespace
metadata:
  name: ${namespace_name}

---



<#list services as service>
apiVersion: v1
kind: Service
metadata:
  namespace: ${namespace_name}
  name: ${service.hostname}
spec:
  selector:
    app: ${service.name}
  ports:
  <#if service.expose??>
  <#list service.expose as expose>
    - protocol: TCP
          port: ${service.expose}
          targetPort: ${service.expose}
  </#list>
  </#if>


---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ${namespace_name}
  name: ${service.name}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${service.name}
  template:
    metadata:
      namespace: ${namespace_name}  # 添加命名空间声明
      labels:
        app: ${service.name}
    spec:
      containers:
        - name: ${service.name}
          <#if service.imageName?has_content>
          image: ${service.imageName}
          </#if>
          imagePullPolicy: IfNotPresent
          ports:
          <#list service.expose as port>
            - containerPort: ${port}
          </#list>
          <#if service.volumes??>
          volumeMounts:
          <#list service.volumesMounts as key,value>
            - name: ${key}-volume
              mountPath: ${value}
          </#list>
          </#if>
          <#if service.environment??>
          env:
          <#list service.environment as environment>
            - name: ${environment?split('=')[0]}
              value: ${environment?split('=')[1]}
          </#list>
          </#if>
          <#if service.command??>
          command:
            <#list service.command as cmd>
              - ${cmd}
            </#list>
          </#if>
          <#if service.args??>
          args:
            <#list service.args as arg>
              - ${arg}
            </#list>
          </#if>
          <#if service.healthcheck??>
          readinessProbe:
            exec:
              command:
              <#if service.healthcheckExec??>
              <#list service.healthcheckExec as cmd>
                - "${cmd}"
              </#list>
              </#if>
          <#list service.healthcheck as key,value>
            ${key}: ${value}
          </#list>
          livenessProbe:
            exec:
              command:
              <#if service.healthcheckExec??>
              <#list service.healthcheckExec as cmd>
                - "${cmd}"
              </#list>
              </#if>
            <#list service.healthcheck as key,value>
            ${key}: ${value}
            </#list>
          </#if>
      volumes:
      <#list service.volumes as key,value>
        - name: ${key}-volume
          hostPath:
            path: ${value}
      </#list>
</#list>
