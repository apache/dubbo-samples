<#--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
-->

compose_file="${docker_compose_file}"
project_name=$(echo "${scenario_name}_${scenario_version}" |sed -e "s/\.//g" |awk '{print tolower($0)}')
test_service_name="${test_service_name}_1"

<#noparse>

echo "[$scenario_name] Starting test containers .." | tee -a $scenario_log
container_name="${project_name}_${test_service_name}"

#kill and clean first
docker-compose -p ${project_name} -f ${compose_file} kill 2>&1 | tee -a $scenario_log > /dev/null
docker-compose -p ${project_name} -f ${compose_file} rm -f 2>&1 | tee -a $scenario_log > /dev/null

docker-compose -p ${project_name} -f ${compose_file} up -d 2>&1 | tee -a $scenario_log > /dev/null

container_id=`docker ps -qf "name=${container_name}"`
if [[ -z "${container_id}" ]]; then
    echo "[$scenario_name] docker startup failure!" | tee -a $scenario_log
    status=1
else
    # check and get exit code
    wait_container_exit ${container_name} $start $timeout
    result=$?
    if [ $result -eq 0 ]; then
        result=`docker inspect ${container_name} --format='{{.State.ExitCode}}'`
        if [ $result -eq 0 ]; then
            status=0
            echo "[$scenario_name] Run tests successfully" | tee -a $scenario_log
        else
            status=$result
            echo "[$scenario_name] Run tests failed" | tee -a $scenario_log
        fi
    else
        status=1
        echo "[$scenario_name] Run tests timeout" | tee -a $scenario_log
    fi

    docker logs ${container_name} &> ${SCENARIO_HOME}/logs/container.log

    echo "[$scenario_name] Test reports: ${SCENARIO_HOME}/test-reports" | tee -a $scenario_log
    echo "[$scenario_name] Test logs: ${SCENARIO_HOME}/logs" | tee -a $scenario_log

    echo "[$scenario_name] Stopping test containers .." | tee -a $scenario_log
    docker-compose -p ${project_name} -f ${compose_file} kill 2>&1 | tee -a $scenario_log > /dev/null
fi

# copy app.log here of all app services?

if [[ "${debug_mode}" != "1" && $status == 0 ]];then
    docker-compose -p ${project_name} -f ${compose_file} rm -f 2>&1 | tee -a $scenario_log > /dev/null

    ${removeImagesScript}
fi

</#noparse>

