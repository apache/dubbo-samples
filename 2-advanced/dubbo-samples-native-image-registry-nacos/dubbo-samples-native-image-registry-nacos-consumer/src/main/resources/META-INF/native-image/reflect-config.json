[
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"
},
{
  "name":"[Lio.micrometer.core.instrument.distribution.FixedBoundaryHistogram;"
},
{
  "name":"[Ljava.io.Serializable;"
},
{
  "name":"[Ljava.lang.CharSequence;"
},
{
  "name":"[Ljava.lang.Comparable;"
},
{
  "name":"[Ljava.lang.Object;"
},
{
  "name":"[Ljava.lang.String;"
},
{
  "name":"[Ljava.lang.constant.Constable;"
},
{
  "name":"[Ljava.lang.constant.ConstantDesc;"
},
{
  "name":"[Lorg.springframework.boot.context.config.ConfigDataLocation;"
},
{
  "name":"[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
},
{
  "name":"[Lorg.springframework.web.bind.annotation.RequestMethod;"
},
{
  "name":"[Z"
},
{
  "name":"android.app.Application"
},
{
  "name":"boolean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean"] }, {"name":"from","parameterTypes":["java.lang.Boolean"] }, {"name":"of","parameterTypes":["java.lang.Boolean"] }, {"name":"valueOf","parameterTypes":["java.lang.Boolean"] }]
},
{
  "name":"ch.qos.logback.classic.Logger"
},
{
  "name":"ch.qos.logback.classic.LoggerContext"
},
{
  "name":"ch.qos.logback.classic.pattern.DateConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.model.Model"
},
{
  "name":"cn.hutool.extra.spring.SpringUtil",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessBeanFactory","parameterTypes":["org.springframework.beans.factory.config.ConfigurableListableBeanFactory"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"com.alibaba.dubbo.common.compiler.Compiler"
},
{
  "name":"com.alibaba.dubbo.common.config.OrderedPropertiesProvider"
},
{
  "name":"com.alibaba.dubbo.common.config.configcenter.DynamicConfigurationFactory"
},
{
  "name":"com.alibaba.dubbo.common.context.ApplicationExt"
},
{
  "name":"com.alibaba.dubbo.common.context.ModuleExt"
},
{
  "name":"com.alibaba.dubbo.common.convert.Converter"
},
{
  "name":"com.alibaba.dubbo.common.deploy.ApplicationDeployListener"
},
{
  "name":"com.alibaba.dubbo.common.deploy.ModuleDeployListener"
},
{
  "name":"com.alibaba.dubbo.common.extension.Activate",
  "methods":[{"name":"after","parameterTypes":[] }, {"name":"before","parameterTypes":[] }, {"name":"group","parameterTypes":[] }, {"name":"onClass","parameterTypes":[] }, {"name":"order","parameterTypes":[] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"com.alibaba.dubbo.common.extension.ExtensionFactory"
},
{
  "name":"com.alibaba.dubbo.common.extension.ExtensionInjector"
},
{
  "name":"com.alibaba.dubbo.common.infra.InfraAdapter"
},
{
  "name":"com.alibaba.dubbo.common.lang.ShutdownHookCallback"
},
{
  "name":"com.alibaba.dubbo.common.logger.LoggerAdapter"
},
{
  "name":"com.alibaba.dubbo.common.serialize.MultipleSerialization"
},
{
  "name":"com.alibaba.dubbo.common.serialize.Serialization"
},
{
  "name":"com.alibaba.dubbo.common.ssl.CertProvider"
},
{
  "name":"com.alibaba.dubbo.common.status.reporter.FrameworkStatusReporter"
},
{
  "name":"com.alibaba.dubbo.common.store.DataStore"
},
{
  "name":"com.alibaba.dubbo.common.threadpool.ThreadPool"
},
{
  "name":"com.alibaba.dubbo.common.threadpool.manager.ExecutorRepository"
},
{
  "name":"com.alibaba.dubbo.common.url.component.param.DynamicParamSource"
},
{
  "name":"com.alibaba.dubbo.config.ConfigInitializer"
},
{
  "name":"com.alibaba.dubbo.config.ConfigPostProcessor"
},
{
  "name":"com.alibaba.dubbo.config.annotation.Reference"
},
{
  "name":"com.alibaba.dubbo.config.annotation.Service"
},
{
  "name":"com.alibaba.dubbo.config.spring.context.DubboSpringInitCustomizer"
},
{
  "name":"com.alibaba.dubbo.metadata.ServiceNameMapping"
},
{
  "name":"com.alibaba.dubbo.metadata.definition.builder.TypeBuilder"
},
{
  "name":"com.alibaba.dubbo.metadata.report.MetadataReportFactory"
},
{
  "name":"com.alibaba.dubbo.metrics.collector.MetricsCollector"
},
{
  "name":"com.alibaba.dubbo.metrics.report.MetricsReporterFactory"
},
{
  "name":"com.alibaba.dubbo.metrics.service.MetricsServiceExporter"
},
{
  "name":"com.alibaba.dubbo.monitor.MonitorFactory"
},
{
  "name":"com.alibaba.dubbo.registry.AddressListener"
},
{
  "name":"com.alibaba.dubbo.registry.ProviderFirstParams"
},
{
  "name":"com.alibaba.dubbo.registry.RegistryFactory"
},
{
  "name":"com.alibaba.dubbo.registry.RegistryServiceListener"
},
{
  "name":"com.alibaba.dubbo.registry.client.RegistryClusterIdentifier"
},
{
  "name":"com.alibaba.dubbo.registry.client.ServiceDiscoveryFactory"
},
{
  "name":"com.alibaba.dubbo.registry.client.metadata.MetadataServiceURLBuilder"
},
{
  "name":"com.alibaba.dubbo.registry.client.metadata.ServiceInstanceNotificationCustomizer"
},
{
  "name":"com.alibaba.dubbo.registry.client.migration.MigrationAddressComparator"
},
{
  "name":"com.alibaba.dubbo.registry.integration.RegistryProtocolListener"
},
{
  "name":"com.alibaba.dubbo.remoting.Codec"
},
{
  "name":"com.alibaba.dubbo.remoting.Codec2"
},
{
  "name":"com.alibaba.dubbo.remoting.api.WireProtocol"
},
{
  "name":"com.alibaba.dubbo.remoting.api.connection.ConnectionManager"
},
{
  "name":"com.alibaba.dubbo.remoting.api.pu.PortUnificationTransporter"
},
{
  "name":"com.alibaba.dubbo.remoting.http12.message.HttpMessageAdapterFactory"
},
{
  "name":"com.alibaba.dubbo.remoting.http12.message.HttpMessageDecoderFactory"
},
{
  "name":"com.alibaba.dubbo.remoting.http12.message.HttpMessageEncoderFactory"
},
{
  "name":"com.alibaba.dubbo.remoting.transport.netty4.ChannelAddressAccessor"
},
{
  "name":"com.alibaba.dubbo.rpc.Filter"
},
{
  "name":"com.alibaba.dubbo.rpc.InvokerListener"
},
{
  "name":"com.alibaba.dubbo.rpc.PathResolver"
},
{
  "name":"com.alibaba.dubbo.rpc.PenetrateAttachmentSelector"
},
{
  "name":"com.alibaba.dubbo.rpc.Protocol"
},
{
  "name":"com.alibaba.dubbo.rpc.ProxyFactory"
},
{
  "name":"com.alibaba.dubbo.rpc.cluster.Cluster"
},
{
  "name":"com.alibaba.dubbo.rpc.cluster.LoadBalance"
},
{
  "name":"com.alibaba.dubbo.rpc.cluster.ProviderURLMergeProcessor"
},
{
  "name":"com.alibaba.dubbo.rpc.cluster.RouterFactory"
},
{
  "name":"com.alibaba.dubbo.rpc.cluster.filter.ClusterFilter"
},
{
  "name":"com.alibaba.dubbo.rpc.cluster.filter.FilterChainBuilder"
},
{
  "name":"com.alibaba.dubbo.rpc.cluster.filter.InvocationInterceptorBuilder"
},
{
  "name":"com.alibaba.dubbo.rpc.cluster.governance.GovernanceRuleRepository"
},
{
  "name":"com.alibaba.dubbo.rpc.cluster.router.mesh.route.MeshEnvListenerFactory"
},
{
  "name":"com.alibaba.dubbo.rpc.cluster.router.mesh.util.TracingContextProvider"
},
{
  "name":"com.alibaba.dubbo.rpc.cluster.router.state.StateRouterFactory"
},
{
  "name":"com.alibaba.dubbo.rpc.model.ApplicationInitListener"
},
{
  "name":"com.alibaba.dubbo.rpc.model.BuiltinServiceDetector"
},
{
  "name":"com.alibaba.dubbo.rpc.model.PackableMethodFactory"
},
{
  "name":"com.alibaba.dubbo.rpc.model.ScopeModelInitializer"
},
{
  "name":"com.alibaba.dubbo.rpc.protocol.tri.compressor.DeCompressor"
},
{
  "name":"com.alibaba.dubbo.rpc.protocol.tri.rest.argument.ArgumentConverter"
},
{
  "name":"com.alibaba.dubbo.rpc.protocol.tri.rest.argument.ArgumentResolver"
},
{
  "name":"com.alibaba.dubbo.rpc.protocol.tri.rest.mapping.RequestMappingResolver"
},
{
  "name":"com.alibaba.dubbo.rpc.protocol.tri.route.RequestHandlerMapping"
},
{
  "name":"com.alibaba.dubbo.rpc.protocol.tri.stream.ClientStreamFactory"
},
{
  "name":"com.alibaba.dubbo.rpc.service.EchoService"
},
{
  "name":"com.alibaba.dubbo.rpc.service.GenericService"
},
{
  "name":"com.alibaba.fastjson.JSONArray"
},
{
  "name":"com.alibaba.fastjson.JSONObject"
},
{
  "name":"com.alibaba.fastjson2.JSONFactory$CacheItem",
  "fields":[{"name":"bytes"}, {"name":"chars"}]
},
{
  "name":"com.alibaba.fastjson2.JSONObject",
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.alibaba.fastjson2.reader.ORG_1_12_MetadataInfo",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class","java.util.function.Supplier","com.alibaba.fastjson2.reader.FieldReader[]"] }]
},
{
  "name":"com.alibaba.fastjson2.reader.ORG_2_16_ServiceInfo",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class","java.util.function.Supplier","com.alibaba.fastjson2.reader.FieldReader[]"] }]
},
{
  "name":"com.alibaba.fastjson2.reader.ORG_3_2_User",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class","java.util.function.Supplier","com.alibaba.fastjson2.reader.FieldReader[]"] }]
},
{
  "name":"com.alibaba.fastjson2.util.TypeUtils$Cache",
  "fields":[{"name":"chars"}]
},
{
  "name":"com.alibaba.nacos.api.PropertyKeyConst",
  "allPublicFields":true
},
{
  "name":"com.alibaba.nacos.api.config.remote.request.AbstractConfigRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getDataId","parameterTypes":[] }, {"name":"getGroup","parameterTypes":[] }, {"name":"getModule","parameterTypes":[] }, {"name":"getTenant","parameterTypes":[] }]
},
{
  "name":"com.alibaba.nacos.api.config.remote.request.ConfigBatchListenRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getConfigListenContexts","parameterTypes":[] }, {"name":"isListen","parameterTypes":[] }]
},
{
  "name":"com.alibaba.nacos.api.config.remote.request.ConfigBatchListenRequest$ConfigListenContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getDataId","parameterTypes":[] }, {"name":"getGroup","parameterTypes":[] }, {"name":"getMd5","parameterTypes":[] }, {"name":"getTenant","parameterTypes":[] }]
},
{
  "name":"com.alibaba.nacos.api.config.remote.request.ConfigQueryRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getTag","parameterTypes":[] }, {"name":"isNotify","parameterTypes":[] }]
},
{
  "name":"com.alibaba.nacos.api.config.remote.response.ConfigChangeBatchListenResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setChangedConfigs","parameterTypes":["java.util.List"] }]
},
{
  "name":"com.alibaba.nacos.api.config.remote.response.ConfigChangeBatchListenResponse$ConfigContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.alibaba.nacos.api.config.remote.response.ConfigQueryResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setBeta","parameterTypes":["boolean"] }, {"name":"setContent","parameterTypes":["java.lang.String"] }, {"name":"setContentType","parameterTypes":["java.lang.String"] }, {"name":"setEncryptedDataKey","parameterTypes":["java.lang.String"] }, {"name":"setLastModified","parameterTypes":["long"] }, {"name":"setMd5","parameterTypes":["java.lang.String"] }]
},
{
  "name":"com.alibaba.nacos.api.grpc.auto.Metadata",
  "methods":[{"name":"getClientIp","parameterTypes":[] }, {"name":"getClientIpBytes","parameterTypes":[] }, {"name":"getDefaultInstance","parameterTypes":[] }, {"name":"getType","parameterTypes":[] }, {"name":"getTypeBytes","parameterTypes":[] }, {"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"com.alibaba.nacos.api.grpc.auto.Metadata$Builder",
  "methods":[{"name":"clearClientIp","parameterTypes":[] }, {"name":"clearType","parameterTypes":[] }, {"name":"getClientIp","parameterTypes":[] }, {"name":"getType","parameterTypes":[] }, {"name":"setClientIp","parameterTypes":["java.lang.String"] }, {"name":"setClientIpBytes","parameterTypes":["com.alibaba.nacos.shaded.com.google.protobuf.ByteString"] }, {"name":"setType","parameterTypes":["java.lang.String"] }, {"name":"setTypeBytes","parameterTypes":["com.alibaba.nacos.shaded.com.google.protobuf.ByteString"] }]
},
{
  "name":"com.alibaba.nacos.api.grpc.auto.Payload",
  "methods":[{"name":"getBody","parameterTypes":[] }, {"name":"getMetadata","parameterTypes":[] }, {"name":"hasBody","parameterTypes":[] }, {"name":"hasMetadata","parameterTypes":[] }]
},
{
  "name":"com.alibaba.nacos.api.grpc.auto.Payload$Builder",
  "methods":[{"name":"clearBody","parameterTypes":[] }, {"name":"clearMetadata","parameterTypes":[] }, {"name":"getBody","parameterTypes":[] }, {"name":"getBodyBuilder","parameterTypes":[] }, {"name":"getMetadata","parameterTypes":[] }, {"name":"getMetadataBuilder","parameterTypes":[] }, {"name":"hasBody","parameterTypes":[] }, {"name":"hasMetadata","parameterTypes":[] }, {"name":"setBody","parameterTypes":["com.alibaba.nacos.shaded.com.google.protobuf.Any"] }, {"name":"setMetadata","parameterTypes":["com.alibaba.nacos.api.grpc.auto.Metadata"] }]
},
{
  "name":"com.alibaba.nacos.api.naming.NamingService",
  "methods":[{"name":"batchRegisterInstance","parameterTypes":["java.lang.String","java.lang.String","java.util.List"] }]
},
{
  "name":"com.alibaba.nacos.api.naming.pojo.Instance",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getClusterName","parameterTypes":[] }, {"name":"getInstanceHeartBeatInterval","parameterTypes":[] }, {"name":"getInstanceHeartBeatTimeOut","parameterTypes":[] }, {"name":"getInstanceId","parameterTypes":[] }, {"name":"getInstanceIdGenerator","parameterTypes":[] }, {"name":"getIp","parameterTypes":[] }, {"name":"getIpDeleteTimeout","parameterTypes":[] }, {"name":"getMetadata","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getServiceName","parameterTypes":[] }, {"name":"getWeight","parameterTypes":[] }, {"name":"isEnabled","parameterTypes":[] }, {"name":"isEphemeral","parameterTypes":[] }, {"name":"isHealthy","parameterTypes":[] }, {"name":"setClusterName","parameterTypes":["java.lang.String"] }, {"name":"setEnabled","parameterTypes":["boolean"] }, {"name":"setEphemeral","parameterTypes":["boolean"] }, {"name":"setHealthy","parameterTypes":["boolean"] }, {"name":"setInstanceId","parameterTypes":["java.lang.String"] }, {"name":"setIp","parameterTypes":["java.lang.String"] }, {"name":"setMetadata","parameterTypes":["java.util.Map"] }, {"name":"setPort","parameterTypes":["int"] }, {"name":"setServiceName","parameterTypes":["java.lang.String"] }, {"name":"setWeight","parameterTypes":["double"] }]
},
{
  "name":"com.alibaba.nacos.api.naming.pojo.ServiceInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getCacheMillis","parameterTypes":[] }, {"name":"getChecksum","parameterTypes":[] }, {"name":"getClusters","parameterTypes":[] }, {"name":"getGroupName","parameterTypes":[] }, {"name":"getHosts","parameterTypes":[] }, {"name":"getLastRefTime","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"isAllIPs","parameterTypes":[] }, {"name":"isReachProtectionThreshold","parameterTypes":[] }, {"name":"isValid","parameterTypes":[] }, {"name":"setAllIPs","parameterTypes":["boolean"] }, {"name":"setCacheMillis","parameterTypes":["long"] }, {"name":"setChecksum","parameterTypes":["java.lang.String"] }, {"name":"setClusters","parameterTypes":["java.lang.String"] }, {"name":"setGroupName","parameterTypes":["java.lang.String"] }, {"name":"setHosts","parameterTypes":["java.util.List"] }, {"name":"setLastRefTime","parameterTypes":["long"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setReachProtectionThreshold","parameterTypes":["boolean"] }]
},
{
  "name":"com.alibaba.nacos.api.naming.remote.request.AbstractNamingRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getGroupName","parameterTypes":[] }, {"name":"getModule","parameterTypes":[] }, {"name":"getNamespace","parameterTypes":[] }, {"name":"getServiceName","parameterTypes":[] }]
},
{
  "name":"com.alibaba.nacos.api.naming.remote.request.NotifySubscriberRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setServiceInfo","parameterTypes":["com.alibaba.nacos.api.naming.pojo.ServiceInfo"] }]
},
{
  "name":"com.alibaba.nacos.api.naming.remote.request.ServiceListRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getPageNo","parameterTypes":[] }, {"name":"getPageSize","parameterTypes":[] }, {"name":"getSelector","parameterTypes":[] }]
},
{
  "name":"com.alibaba.nacos.api.naming.remote.request.ServiceQueryRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getCluster","parameterTypes":[] }, {"name":"getUdpPort","parameterTypes":[] }, {"name":"isHealthyOnly","parameterTypes":[] }]
},
{
  "name":"com.alibaba.nacos.api.naming.remote.request.SubscribeServiceRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getClusters","parameterTypes":[] }, {"name":"isSubscribe","parameterTypes":[] }]
},
{
  "name":"com.alibaba.nacos.api.naming.remote.response.NotifySubscriberResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.alibaba.nacos.api.naming.remote.response.QueryServiceResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setServiceInfo","parameterTypes":["com.alibaba.nacos.api.naming.pojo.ServiceInfo"] }]
},
{
  "name":"com.alibaba.nacos.api.naming.remote.response.ServiceListResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCount","parameterTypes":["int"] }, {"name":"setServiceNames","parameterTypes":["java.util.List"] }]
},
{
  "name":"com.alibaba.nacos.api.naming.remote.response.SubscribeServiceResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setServiceInfo","parameterTypes":["com.alibaba.nacos.api.naming.pojo.ServiceInfo"] }]
},
{
  "name":"com.alibaba.nacos.api.remote.Payload",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.alibaba.nacos.api.remote.request.ConnectionSetupRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getAbilityTable","parameterTypes":[] }, {"name":"getClientVersion","parameterTypes":[] }, {"name":"getLabels","parameterTypes":[] }, {"name":"getTenant","parameterTypes":[] }]
},
{
  "name":"com.alibaba.nacos.api.remote.request.HealthCheckRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.alibaba.nacos.api.remote.request.InternalRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getModule","parameterTypes":[] }]
},
{
  "name":"com.alibaba.nacos.api.remote.request.Request",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getHeaders","parameterTypes":[] }, {"name":"getRequestId","parameterTypes":[] }, {"name":"setRequestId","parameterTypes":["java.lang.String"] }]
},
{
  "name":"com.alibaba.nacos.api.remote.request.ServerCheckRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.alibaba.nacos.api.remote.request.ServerRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.alibaba.nacos.api.remote.request.SetupAckRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setAbilityTable","parameterTypes":["java.util.Map"] }]
},
{
  "name":"com.alibaba.nacos.api.remote.response.HealthCheckResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.alibaba.nacos.api.remote.response.Response",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getErrorCode","parameterTypes":[] }, {"name":"getMessage","parameterTypes":[] }, {"name":"getRequestId","parameterTypes":[] }, {"name":"getResultCode","parameterTypes":[] }, {"name":"isSuccess","parameterTypes":[] }, {"name":"setErrorCode","parameterTypes":["int"] }, {"name":"setMessage","parameterTypes":["java.lang.String"] }, {"name":"setResultCode","parameterTypes":["int"] }]
},
{
  "name":"com.alibaba.nacos.api.remote.response.ServerCheckResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setConnectionId","parameterTypes":["java.lang.String"] }, {"name":"setSupportAbilityNegotiation","parameterTypes":["boolean"] }]
},
{
  "name":"com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.alibaba.nacos.client.config.NacosConfigService",
  "methods":[{"name":"<init>","parameterTypes":["java.util.Properties"] }]
},
{
  "name":"com.alibaba.nacos.client.naming.NacosNamingService",
  "methods":[{"name":"<init>","parameterTypes":["java.util.Properties"] }]
},
{
  "name":"com.alibaba.nacos.client.naming.backups.datasource.DiskFailoverDataSource",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.alibaba.nacos.common.notify.DefaultPublisher",
  "fields":[{"name":"lastEventSequence"}],
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.alibaba.nacos.common.remote.TlsConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getCertChainFile","parameterTypes":[] }, {"name":"getCertPrivateKey","parameterTypes":[] }, {"name":"getCertPrivateKeyPassword","parameterTypes":[] }, {"name":"getCiphers","parameterTypes":[] }, {"name":"getEnableTls","parameterTypes":[] }, {"name":"getMutualAuthEnable","parameterTypes":[] }, {"name":"getProtocols","parameterTypes":[] }, {"name":"getSslProvider","parameterTypes":[] }, {"name":"getTrustAll","parameterTypes":[] }, {"name":"getTrustCollectionCertFile","parameterTypes":[] }]
},
{
  "name":"com.alibaba.nacos.common.remote.client.RpcClientTlsConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture",
  "fields":[{"name":"listeners"}, {"name":"value"}, {"name":"waiters"}]
},
{
  "name":"com.alibaba.nacos.shaded.com.google.common.util.concurrent.AbstractFuture$Waiter",
  "fields":[{"name":"next"}, {"name":"thread"}]
},
{
  "name":"com.alibaba.nacos.shaded.com.google.protobuf.Any",
  "methods":[{"name":"getTypeUrl","parameterTypes":[] }, {"name":"getTypeUrlBytes","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }, {"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"com.alibaba.nacos.shaded.com.google.protobuf.Any$Builder",
  "methods":[{"name":"clearTypeUrl","parameterTypes":[] }, {"name":"clearValue","parameterTypes":[] }, {"name":"getTypeUrl","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }, {"name":"setTypeUrl","parameterTypes":["java.lang.String"] }, {"name":"setTypeUrlBytes","parameterTypes":["com.alibaba.nacos.shaded.com.google.protobuf.ByteString"] }, {"name":"setValue","parameterTypes":["com.alibaba.nacos.shaded.com.google.protobuf.ByteString"] }]
},
{
  "name":"com.alibaba.nacos.shaded.com.google.protobuf.ExtensionRegistry",
  "methods":[{"name":"getEmptyRegistry","parameterTypes":[] }]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.census.InternalCensusStatsAccessor"
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.census.InternalCensusTracingAccessor"
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.internal.DnsNameResolverProvider"
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.internal.JndiResourceResolverFactory"
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.internal.PickFirstLoadBalancerProvider"
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor",
  "fields":[{"name":"runState"}]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.NettyChannelProvider"
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.UdsNettyChannelProvider"
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.grpc.netty.AbstractNettyHandler",
  "methods":[{"name":"channelActive","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.grpc.netty.NettyClientHandler",
  "methods":[{"name":"channelInactive","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"close","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, {"name":"write","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object","com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.grpc.netty.ProtocolNegotiators$GrpcNegotiationHandler",
  "methods":[{"name":"userEventTriggered","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.grpc.netty.ProtocolNegotiators$ProtocolNegotiationHandler",
  "methods":[{"name":"userEventTriggered","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.grpc.netty.ProtocolNegotiators$WaitUntilActiveHandler",
  "methods":[{"name":"channelActive","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.grpc.netty.WriteBufferingAndExceptionHandler",
  "methods":[{"name":"channelInactive","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"close","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, {"name":"exceptionCaught","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"flush","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"write","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object","com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.buffer.AbstractByteBufAllocator",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.buffer.AbstractReferenceCountedByteBuf",
  "fields":[{"name":"refCnt"}]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.AbstractChannelHandlerContext",
  "fields":[{"name":"handlerState"}]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelDuplexHandler",
  "methods":[{"name":"bind","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, {"name":"close","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, {"name":"flush","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"write","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object","com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelInboundHandlerAdapter",
  "methods":[{"name":"channelActive","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"userEventTriggered","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelOutboundBuffer",
  "fields":[{"name":"totalPendingSize"}, {"name":"unwritable"}]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.DefaultChannelConfig",
  "fields":[{"name":"autoRead"}, {"name":"writeBufferWaterMark"}]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.DefaultChannelPipeline",
  "fields":[{"name":"estimatorHandle"}]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.DefaultChannelPipeline$HeadContext",
  "methods":[{"name":"bind","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, {"name":"channelActive","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"close","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, {"name":"exceptionCaught","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"flush","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"userEventTriggered","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"write","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object","com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.DefaultChannelPipeline$TailContext",
  "methods":[{"name":"channelActive","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"userEventTriggered","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.epoll.Epoll"
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.handler.codec.ByteToMessageDecoder",
  "methods":[{"name":"channelRead","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"userEventTriggered","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.handler.codec.http2.Http2ConnectionHandler",
  "methods":[{"name":"bind","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, {"name":"channelReadComplete","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"connect","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, {"name":"flush","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.DefaultAttributeMap",
  "fields":[{"name":"attributes"}]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.Recycler$DefaultHandle",
  "fields":[{"name":"state"}]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.ReferenceCountUtil",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.DefaultPromise",
  "fields":[{"name":"result"}]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor",
  "fields":[{"name":"state"}, {"name":"threadProperties"}]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.okhttp.OkHttpChannelProvider"
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.override.ContextStorageOverride"
},
{
  "name":"com.alibaba.nacos.shaded.io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider"
},
{
  "name":"com.alibaba.nacos.shaded.io.perfmark.impl.SecretPerfMarkImpl$PerfMarkImpl"
},
{
  "name":"com.alibaba.spring.context.config.ConfigurationBeanBinder",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.core.JsonGenerator"
},
{
  "name":"com.fasterxml.jackson.core.ObjectCodec",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getJsonFactory","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.core.TreeCodec",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.core.Versioned",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.Module",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getDependencies","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createArrayNode","parameterTypes":[] }, {"name":"createObjectNode","parameterTypes":[] }, {"name":"getFactory","parameterTypes":[] }, {"name":"missingNode","parameterTypes":[] }, {"name":"nullNode","parameterTypes":[] }, {"name":"readTree","parameterTypes":["com.fasterxml.jackson.core.JsonParser"] }, {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }, {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }, {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }, {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }, {"name":"treeAsTokens","parameterTypes":["com.fasterxml.jackson.core.TreeNode"] }, {"name":"treeToValue","parameterTypes":["com.fasterxml.jackson.core.TreeNode","java.lang.Class"] }, {"name":"version","parameterTypes":[] }, {"name":"writeTree","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator","com.fasterxml.jackson.core.TreeNode"] }, {"name":"writeValue","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator","java.lang.Object"] }]
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleModule",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addAbstractTypeMapping","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"addDeserializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonDeserializer"] }, {"name":"addKeyDeserializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.KeyDeserializer"] }, {"name":"addKeySerializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonSerializer"] }, {"name":"addSerializer","parameterTypes":["com.fasterxml.jackson.databind.JsonSerializer"] }, {"name":"addSerializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonSerializer"] }, {"name":"addValueInstantiator","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.deser.ValueInstantiator"] }, {"name":"getModuleName","parameterTypes":[] }, {"name":"getTypeId","parameterTypes":[] }, {"name":"registerSubtypes","parameterTypes":["java.util.Collection"] }, {"name":"registerSubtypes","parameterTypes":["com.fasterxml.jackson.databind.jsontype.NamedType[]"] }, {"name":"registerSubtypes","parameterTypes":["java.lang.Class[]"] }, {"name":"setAbstractTypes","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"] }, {"name":"setDeserializerModifier","parameterTypes":["com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"] }, {"name":"setDeserializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleDeserializers"] }, {"name":"setKeyDeserializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"] }, {"name":"setKeySerializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleSerializers"] }, {"name":"setMixInAnnotation","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"setSerializerModifier","parameterTypes":["com.fasterxml.jackson.databind.ser.BeanSerializerModifier"] }, {"name":"setSerializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleSerializers"] }, {"name":"setValueInstantiators","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleValueInstantiators"] }, {"name":"version","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.dataformat.cbor$CBORFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.cbor.CBORFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.smile$SmileFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.smile.SmileFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.xml$XmlMapper"
},
{
  "name":"com.fasterxml.jackson.dataformat.xml.XmlMapper"
},
{
  "name":"com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }]
},
{
  "name":"com.google.gson.Gson",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.gson.GsonBuilder",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.protobuf.GeneratedMessageV3"
},
{
  "name":"com.google.protobuf.Message"
},
{
  "name":"com.rometools.rome.feed$WireFeed"
},
{
  "name":"com.rometools.rome.feed.WireFeed"
},
{
  "name":"double",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.grpc.Channel"
},
{
  "name":"io.micrometer.context.ContextSnapshot"
},
{
  "name":"io.micrometer.core.instrument.MeterRegistry"
},
{
  "name":"io.micrometer.core.instrument.distribution.AbstractTimeWindowHistogram",
  "fields":[{"name":"rotating"}]
},
{
  "name":"io.micrometer.core.instrument.distribution.TimeWindowMax",
  "fields":[{"name":"rotating"}]
},
{
  "name":"io.micrometer.observation.NoopObservationRegistry"
},
{
  "name":"io.micrometer.observation.Observation"
},
{
  "name":"io.micrometer.observation.ObservationHandler"
},
{
  "name":"io.micrometer.observation.ObservationRegistry"
},
{
  "name":"io.micrometer.prometheus.PrometheusConfig"
},
{
  "name":"io.micrometer.tracing.Tracer"
},
{
  "name":"io.micrometer.tracing.propagation.Propagator"
},
{
  "name":"io.netty.bootstrap.AbstractBootstrap$2"
},
{
  "name":"io.netty.bootstrap.ServerBootstrap$1"
},
{
  "name":"io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.buffer.AbstractByteBufAllocator",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.netty.buffer.AbstractReferenceCountedByteBuf",
  "fields":[{"name":"refCnt"}]
},
{
  "name":"io.netty.channel.AbstractChannel"
},
{
  "name":"io.netty.channel.AbstractChannel$AbstractUnsafe"
},
{
  "name":"io.netty.channel.AbstractChannelHandlerContext",
  "fields":[{"name":"handlerState"}]
},
{
  "name":"io.netty.channel.ChannelDuplexHandler",
  "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.channel.ChannelHandlerAdapter",
  "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.channel.ChannelInboundHandlerAdapter",
  "methods":[{"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.channel.ChannelInitializer",
  "methods":[{"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.channel.ChannelOutboundBuffer",
  "fields":[{"name":"totalPendingSize"}, {"name":"unwritable"}]
},
{
  "name":"io.netty.channel.ChannelOutboundHandlerAdapter",
  "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]
},
{
  "name":"io.netty.channel.DefaultChannelConfig",
  "fields":[{"name":"autoRead"}, {"name":"writeBufferWaterMark"}]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline",
  "fields":[{"name":"estimatorHandle"}]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$HeadContext",
  "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$TailContext",
  "methods":[{"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.channel.SimpleChannelInboundHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.channel.nio.NioEventLoop"
},
{
  "name":"io.netty.channel.socket.nio.NioServerSocketChannel",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.netty.channel.socket.nio.NioSocketChannel",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.netty.handler.codec.ByteToMessageDecoder",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.handler.codec.http2.AbstractHttp2StreamChannel",
  "fields":[{"name":"totalPendingSize"}, {"name":"unwritable"}]
},
{
  "name":"io.netty.handler.codec.http2.Http2ConnectionHandler",
  "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]
},
{
  "name":"io.netty.handler.codec.http2.Http2FrameCodec",
  "methods":[{"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.handler.codec.http2.Http2MultiplexHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.handler.timeout.IdleStateHandler",
  "methods":[{"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.incubator.codec.quic.QuicChannel"
},
{
  "name":"io.netty.util.DefaultAttributeMap",
  "fields":[{"name":"attributes"}]
},
{
  "name":"io.netty.util.DefaultAttributeMap$DefaultAttribute",
  "fields":[{"name":"attributeMap"}]
},
{
  "name":"io.netty.util.Recycler$DefaultHandle",
  "fields":[{"name":"state"}]
},
{
  "name":"io.netty.util.ReferenceCountUtil",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.netty.util.concurrent.AbstractEventExecutor"
},
{
  "name":"io.netty.util.concurrent.DefaultPromise",
  "fields":[{"name":"result"}]
},
{
  "name":"io.netty.util.concurrent.FastThreadLocalRunnable"
},
{
  "name":"io.netty.util.concurrent.SingleThreadEventExecutor",
  "fields":[{"name":"state"}, {"name":"threadProperties"}]
},
{
  "name":"io.netty.util.concurrent.SingleThreadEventExecutor$4"
},
{
  "name":"io.netty.util.internal.ThreadExecutorMap$2"
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"io.prometheus.client.Striped64",
  "fields":[{"name":"base"}, {"name":"busy"}]
},
{
  "name":"io.prometheus.client.exporter.BasicAuthHttpConnectionFactory"
},
{
  "name":"io.prometheus.client.exporter.HttpConnectionFactory"
},
{
  "name":"io.prometheus.client.exporter.PushGateway"
},
{
  "name":"io.reactivex.rxjava3.core$Flowable"
},
{
  "name":"io.reactivex.rxjava3.core.Flowable"
},
{
  "name":"io.smallrye.mutiny$Multi"
},
{
  "name":"io.smallrye.mutiny.Multi"
},
{
  "name":"jakarta.ejb.EJB"
},
{
  "name":"jakarta.faces.context$FacesContext"
},
{
  "name":"jakarta.faces.context.FacesContext"
},
{
  "name":"jakarta.inject$Provider"
},
{
  "name":"jakarta.inject$Qualifier"
},
{
  "name":"jakarta.inject.Provider"
},
{
  "name":"jakarta.inject.Qualifier"
},
{
  "name":"jakarta.json.bind$Jsonb"
},
{
  "name":"jakarta.json.bind.Jsonb"
},
{
  "name":"jakarta.persistence.PersistenceContext"
},
{
  "name":"jakarta.servlet.GenericFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.servlet.MultipartConfigElement",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.servlet.Servlet"
},
{
  "name":"jakarta.servlet.ServletContext",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.servlet.http.PushBuilder"
},
{
  "name":"jakarta.servlet.jsp.jstl.core$Config"
},
{
  "name":"jakarta.servlet.jsp.jstl.core.Config"
},
{
  "name":"jakarta.validation$Validator"
},
{
  "name":"jakarta.validation.Validator"
},
{
  "name":"jakarta.xml.bind$Binder"
},
{
  "name":"jakarta.xml.bind.Binder"
},
{
  "name":"jakarta.xml.ws.WebServiceRef"
},
{
  "name":"java.beans.PropertyVetoException"
},
{
  "name":"java.beans.Transient"
},
{
  "name":"java.io.FilePermission"
},
{
  "name":"java.io.Serializable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.Boolean",
  "methods":[{"name":"toboolean","parameterTypes":[] }]
},
{
  "name":"java.lang.Class",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.ClassLoader",
  "methods":[{"name":"defineClass","parameterTypes":["java.lang.String","byte[]","int","int","java.security.ProtectionDomain"] }]
},
{
  "name":"java.lang.Module",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Object",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.ObjectBeanInfo"
},
{
  "name":"java.lang.ObjectCustomizer"
},
{
  "name":"java.lang.ProcessHandle",
  "methods":[{"name":"current","parameterTypes":[] }, {"name":"pid","parameterTypes":[] }]
},
{
  "name":"java.lang.Runtime",
  "methods":[{"name":"version","parameterTypes":[] }]
},
{
  "name":"java.lang.Runtime$Version",
  "methods":[{"name":"major","parameterTypes":[] }]
},
{
  "name":"java.lang.RuntimePermission"
},
{
  "name":"java.lang.String",
  "queryAllDeclaredMethods":true,
  "fields":[{"name":"COMPACT_STRINGS"}, {"name":"coder"}, {"name":"value"}],
  "methods":[{"name":"<init>","parameterTypes":["byte[]","byte"] }, {"name":"coder","parameterTypes":[] }, {"name":"isASCII","parameterTypes":["byte[]"] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"java.lang.StringBuilder"
},
{
  "name":"java.lang.StringCoding",
  "methods":[{"name":"hasNegatives","parameterTypes":["byte[]","int","int"] }]
},
{
  "name":"java.lang.Thread",
  "fields":[{"name":"threadLocalRandomProbe"}],
  "methods":[{"name":"ofVirtual","parameterTypes":[] }]
},
{
  "name":"java.lang.Thread$Builder",
  "methods":[{"name":"name","parameterTypes":["java.lang.String","long"] }, {"name":"start","parameterTypes":["java.lang.Runnable"] }]
},
{
  "name":"java.lang.WrongThreadException"
},
{
  "name":"java.lang.constant.Constable",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.invoke.CallSite"
},
{
  "name":"java.lang.invoke.MethodHandles$Lookup",
  "fields":[{"name":"IMPL_LOOKUP"}],
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class","java.lang.Class","int"] }]
},
{
  "name":"java.lang.invoke.TypeDescriptor$OfField",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "methods":[{"name":"getInputArguments","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.AnnotatedElement",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.GenericDeclaration",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.Method"
},
{
  "name":"java.lang.reflect.ParameterizedType",
  "methods":[{"name":"getActualTypeArguments","parameterTypes":[] }, {"name":"getRawType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Type",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.TypeVariable",
  "methods":[{"name":"getBounds","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.WildcardType",
  "methods":[{"name":"getLowerBounds","parameterTypes":[] }, {"name":"getUpperBounds","parameterTypes":[] }]
},
{
  "name":"java.math.BigDecimal",
  "allDeclaredFields":true
},
{
  "name":"java.math.BigInteger",
  "fields":[{"name":"mag"}]
},
{
  "name":"java.net.InetSocketAddress",
  "methods":[{"name":"getHostString","parameterTypes":[] }]
},
{
  "name":"java.net.NetPermission"
},
{
  "name":"java.net.SocketPermission"
},
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.net.UnixDomainSocketAddress",
  "methods":[{"name":"of","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.nio.Bits",
  "fields":[{"name":"UNALIGNED"}]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address"}]
},
{
  "name":"java.nio.ByteBuffer",
  "methods":[{"name":"alignedSlice","parameterTypes":["int"] }]
},
{
  "name":"java.nio.DirectByteBuffer",
  "methods":[{"name":"<init>","parameterTypes":["long","long"] }]
},
{
  "name":"java.nio.channels.ServerSocketChannel",
  "methods":[{"name":"open","parameterTypes":["java.net.ProtocolFamily"] }]
},
{
  "name":"java.nio.channels.SocketChannel",
  "methods":[{"name":"open","parameterTypes":["java.net.ProtocolFamily"] }]
},
{
  "name":"java.nio.channels.spi.SelectorProvider",
  "methods":[{"name":"openServerSocketChannel","parameterTypes":["java.net.ProtocolFamily"] }, {"name":"openSocketChannel","parameterTypes":["java.net.ProtocolFamily"] }]
},
{
  "name":"java.security.AllPermission"
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.security.SecurityPermission"
},
{
  "name":"java.sql.Clob"
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.sql.DriverManager"
},
{
  "name":"java.sql.Struct"
},
{
  "name":"java.sql.Timestamp"
},
{
  "name":"java.util.ArrayList"
},
{
  "name":"java.util.Collections$UnmodifiableCollection"
},
{
  "name":"java.util.Collections$UnmodifiableMap"
},
{
  "name":"java.util.Enumeration"
},
{
  "name":"java.util.EventListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.HashMap",
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.util.HashSet"
},
{
  "name":"java.util.List",
  "methods":[{"name":"copyOf","parameterTypes":["java.util.Collection"] }]
},
{
  "name":"java.util.Optional",
  "methods":[{"name":"isEmpty","parameterTypes":[] }]
},
{
  "name":"java.util.PropertyPermission"
},
{
  "name":"java.util.ServiceLoader",
  "methods":[{"name":"load","parameterTypes":["java.lang.Class","java.lang.ClassLoader"] }]
},
{
  "name":"java.util.Set"
},
{
  "name":"java.util.concurrent.Callable",
  "methods":[{"name":"call","parameterTypes":[] }]
},
{
  "name":"java.util.concurrent.ConcurrentHashMap",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.concurrent.ConcurrentHashMap$ValuesView"
},
{
  "name":"java.util.concurrent.ForkJoinTask",
  "fields":[{"name":"aux"}, {"name":"status"}]
},
{
  "name":"java.util.concurrent.atomic.AtomicBoolean",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.AtomicReference",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.LongAdder",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"add","parameterTypes":["long"] }, {"name":"sum","parameterTypes":[] }]
},
{
  "name":"java.util.concurrent.atomic.Striped64",
  "fields":[{"name":"base"}, {"name":"cellsBusy"}]
},
{
  "name":"java.util.function.Function"
},
{
  "name":"java.util.logging.LogManager"
},
{
  "name":"java.util.logging.SimpleFormatter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.zip.DeflaterInputStream"
},
{
  "name":"javax.money$MonetaryAmount"
},
{
  "name":"javax.money.MonetaryAmount"
},
{
  "name":"javax.naming.InitialContext"
},
{
  "name":"javax.servlet.Servlet"
},
{
  "name":"javax.smartcardio.CardPermission"
},
{
  "name":"javax.sql.DataSource"
},
{
  "name":"javax.sql.RowSet"
},
{
  "name":"javax.ws.rs.BeanParam"
},
{
  "name":"javax.ws.rs.CookieParam"
},
{
  "name":"javax.ws.rs.FormParam"
},
{
  "name":"javax.ws.rs.HeaderParam"
},
{
  "name":"javax.ws.rs.MatrixParam"
},
{
  "name":"javax.ws.rs.Path"
},
{
  "name":"javax.ws.rs.PathParam"
},
{
  "name":"javax.ws.rs.QueryParam"
},
{
  "name":"javax.xml.bind.Marshaller"
},
{
  "name":"jdk.internal.loader.ClassLoaders$AppClassLoader",
  "methods":[{"name":"clearCache","parameterTypes":[] }]
},
{
  "name":"jdk.internal.loader.ClassLoaders$PlatformClassLoader",
  "methods":[{"name":"clearCache","parameterTypes":[] }]
},
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]
},
{
  "name":"jdk.internal.reflect.DirectMethodHandleAccessor"
},
{
  "name":"kotlin$Metadata"
},
{
  "name":"kotlin.Metadata"
},
{
  "name":"kotlin.reflect.full$KClasses"
},
{
  "name":"kotlin.reflect.full.KClasses"
},
{
  "name":"kotlinx.coroutines.reactor$MonoKt"
},
{
  "name":"kotlinx.coroutines.reactor.MonoKt"
},
{
  "name":"kotlinx.serialization.cbor$Cbor"
},
{
  "name":"kotlinx.serialization.cbor.Cbor"
},
{
  "name":"kotlinx.serialization.json$Json"
},
{
  "name":"kotlinx.serialization.json.Json"
},
{
  "name":"kotlinx.serialization.protobuf$ProtoBuf"
},
{
  "name":"kotlinx.serialization.protobuf.ProtoBuf"
},
{
  "name":"libcore.io.Memory"
},
{
  "name":"org.apache.catalina.core.ApplicationContextFacade",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addFilter","parameterTypes":["java.lang.String","jakarta.servlet.Filter"] }, {"name":"addFilter","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"addFilter","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"addJspFile","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"addListener","parameterTypes":["java.lang.Class"] }, {"name":"addListener","parameterTypes":["java.lang.String"] }, {"name":"addListener","parameterTypes":["java.util.EventListener"] }, {"name":"addServlet","parameterTypes":["java.lang.String","jakarta.servlet.Servlet"] }, {"name":"addServlet","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"addServlet","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"createFilter","parameterTypes":["java.lang.Class"] }, {"name":"createListener","parameterTypes":["java.lang.Class"] }, {"name":"createServlet","parameterTypes":["java.lang.Class"] }, {"name":"declareRoles","parameterTypes":["java.lang.String[]"] }, {"name":"getAttribute","parameterTypes":["java.lang.String"] }, {"name":"getAttributeNames","parameterTypes":[] }, {"name":"getClassLoader","parameterTypes":[] }, {"name":"getContext","parameterTypes":["java.lang.String"] }, {"name":"getContextPath","parameterTypes":[] }, {"name":"getDefaultSessionTrackingModes","parameterTypes":[] }, {"name":"getEffectiveMajorVersion","parameterTypes":[] }, {"name":"getEffectiveMinorVersion","parameterTypes":[] }, {"name":"getEffectiveSessionTrackingModes","parameterTypes":[] }, {"name":"getFilterRegistration","parameterTypes":["java.lang.String"] }, {"name":"getFilterRegistrations","parameterTypes":[] }, {"name":"getInitParameter","parameterTypes":["java.lang.String"] }, {"name":"getInitParameterNames","parameterTypes":[] }, {"name":"getJspConfigDescriptor","parameterTypes":[] }, {"name":"getMajorVersion","parameterTypes":[] }, {"name":"getMimeType","parameterTypes":["java.lang.String"] }, {"name":"getMinorVersion","parameterTypes":[] }, {"name":"getNamedDispatcher","parameterTypes":["java.lang.String"] }, {"name":"getRealPath","parameterTypes":["java.lang.String"] }, {"name":"getRequestCharacterEncoding","parameterTypes":[] }, {"name":"getRequestDispatcher","parameterTypes":["java.lang.String"] }, {"name":"getResource","parameterTypes":["java.lang.String"] }, {"name":"getResourceAsStream","parameterTypes":["java.lang.String"] }, {"name":"getResourcePaths","parameterTypes":["java.lang.String"] }, {"name":"getResponseCharacterEncoding","parameterTypes":[] }, {"name":"getServerInfo","parameterTypes":[] }, {"name":"getServletContextName","parameterTypes":[] }, {"name":"getServletRegistration","parameterTypes":["java.lang.String"] }, {"name":"getServletRegistrations","parameterTypes":[] }, {"name":"getSessionCookieConfig","parameterTypes":[] }, {"name":"getSessionTimeout","parameterTypes":[] }, {"name":"getVirtualServerName","parameterTypes":[] }, {"name":"log","parameterTypes":["java.lang.String"] }, {"name":"log","parameterTypes":["java.lang.String","java.lang.Throwable"] }, {"name":"removeAttribute","parameterTypes":["java.lang.String"] }, {"name":"setAttribute","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"setInitParameter","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"setRequestCharacterEncoding","parameterTypes":["java.lang.String"] }, {"name":"setResponseCharacterEncoding","parameterTypes":["java.lang.String"] }, {"name":"setSessionTimeout","parameterTypes":["int"] }, {"name":"setSessionTrackingModes","parameterTypes":["java.util.Set"] }]
},
{
  "name":"org.apache.catalina.loader.JdbcLeakPrevention",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"clearJdbcDriverRegistrations","parameterTypes":[] }]
},
{
  "name":"org.apache.catalina.util.CharsetMapper",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.coyote.AbstractProtocol",
  "methods":[{"name":"getAddress","parameterTypes":[] }, {"name":"getLocalPort","parameterTypes":[] }, {"name":"setPort","parameterTypes":["int"] }, {"name":"setProperty","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"org.apache.coyote.http11.AbstractHttp11Protocol",
  "methods":[{"name":"isSSLEnabled","parameterTypes":[] }]
},
{
  "name":"org.apache.coyote.http11.Http11NioProtocol",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.dubbo.api.DemoService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getUser","parameterTypes":["java.lang.String"] }, {"name":"sayHello","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.apache.dubbo.api.DemoServiceDubboProxy0",
  "fields":[{"name":"methods"}],
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"org.apache.dubbo.api.User",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getAge","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.auth.filter.ConsumerSignFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.auth.filter.ProviderAuthFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.cache.filter.CacheFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.common.CommonScopeModelInitializer",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.beans.ScopeBeanExtensionInjector",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.bytecode.ClassGenerator$DC",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.dubbo.common.compiler.support.AdaptiveCompiler",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.compiler.support.JavassistCompiler",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.compiler.support.JdkCompiler",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.common.config.Environment",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ScopeModel"] }]
},
{
  "name":"org.apache.dubbo.common.config.ModuleEnvironment",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ModuleModel"] }]
},
{
  "name":"org.apache.dubbo.common.config.configcenter.file.FileSystemDynamicConfigurationFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.common.config.configcenter.nop.NopDynamicConfigurationFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.common.constants.CommonConstants$DubboProperty",
  "allDeclaredFields":true
},
{
  "name":"org.apache.dubbo.common.constants.CommonConstants$SystemProperty",
  "allDeclaredFields":true
},
{
  "name":"org.apache.dubbo.common.constants.CommonConstants$ThirdPartyProperty",
  "allDeclaredFields":true
},
{
  "name":"org.apache.dubbo.common.context.ApplicationExt",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.dubbo.common.context.Lifecycle",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.dubbo.common.context.LifecycleAdapter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"start","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.convert.ConverterUtil",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.common.convert.StringToBooleanConverter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.convert.StringToByteConverter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.convert.StringToCharArrayConverter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.convert.StringToCharacterConverter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.convert.StringToDoubleConverter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.convert.StringToDurationConverter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.convert.StringToFloatConverter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.convert.StringToIntegerConverter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.convert.StringToLongConverter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.convert.StringToOptionalConverter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.convert.StringToShortConverter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.convert.StringToStringConverter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.extension.DisableInject",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.dubbo.common.extension.ExtensionAccessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getActivateExtensions","parameterTypes":["java.lang.Class"] }, {"name":"getAdaptiveExtension","parameterTypes":["java.lang.Class"] }, {"name":"getDefaultExtension","parameterTypes":["java.lang.Class"] }, {"name":"getExtension","parameterTypes":["java.lang.Class","java.lang.String"] }, {"name":"getExtensionLoader","parameterTypes":["java.lang.Class"] }, {"name":"getFirstActivateExtension","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.apache.dubbo.common.extension.ExtensionAccessorAware",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.dubbo.common.extension.SPI",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.dubbo.common.extension.inject.AdaptiveExtensionInjector",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.extension.inject.SpiExtensionInjector",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.infra.support.EnvironmentAdapter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.json.impl.FastJson2Impl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.lang.ShutdownHookCallbacks",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ApplicationModel"] }]
},
{
  "name":"org.apache.dubbo.common.logger.jcl.JclLoggerAdapter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.common.logger.jdk.JdkLoggerAdapter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.common.logger.log4j.Log4jLoggerAdapter",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.logger.log4j2.Log4j2LoggerAdapter",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.resource.Disposable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.dubbo.common.serialization.ClassHolder",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.serialize.DefaultMultipleSerialization",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.serialize.DefaultSerializationExceptionWrapper",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.apache.dubbo.common.serialize.Serialization"] }]
},
{
  "name":"org.apache.dubbo.common.serialize.SerializationScopeModelInitializer",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.serialize.fastjson2.FastJson2Serialization",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.serialize.fastjson2.Fastjson2CreatorManager",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.common.serialize.fastjson2.Fastjson2ScopeModelInitializer",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.serialize.fastjson2.Fastjson2SecurityManager",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.common.serialize.hessian2.Hessian2FactoryManager",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.common.serialize.hessian2.Hessian2ScopeModelInitializer",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.serialize.hessian2.Hessian2Serialization",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.serialize.java.CompactedJavaSerialization",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.serialize.java.JavaSerialization",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.serialize.nativejava.NativeJavaSerialization",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.serialize.support.PreferSerializationProviderImpl",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.common.ssl.CertManager",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.common.ssl.impl.SSLConfigCertProvider",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.status.reporter.FrameworkStatusReportService",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.store.support.SimpleDataStore",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.threadpool.ThreadPool",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.dubbo.common.threadpool.ThreadPool$Adaptive",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.threadpool.manager.DefaultExecutorRepository",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.common.threadpool.manager.FrameworkExecutorRepository",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.threadpool.manager.IsolationExecutorRepository",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ApplicationModel"] }]
},
{
  "name":"org.apache.dubbo.common.threadpool.support.cached.CachedThreadPool",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.threadpool.support.eager.EagerThreadPool",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.common.threadpool.support.fixed.FixedThreadPool",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.common.threadpool.support.limited.LimitedThreadPool",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.common.timer.HashedWheelTimer",
  "fields":[{"name":"workerState"}]
},
{
  "name":"org.apache.dubbo.common.timer.HashedWheelTimer$HashedWheelTimeout",
  "fields":[{"name":"state"}]
},
{
  "name":"org.apache.dubbo.common.url.component.param.DefaultDynamicParamSource",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.common.utils.DefaultSerializeClassChecker",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.common.utils.SerializeSecurityConfigurator",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ModuleModel"] }]
},
{
  "name":"org.apache.dubbo.common.utils.SerializeSecurityManager",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.config.AbstractConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getId","parameterTypes":[] }, {"name":"setId","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.apache.dubbo.config.AbstractConfigBeanInfo"
},
{
  "name":"org.apache.dubbo.config.AbstractConfigCustomizer"
},
{
  "name":"org.apache.dubbo.config.AbstractInterfaceConfig",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getAuth","parameterTypes":[] }, {"name":"getCallbacks","parameterTypes":[] }, {"name":"getCluster","parameterTypes":[] }, {"name":"getConnections","parameterTypes":[] }, {"name":"getGroup","parameterTypes":[] }, {"name":"getInterface","parameterTypes":[] }, {"name":"getLayer","parameterTypes":[] }, {"name":"getLocal","parameterTypes":[] }, {"name":"getMonitor","parameterTypes":[] }, {"name":"getOnconnect","parameterTypes":[] }, {"name":"getOndisconnect","parameterTypes":[] }, {"name":"getOwner","parameterTypes":[] }, {"name":"getProxy","parameterTypes":[] }, {"name":"getRegistryIds","parameterTypes":[] }, {"name":"getScope","parameterTypes":[] }, {"name":"getSingleton","parameterTypes":[] }, {"name":"getStub","parameterTypes":[] }, {"name":"getTag","parameterTypes":[] }, {"name":"getVersion","parameterTypes":[] }, {"name":"setInterface","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.apache.dubbo.config.AbstractInterfaceConfigBeanInfo"
},
{
  "name":"org.apache.dubbo.config.AbstractInterfaceConfigCustomizer"
},
{
  "name":"org.apache.dubbo.config.AbstractMethodConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getActives","parameterTypes":[] }, {"name":"getCache","parameterTypes":[] }, {"name":"getForks","parameterTypes":[] }, {"name":"getLoadbalance","parameterTypes":[] }, {"name":"getMerger","parameterTypes":[] }, {"name":"getMock","parameterTypes":[] }, {"name":"getParameters","parameterTypes":[] }, {"name":"getRetries","parameterTypes":[] }, {"name":"getSent","parameterTypes":[] }, {"name":"getTimeout","parameterTypes":[] }, {"name":"getValidation","parameterTypes":[] }, {"name":"isAsync","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.config.AbstractMethodConfigBeanInfo"
},
{
  "name":"org.apache.dubbo.config.AbstractMethodConfigCustomizer"
},
{
  "name":"org.apache.dubbo.config.AbstractReferenceConfig",
  "queryAllPublicMethods":true,
  "fields":[{"name":"isCheck"}, {"name":"isGeneric"}, {"name":"isInit"}, {"name":"isInjvm"}],
  "methods":[{"name":"getClient","parameterTypes":[] }, {"name":"getFilter","parameterTypes":[] }, {"name":"getGeneric","parameterTypes":[] }, {"name":"getLazy","parameterTypes":[] }, {"name":"getListener","parameterTypes":[] }, {"name":"getProtocol","parameterTypes":[] }, {"name":"getProvidedBy","parameterTypes":[] }, {"name":"getProviderNamespace","parameterTypes":[] }, {"name":"getProviderPort","parameterTypes":[] }, {"name":"getReconnect","parameterTypes":[] }, {"name":"getReferAsync","parameterTypes":[] }, {"name":"getRouter","parameterTypes":[] }, {"name":"getSticky","parameterTypes":[] }, {"name":"getStubevent","parameterTypes":[] }, {"name":"isCheck","parameterTypes":[] }, {"name":"isInit","parameterTypes":[] }, {"name":"isInjvm","parameterTypes":[] }, {"name":"setSticky","parameterTypes":["java.lang.Boolean"] }]
},
{
  "name":"org.apache.dubbo.config.AbstractReferenceConfigBeanInfo"
},
{
  "name":"org.apache.dubbo.config.AbstractReferenceConfigCustomizer"
},
{
  "name":"org.apache.dubbo.config.AbstractServiceConfig",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getAccesslog","parameterTypes":[] }, {"name":"getDelay","parameterTypes":[] }, {"name":"getDocument","parameterTypes":[] }, {"name":"getExecutes","parameterTypes":[] }, {"name":"getExport","parameterTypes":[] }, {"name":"getExportAsync","parameterTypes":[] }, {"name":"getFilter","parameterTypes":[] }, {"name":"getGroup","parameterTypes":[] }, {"name":"getListener","parameterTypes":[] }, {"name":"getPreferSerialization","parameterTypes":[] }, {"name":"getProtocolIds","parameterTypes":[] }, {"name":"getSerialization","parameterTypes":[] }, {"name":"getToken","parameterTypes":[] }, {"name":"getVersion","parameterTypes":[] }, {"name":"getWarmup","parameterTypes":[] }, {"name":"getWeight","parameterTypes":[] }, {"name":"isDeprecated","parameterTypes":[] }, {"name":"isDynamic","parameterTypes":[] }, {"name":"isRegister","parameterTypes":[] }, {"name":"setDeprecated","parameterTypes":["java.lang.Boolean"] }, {"name":"setDynamic","parameterTypes":["java.lang.Boolean"] }]
},
{
  "name":"org.apache.dubbo.config.AbstractServiceConfigBeanInfo"
},
{
  "name":"org.apache.dubbo.config.AbstractServiceConfigCustomizer"
},
{
  "name":"org.apache.dubbo.config.ApplicationConfig",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getArchitecture","parameterTypes":[] }, {"name":"getAutoTrustSerializeClass","parameterTypes":[] }, {"name":"getCheckSerializable","parameterTypes":[] }, {"name":"getCompiler","parameterTypes":[] }, {"name":"getDumpDirectory","parameterTypes":[] }, {"name":"getDumpEnable","parameterTypes":[] }, {"name":"getEnableEmptyProtection","parameterTypes":[] }, {"name":"getEnableFileCache","parameterTypes":[] }, {"name":"getEnvironment","parameterTypes":[] }, {"name":"getExecutorManagementMode","parameterTypes":[] }, {"name":"getHostname","parameterTypes":[] }, {"name":"getLivenessProbe","parameterTypes":[] }, {"name":"getLogger","parameterTypes":[] }, {"name":"getMappingRetryInterval","parameterTypes":[] }, {"name":"getMetadataServicePort","parameterTypes":[] }, {"name":"getMetadataServiceProtocol","parameterTypes":[] }, {"name":"getMetadataType","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getOrganization","parameterTypes":[] }, {"name":"getOwner","parameterTypes":[] }, {"name":"getParameters","parameterTypes":[] }, {"name":"getProtocol","parameterTypes":[] }, {"name":"getQosAcceptForeignIp","parameterTypes":[] }, {"name":"getQosAcceptForeignIpWhitelist","parameterTypes":[] }, {"name":"getQosAnonymousAccessPermissionLevel","parameterTypes":[] }, {"name":"getQosAnonymousAllowCommands","parameterTypes":[] }, {"name":"getQosCheck","parameterTypes":[] }, {"name":"getQosEnable","parameterTypes":[] }, {"name":"getQosHost","parameterTypes":[] }, {"name":"getQosPort","parameterTypes":[] }, {"name":"getReadinessProbe","parameterTypes":[] }, {"name":"getRegisterConsumer","parameterTypes":[] }, {"name":"getRegisterMode","parameterTypes":[] }, {"name":"getRegistryIds","parameterTypes":[] }, {"name":"getRepository","parameterTypes":[] }, {"name":"getSerializeCheckStatus","parameterTypes":[] }, {"name":"getShutwait","parameterTypes":[] }, {"name":"getStartupProbe","parameterTypes":[] }, {"name":"getTrustSerializeClassLevel","parameterTypes":[] }, {"name":"getVersion","parameterTypes":[] }, {"name":"setEnableFileCache","parameterTypes":["java.lang.Boolean"] }, {"name":"setExecutorManagementMode","parameterTypes":["java.lang.String"] }, {"name":"setLogger","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setProtocol","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.apache.dubbo.config.ApplicationConfigBeanInfo"
},
{
  "name":"org.apache.dubbo.config.ApplicationConfigCustomizer"
},
{
  "name":"org.apache.dubbo.config.ConfigCenterConfig",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getAddress","parameterTypes":[] }, {"name":"getAppConfigFile","parameterTypes":[] }, {"name":"getCheck","parameterTypes":[] }, {"name":"getCluster","parameterTypes":[] }, {"name":"getConfigFile","parameterTypes":[] }, {"name":"getGroup","parameterTypes":[] }, {"name":"getHighestPriority","parameterTypes":[] }, {"name":"getNamespace","parameterTypes":[] }, {"name":"getParameters","parameterTypes":[] }, {"name":"getPassword","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getProtocol","parameterTypes":[] }, {"name":"getTimeout","parameterTypes":[] }, {"name":"getUsername","parameterTypes":[] }, {"name":"isCheck","parameterTypes":[] }, {"name":"isHighestPriority","parameterTypes":[] }, {"name":"setAddress","parameterTypes":["java.lang.String"] }, {"name":"setCheck","parameterTypes":["java.lang.Boolean"] }, {"name":"setConfigFile","parameterTypes":["java.lang.String"] }, {"name":"setGroup","parameterTypes":["java.lang.String"] }, {"name":"setHighestPriority","parameterTypes":["java.lang.Boolean"] }, {"name":"setNamespace","parameterTypes":["java.lang.String"] }, {"name":"setPort","parameterTypes":["java.lang.Integer"] }, {"name":"setProtocol","parameterTypes":["java.lang.String"] }, {"name":"setTimeout","parameterTypes":["java.lang.Long"] }]
},
{
  "name":"org.apache.dubbo.config.ConfigCenterConfigBeanInfo"
},
{
  "name":"org.apache.dubbo.config.ConfigCenterConfigCustomizer"
},
{
  "name":"org.apache.dubbo.config.ConfigScopeModelInitializer",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.config.ConsumerConfig",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getCorethreads","parameterTypes":[] }, {"name":"getMeshEnable","parameterTypes":[] }, {"name":"getQueues","parameterTypes":[] }, {"name":"getReferBackground","parameterTypes":[] }, {"name":"getReferThreadNum","parameterTypes":[] }, {"name":"getShareconnections","parameterTypes":[] }, {"name":"getThreadpool","parameterTypes":[] }, {"name":"getThreads","parameterTypes":[] }, {"name":"getUrlMergeProcessor","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.config.ConsumerConfigBeanInfo"
},
{
  "name":"org.apache.dubbo.config.ConsumerConfigCustomizer"
},
{
  "name":"org.apache.dubbo.config.MetadataReportConfig",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getAddress","parameterTypes":[] }, {"name":"getCluster","parameterTypes":[] }, {"name":"getCycleReport","parameterTypes":[] }, {"name":"getFile","parameterTypes":[] }, {"name":"getGroup","parameterTypes":[] }, {"name":"getParameters","parameterTypes":[] }, {"name":"getPassword","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getProtocol","parameterTypes":[] }, {"name":"getRegistry","parameterTypes":[] }, {"name":"getReportDefinition","parameterTypes":[] }, {"name":"getReportMetadata","parameterTypes":[] }, {"name":"getRetryPeriod","parameterTypes":[] }, {"name":"getRetryTimes","parameterTypes":[] }, {"name":"getSyncReport","parameterTypes":[] }, {"name":"getTimeout","parameterTypes":[] }, {"name":"getUsername","parameterTypes":[] }, {"name":"isCheck","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.config.MetadataReportConfigBeanInfo"
},
{
  "name":"org.apache.dubbo.config.MetadataReportConfigCustomizer"
},
{
  "name":"org.apache.dubbo.config.MetricsConfig",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getAggregation","parameterTypes":[] }, {"name":"getCollectorSyncPeriod","parameterTypes":[] }, {"name":"getEnableCollectorSync","parameterTypes":[] }, {"name":"getEnableJvm","parameterTypes":[] }, {"name":"getEnableMetadata","parameterTypes":[] }, {"name":"getEnableMetricsInit","parameterTypes":[] }, {"name":"getEnableNetty","parameterTypes":[] }, {"name":"getEnableRegistry","parameterTypes":[] }, {"name":"getEnableRpc","parameterTypes":[] }, {"name":"getEnableThreadpool","parameterTypes":[] }, {"name":"getExportMetricsService","parameterTypes":[] }, {"name":"getExportServicePort","parameterTypes":[] }, {"name":"getExportServiceProtocol","parameterTypes":[] }, {"name":"getHistogram","parameterTypes":[] }, {"name":"getPrometheus","parameterTypes":[] }, {"name":"getProtocol","parameterTypes":[] }, {"name":"getRpcLevel","parameterTypes":[] }, {"name":"getUseGlobalRegistry","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.config.MetricsConfigBeanInfo"
},
{
  "name":"org.apache.dubbo.config.MetricsConfigCustomizer"
},
{
  "name":"org.apache.dubbo.config.ModuleConfig",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getBackground","parameterTypes":[] }, {"name":"getCheckReferenceTimeout","parameterTypes":[] }, {"name":"getExportAsync","parameterTypes":[] }, {"name":"getExportThreadNum","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getOrganization","parameterTypes":[] }, {"name":"getOwner","parameterTypes":[] }, {"name":"getReferAsync","parameterTypes":[] }, {"name":"getReferThreadNum","parameterTypes":[] }, {"name":"getVersion","parameterTypes":[] }, {"name":"setBackground","parameterTypes":["java.lang.Boolean"] }]
},
{
  "name":"org.apache.dubbo.config.ModuleConfigBeanInfo"
},
{
  "name":"org.apache.dubbo.config.ModuleConfigCustomizer"
},
{
  "name":"org.apache.dubbo.config.ProtocolConfig",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getAccepts","parameterTypes":[] }, {"name":"getAccesslog","parameterTypes":[] }, {"name":"getAlive","parameterTypes":[] }, {"name":"getBuffer","parameterTypes":[] }, {"name":"getCharset","parameterTypes":[] }, {"name":"getClient","parameterTypes":[] }, {"name":"getCodec","parameterTypes":[] }, {"name":"getContextpath","parameterTypes":[] }, {"name":"getCorethreads","parameterTypes":[] }, {"name":"getDispatcher","parameterTypes":[] }, {"name":"getExchanger","parameterTypes":[] }, {"name":"getExtProtocol","parameterTypes":[] }, {"name":"getExtension","parameterTypes":[] }, {"name":"getHeartbeat","parameterTypes":[] }, {"name":"getHost","parameterTypes":[] }, {"name":"getIothreads","parameterTypes":[] }, {"name":"getJsonCheckLevel","parameterTypes":[] }, {"name":"getKeepAlive","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getNetworker","parameterTypes":[] }, {"name":"getOptimizer","parameterTypes":[] }, {"name":"getParameters","parameterTypes":[] }, {"name":"getPayload","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getPreferSerialization","parameterTypes":[] }, {"name":"getPrompt","parameterTypes":[] }, {"name":"getQueues","parameterTypes":[] }, {"name":"getSerialization","parameterTypes":[] }, {"name":"getServer","parameterTypes":[] }, {"name":"getSslEnabled","parameterTypes":[] }, {"name":"getStatus","parameterTypes":[] }, {"name":"getTelnet","parameterTypes":[] }, {"name":"getThreadPoolExhaustedListeners","parameterTypes":[] }, {"name":"getThreadpool","parameterTypes":[] }, {"name":"getThreads","parameterTypes":[] }, {"name":"getTransporter","parameterTypes":[] }, {"name":"getTriple","parameterTypes":[] }, {"name":"isRegister","parameterTypes":[] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setPort","parameterTypes":["java.lang.Integer"] }, {"name":"setPreferSerialization","parameterTypes":["java.lang.String"] }, {"name":"setTriple","parameterTypes":["org.apache.dubbo.config.nested.TripleConfig"] }]
},
{
  "name":"org.apache.dubbo.config.ProtocolConfigBeanInfo"
},
{
  "name":"org.apache.dubbo.config.ProtocolConfigCustomizer"
},
{
  "name":"org.apache.dubbo.config.ProviderConfig",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getAccepts","parameterTypes":[] }, {"name":"getAlive","parameterTypes":[] }, {"name":"getBuffer","parameterTypes":[] }, {"name":"getCharset","parameterTypes":[] }, {"name":"getClient","parameterTypes":[] }, {"name":"getCodec","parameterTypes":[] }, {"name":"getContextpath","parameterTypes":[] }, {"name":"getDeprecated","parameterTypes":[] }, {"name":"getDispatcher","parameterTypes":[] }, {"name":"getDynamic","parameterTypes":[] }, {"name":"getExchanger","parameterTypes":[] }, {"name":"getExportBackground","parameterTypes":[] }, {"name":"getExportThreadNum","parameterTypes":[] }, {"name":"getHost","parameterTypes":[] }, {"name":"getIothreads","parameterTypes":[] }, {"name":"getNetworker","parameterTypes":[] }, {"name":"getPayload","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getPrompt","parameterTypes":[] }, {"name":"getQueues","parameterTypes":[] }, {"name":"getServer","parameterTypes":[] }, {"name":"getStatus","parameterTypes":[] }, {"name":"getTelnet","parameterTypes":[] }, {"name":"getThreadname","parameterTypes":[] }, {"name":"getThreadpool","parameterTypes":[] }, {"name":"getThreads","parameterTypes":[] }, {"name":"getTransporter","parameterTypes":[] }, {"name":"getWait","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.config.ProviderConfigBeanInfo"
},
{
  "name":"org.apache.dubbo.config.ProviderConfigCustomizer"
},
{
  "name":"org.apache.dubbo.config.ReferenceConfig",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getServices","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.config.ReferenceConfigBase",
  "queryAllPublicMethods":true,
  "fields":[{"name":"get"}, {"name":"shouldCheck"}, {"name":"shouldInit"}, {"name":"shouldReferAsync"}],
  "methods":[{"name":"getGroup","parameterTypes":[] }, {"name":"getUnloadClusterRelated","parameterTypes":[] }, {"name":"getUrl","parameterTypes":[] }, {"name":"getVersion","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.config.ReferenceConfigBaseBeanInfo"
},
{
  "name":"org.apache.dubbo.config.ReferenceConfigBaseCustomizer"
},
{
  "name":"org.apache.dubbo.config.ReferenceConfigBeanInfo"
},
{
  "name":"org.apache.dubbo.config.ReferenceConfigCustomizer"
},
{
  "name":"org.apache.dubbo.config.RegistryConfig",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getAccepts","parameterTypes":[] }, {"name":"getAddress","parameterTypes":[] }, {"name":"getClient","parameterTypes":[] }, {"name":"getCluster","parameterTypes":[] }, {"name":"getEnableEmptyProtection","parameterTypes":[] }, {"name":"getExtraKeys","parameterTypes":[] }, {"name":"getFile","parameterTypes":[] }, {"name":"getGroup","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getParameters","parameterTypes":[] }, {"name":"getPassword","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getPreferred","parameterTypes":[] }, {"name":"getProtocol","parameterTypes":[] }, {"name":"getRegisterMode","parameterTypes":[] }, {"name":"getSecure","parameterTypes":[] }, {"name":"getServer","parameterTypes":[] }, {"name":"getSession","parameterTypes":[] }, {"name":"getSimplified","parameterTypes":[] }, {"name":"getTimeout","parameterTypes":[] }, {"name":"getTransporter","parameterTypes":[] }, {"name":"getUseAsConfigCenter","parameterTypes":[] }, {"name":"getUseAsMetadataCenter","parameterTypes":[] }, {"name":"getUsername","parameterTypes":[] }, {"name":"getVersion","parameterTypes":[] }, {"name":"getWait","parameterTypes":[] }, {"name":"getWeight","parameterTypes":[] }, {"name":"getZone","parameterTypes":[] }, {"name":"isCheck","parameterTypes":[] }, {"name":"isDefault","parameterTypes":[] }, {"name":"isDynamic","parameterTypes":[] }, {"name":"isRegister","parameterTypes":[] }, {"name":"isSubscribe","parameterTypes":[] }, {"name":"setAddress","parameterTypes":["java.lang.String"] }, {"name":"setPort","parameterTypes":["java.lang.Integer"] }, {"name":"setProtocol","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.apache.dubbo.config.RegistryConfigBeanInfo"
},
{
  "name":"org.apache.dubbo.config.RegistryConfigCustomizer"
},
{
  "name":"org.apache.dubbo.config.SslConfig",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getCaAddress","parameterTypes":[] }, {"name":"getCaCertPath","parameterTypes":[] }, {"name":"getClientKeyCertChainPath","parameterTypes":[] }, {"name":"getClientKeyPassword","parameterTypes":[] }, {"name":"getClientPrivateKeyPath","parameterTypes":[] }, {"name":"getClientTrustCertCollectionPath","parameterTypes":[] }, {"name":"getEnvType","parameterTypes":[] }, {"name":"getOidcTokenPath","parameterTypes":[] }, {"name":"getServerKeyCertChainPath","parameterTypes":[] }, {"name":"getServerKeyPassword","parameterTypes":[] }, {"name":"getServerPrivateKeyPath","parameterTypes":[] }, {"name":"getServerTrustCertCollectionPath","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.config.SslConfigBeanInfo"
},
{
  "name":"org.apache.dubbo.config.SslConfigCustomizer"
},
{
  "name":"org.apache.dubbo.config.annotation.Argument",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.dubbo.config.annotation.DubboReference",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.dubbo.config.annotation.Method",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.dubbo.config.context.AbstractConfigManager",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addConfig","parameterTypes":["org.apache.dubbo.config.AbstractConfig"] }, {"name":"clear","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }, {"name":"getConfig","parameterTypes":["java.lang.Class","java.lang.String"] }, {"name":"getConfigs","parameterTypes":["java.lang.Class"] }, {"name":"getConfigsMap","parameterTypes":["java.lang.Class"] }, {"name":"initialize","parameterTypes":[] }, {"name":"isInitialized","parameterTypes":[] }, {"name":"loadConfigsOfTypeFromProps","parameterTypes":["java.lang.Class"] }, {"name":"removeConfig","parameterTypes":["org.apache.dubbo.config.AbstractConfig"] }]
},
{
  "name":"org.apache.dubbo.config.context.ConfigManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ApplicationModel"] }, {"name":"getDefaultConfigs","parameterTypes":["java.lang.Class"] }, {"name":"loadConfigs","parameterTypes":[] }, {"name":"refreshAll","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.config.context.ModuleConfigManager",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ModuleModel"] }]
},
{
  "name":"org.apache.dubbo.config.deploy.DefaultApplicationDeployer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ApplicationModel"] }]
},
{
  "name":"org.apache.dubbo.config.deploy.DefaultMetricsServiceExporter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.config.deploy.DefaultModuleDeployer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ModuleModel"] }]
},
{
  "name":"org.apache.dubbo.config.metadata.ExporterDeployListener",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.config.nested.TripleConfig",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getEnableHttp3","parameterTypes":[] }, {"name":"getEnablePush","parameterTypes":[] }, {"name":"getEnableServlet","parameterTypes":[] }, {"name":"getHeaderTableSize","parameterTypes":[] }, {"name":"getHttp3CcAlgorithm","parameterTypes":[] }, {"name":"getHttp3DisableActiveMigration","parameterTypes":[] }, {"name":"getHttp3EnableHystart","parameterTypes":[] }, {"name":"getHttp3InitialMaxData","parameterTypes":[] }, {"name":"getHttp3InitialMaxStreamDataBidiLocal","parameterTypes":[] }, {"name":"getHttp3InitialMaxStreamDataBidiRemote","parameterTypes":[] }, {"name":"getHttp3InitialMaxStreamDataUni","parameterTypes":[] }, {"name":"getHttp3InitialMaxStreamsBidi","parameterTypes":[] }, {"name":"getHttp3InitialMaxStreamsUni","parameterTypes":[] }, {"name":"getHttp3MaxAckDelay","parameterTypes":[] }, {"name":"getHttp3MaxAckDelayExponent","parameterTypes":[] }, {"name":"getHttp3RecvQueueLen","parameterTypes":[] }, {"name":"getHttp3SendQueueLen","parameterTypes":[] }, {"name":"getInitialBufferSize","parameterTypes":[] }, {"name":"getInitialWindowSize","parameterTypes":[] }, {"name":"getMaxBodySize","parameterTypes":[] }, {"name":"getMaxChunkSize","parameterTypes":[] }, {"name":"getMaxConcurrentStreams","parameterTypes":[] }, {"name":"getMaxFrameSize","parameterTypes":[] }, {"name":"getMaxHeaderListSize","parameterTypes":[] }, {"name":"getMaxHeaderSize","parameterTypes":[] }, {"name":"getMaxInitialLineLength","parameterTypes":[] }, {"name":"getMaxResponseBodySize","parameterTypes":[] }, {"name":"getServletFilterOrder","parameterTypes":[] }, {"name":"setEnablePush","parameterTypes":["java.lang.Boolean"] }, {"name":"setHeaderTableSize","parameterTypes":["java.lang.Integer"] }, {"name":"setInitialBufferSize","parameterTypes":["java.lang.Integer"] }, {"name":"setInitialWindowSize","parameterTypes":["java.lang.Integer"] }, {"name":"setMaxBodySize","parameterTypes":["java.lang.Integer"] }, {"name":"setMaxChunkSize","parameterTypes":["java.lang.Integer"] }, {"name":"setMaxConcurrentStreams","parameterTypes":["java.lang.Integer"] }, {"name":"setMaxFrameSize","parameterTypes":["java.lang.Integer"] }, {"name":"setMaxHeaderListSize","parameterTypes":["java.lang.Integer"] }, {"name":"setMaxHeaderSize","parameterTypes":["java.lang.Integer"] }, {"name":"setMaxInitialLineLength","parameterTypes":["java.lang.Integer"] }, {"name":"setMaxResponseBodySize","parameterTypes":["java.lang.Integer"] }]
},
{
  "name":"org.apache.dubbo.config.nested.TripleConfigBeanInfo"
},
{
  "name":"org.apache.dubbo.config.nested.TripleConfigCustomizer"
},
{
  "name":"org.apache.dubbo.config.spring.ReferenceBean",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setInterfaceClass","parameterTypes":["java.lang.Class"] }, {"name":"setInterfaceName","parameterTypes":["java.lang.String"] }, {"name":"setReferencePropsJson","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.apache.dubbo.config.spring.SpringScopeModelInitializer",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigAliasPostProcessor",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"postProcessBeanDefinitionRegistry","parameterTypes":["org.springframework.beans.factory.support.BeanDefinitionRegistry"] }, {"name":"postProcessBeanFactory","parameterTypes":["org.springframework.beans.factory.config.ConfigurableListableBeanFactory"] }, {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.apache.dubbo.config.spring.beans.factory.annotation.ServicePackagesHolder",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.dubbo.config.spring.beans.factory.config.DubboConfigDefaultPropertyValueBeanPostProcessor",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }, {"name":"postProcessMergedBeanDefinition","parameterTypes":["org.springframework.beans.factory.support.RootBeanDefinition","java.lang.Class","java.lang.String"] }]
},
{
  "name":"org.apache.dubbo.config.spring.context.DubboConfigApplicationListener",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"forPayload","parameterTypes":["java.util.function.Consumer"] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.apache.dubbo.config.spring.context.DubboConfigBeanInitializer",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.apache.dubbo.config.spring.context.DubboContextPostProcessor",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessBeanDefinitionRegistry","parameterTypes":["org.springframework.beans.factory.support.BeanDefinitionRegistry"] }, {"name":"postProcessBeanFactory","parameterTypes":["org.springframework.beans.factory.config.ConfigurableListableBeanFactory"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }]
},
{
  "name":"org.apache.dubbo.config.spring.context.DubboDeployApplicationListener",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"forPayload","parameterTypes":["java.util.function.Consumer"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.apache.dubbo.config.spring.context.DubboSpringInitContext",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.dubbo.config.spring.context.annotation.DubboComponentScan",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.dubbo.config.spring.context.annotation.EnableDubbo",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.dubbo.config.spring.context.annotation.EnableDubboConfig",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.dubbo.config.spring.extension.SpringExtensionInjector",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.config.spring.reference.ReferenceBeanManager",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.apache.dubbo.config.spring.util.GenericBeanPostProcessorAdapter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getBeanType","parameterTypes":[] }, {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"processBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.apache.dubbo.config.spring6.context.DubboInfraBeanRegisterPostProcessor",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessBeanDefinitionRegistry","parameterTypes":["org.springframework.beans.factory.support.BeanDefinitionRegistry"] }, {"name":"postProcessBeanFactory","parameterTypes":["org.springframework.beans.factory.config.ConfigurableListableBeanFactory"] }]
},
{
  "name":"org.apache.dubbo.config.utils.DefaultConfigValidator",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.config.utils.SimpleReferenceCache"
},
{
  "name":"org.apache.dubbo.configcenter.support.apollo.ApolloDynamicConfigurationFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.configcenter.support.nacos.NacosDynamicConfigurationFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ApplicationModel"] }]
},
{
  "name":"org.apache.dubbo.configcenter.support.zookeeper.ZookeeperDynamicConfigurationFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.consumer.ConsumerApplication",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"main","parameterTypes":["java.lang.String[]"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.apache.dubbo.consumer.ConsumerApplication$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.apache.dubbo.consumer.ConsumerApplication__ApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.consumer.web.TestController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getUser","parameterTypes":[] }, {"name":"sayHello","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.metadata.MetadataInfo",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.apache.dubbo.metadata.MetadataInfo$ServiceInfo",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.apache.dubbo.metadata.MetadataService",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.dubbo.metadata.MetadataServiceDetector",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.metadata.MetadataServiceDubboProxy1",
  "fields":[{"name":"methods"}],
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"org.apache.dubbo.metadata.definition.builder.ArrayTypeBuilder",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.metadata.definition.builder.CollectionTypeBuilder",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.metadata.definition.builder.EnumTypeBuilder",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.metadata.definition.builder.MapTypeBuilder",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.metadata.definition.protobuf.ProtobufTypeBuilder",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "fields":[{"name":"LIST"}],
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.metadata.report.MetadataReportFactory",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.dubbo.metadata.report.MetadataReportFactory$Adaptive",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.metadata.report.MetadataReportInstance",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ApplicationModel"] }]
},
{
  "name":"org.apache.dubbo.metadata.report.MetadataScopeModelInitializer",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.metadata.store.nacos.NacosMetadataReportFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.metadata.store.redis.RedisMetadataReportFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.metadata.store.zookeeper.ZookeeperMetadataReportFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.metrics.MetricsScopeModelInitializer",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.metrics.collector.AggregateMetricsCollector",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ApplicationModel"] }]
},
{
  "name":"org.apache.dubbo.metrics.collector.ConfigCenterMetricsCollector"
},
{
  "name":"org.apache.dubbo.metrics.collector.DefaultMetricsCollector",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ApplicationModel"] }]
},
{
  "name":"org.apache.dubbo.metrics.collector.HistogramMetricsCollector",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ApplicationModel"] }]
},
{
  "name":"org.apache.dubbo.metrics.config.collector.ConfigCenterMetricsCollector",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ApplicationModel"] }]
},
{
  "name":"org.apache.dubbo.metrics.event.MetricsDispatcher",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ApplicationModel"] }]
},
{
  "name":"org.apache.dubbo.metrics.filter.MetricsProviderFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.metrics.metadata.collector.MetadataMetricsCollector",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ApplicationModel"] }]
},
{
  "name":"org.apache.dubbo.metrics.prometheus.PrometheusMetricsReporterFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ApplicationModel"] }]
},
{
  "name":"org.apache.dubbo.metrics.registry.collector.NettyMetricsCollector",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ApplicationModel"] }]
},
{
  "name":"org.apache.dubbo.metrics.registry.collector.RegistryMetricsCollector",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ApplicationModel"] }]
},
{
  "name":"org.apache.dubbo.metrics.report.DefaultMetricsReporterFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.metrics.report.MetricsReporterFactory",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.dubbo.metrics.report.MetricsReporterFactory$Adaptive",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.monitor.support.MonitorClusterFilter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.monitor.support.MonitorFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.qos.QosScopeModelInitializer",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.qos.command.util.SerializeCheckUtils",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.qos.protocol.QosProtocolWrapper",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.Protocol"] }]
},
{
  "name":"org.apache.dubbo.qos.server.Server",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.registry.RegistryFactory",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.dubbo.registry.RegistryFactory$Adaptive",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.registry.RegistryFactoryWrapper",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.apache.dubbo.registry.RegistryFactory"] }]
},
{
  "name":"org.apache.dubbo.registry.RegistryScopeModelInitializer",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.registry.client.DefaultRegistryClusterIdentifier",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.registry.client.DefaultServiceDiscoveryFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.registry.client.ServiceDiscoveryRegistryFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.registry.client.metadata.MetadataServiceDelegation",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ApplicationModel"] }]
},
{
  "name":"org.apache.dubbo.registry.client.metadata.MetadataServiceNameMapping",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ApplicationModel"] }]
},
{
  "name":"org.apache.dubbo.registry.client.metadata.SpringCloudMetadataServiceURLBuilder",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.registry.client.metadata.SpringCloudServiceInstanceNotificationCustomizer",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.registry.client.metadata.StandardMetadataServiceURLBuilder",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ApplicationModel"] }]
},
{
  "name":"org.apache.dubbo.registry.client.migration.DefaultMigrationAddressComparator",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.registry.client.migration.MigrationRuleListener",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ModuleModel"] }]
},
{
  "name":"org.apache.dubbo.registry.integration.ExporterFactory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.registry.integration.InterfaceCompatibleRegistryProtocol",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.registry.integration.RegistryProtocol",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"setProtocol","parameterTypes":["org.apache.dubbo.rpc.Protocol"] }, {"name":"setProxyFactory","parameterTypes":["org.apache.dubbo.rpc.ProxyFactory"] }]
},
{
  "name":"org.apache.dubbo.registry.multicast.MulticastRegistryFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.registry.multicast.MulticastServiceDiscoveryFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.registry.multiple.MultipleRegistryFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.registry.multiple.MultipleServiceDiscoveryFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.registry.nacos.NacosRegistryFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.registry.nacos.NacosServiceDiscoveryFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.registry.support.DefaultProviderFirstParams",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.registry.support.RegistryManager",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ApplicationModel"] }]
},
{
  "name":"org.apache.dubbo.registry.zookeeper.ZookeeperRegistryFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.registry.zookeeper.ZookeeperServiceDiscoveryFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.remoting.api.connection.AbstractConnectionClient",
  "fields":[{"name":"counter"}]
},
{
  "name":"org.apache.dubbo.remoting.api.connection.MultiplexProtocolConnectionManager",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.remoting.api.connection.SingleProtocolConnectionManager",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.remoting.api.pu.DefaultCodec",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.remoting.api.pu.PortUnificationTransporter",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.dubbo.remoting.api.pu.PortUnificationTransporter$Adaptive",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.remoting.exchange.codec.ExchangeCodec",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.remoting.http12.message.DefaultHttpMessageAdapterFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.remoting.http12.message.codec.CodecUtils",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.remoting.http12.message.codec.HtmlCodecFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.remoting.http12.message.codec.JsonCodecFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.remoting.http12.message.codec.JsonPbCodecFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.remoting.http12.message.codec.MultipartDecoderFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.remoting.http12.message.codec.PlainTextCodecFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.remoting.http12.message.codec.UrlEncodeFormCodecFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.remoting.http12.message.codec.XmlCodecFactory"
},
{
  "name":"org.apache.dubbo.remoting.http12.message.codec.YamlCodecFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.remoting.http3.netty4.Http3ChannelAddressAccessor",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.remoting.telnet.codec.TelnetCodec",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.remoting.transport.codec.TransportCodec",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.remoting.transport.netty.NettyPortUnificationTransporter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.remoting.transport.netty4.NettyConnectionClient$1"
},
{
  "name":"org.apache.dubbo.remoting.transport.netty4.NettyConnectionHandler",
  "methods":[{"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"org.apache.dubbo.remoting.transport.netty4.NettyConnectionManager",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.remoting.transport.netty4.NettyPortUnificationTransporter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.AdaptiveMetrics",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.AdaptiveScopeModelInitializer",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.Invoker",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.dubbo.rpc.Protocol",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.dubbo.rpc.Protocol$Adaptive",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.ProxyFactory",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.dubbo.rpc.ProxyFactory$Adaptive",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.RpcScopeModelInitializer",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.Cluster",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.dubbo.rpc.cluster.Cluster$Adaptive",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.ClusterScopeModelInitializer",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.Directory",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.dubbo.rpc.cluster.MergeableClusterScopeModelInitializer",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.RouterFactory",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.dubbo.rpc.cluster.RouterFactory$Adaptive",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.filter.DefaultFilterChainBuilder",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.filter.ProtocolFilterWrapper",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.Protocol"] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.filter.support.CallbackConsumerContextFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.cluster.filter.support.ConsumerClassLoaderFilter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.filter.support.ConsumerContextFilter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ApplicationModel"] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.filter.support.MetricsClusterFilter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.filter.support.MetricsConsumerFilter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.governance.DefaultGovernanceRuleRepositoryImpl",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ModuleModel"] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.loadbalance.AdaptiveLoadBalance",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.cluster.loadbalance.ConsistentHashLoadBalance",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.cluster.loadbalance.LeastActiveLoadBalance",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.cluster.loadbalance.RandomLoadBalance",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.loadbalance.RoundRobinLoadBalance",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.cluster.loadbalance.ShortestResponseLoadBalance",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.cluster.merger.MergerFactory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.router.RouterSnapshotFilter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.router.RouterSnapshotSwitcher",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.router.condition.ConditionStateRouterFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.cluster.router.condition.config.AppStateRouterFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.router.condition.config.ProviderAppStateRouterFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.router.condition.config.ServiceStateRouterFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.router.mesh.MeshScopeModelInitializer",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.router.mesh.route.MeshRuleManager",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ModuleModel"] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.router.mesh.route.StandardMeshRuleRouterFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.router.mock.MockStateRouterFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.router.script.config.AppScriptRouterFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.router.tag.TagStateRouterFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.support.AvailableCluster",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.cluster.support.BroadcastCluster",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.cluster.support.ClusterUtils",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.support.FailbackCluster",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.cluster.support.FailfastCluster",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.cluster.support.FailoverCluster",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.support.FailsafeCluster",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.cluster.support.ForkingCluster",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.cluster.support.MergeableCluster",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.cluster.support.merger.DefaultProviderURLMergeProcessor",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.support.registry.ZoneAwareCluster",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterWrapper",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.cluster.Cluster"] }]
},
{
  "name":"org.apache.dubbo.rpc.cluster.support.wrapper.ScopeClusterWrapper",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.cluster.Cluster"] }]
},
{
  "name":"org.apache.dubbo.rpc.filter.AccessLogFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.filter.ActiveLimitFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.filter.AdaptiveLoadBalanceFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.filter.ClassLoaderCallbackFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.filter.ClassLoaderFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.filter.CompatibleFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.filter.ContextFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.filter.DeprecatedFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.filter.EchoFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.filter.ExceptionFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.filter.ExecuteLimitFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.filter.GenericFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.filter.GenericImplFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.filter.ProfilerServerFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.filter.RpcExceptionFilter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.filter.TimeoutFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.filter.TokenFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.filter.TpsLimitFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.listener.DeprecatedInvokerListener",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.listener.InjvmExporterListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.model.ApplicationModel",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"modelEnvironment","parameterTypes":[] }, {"name":"removeClassLoader","parameterTypes":["java.lang.ClassLoader"] }]
},
{
  "name":"org.apache.dubbo.rpc.model.ModuleModel",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"modelEnvironment","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.model.ScopeModel",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addClassLoaderListener","parameterTypes":["org.apache.dubbo.rpc.model.ScopeClassLoaderListener"] }, {"name":"addDestroyListener","parameterTypes":["org.apache.dubbo.rpc.model.ScopeModelDestroyListener"] }, {"name":"destroy","parameterTypes":[] }, {"name":"getAttribute","parameterTypes":["java.lang.String"] }, {"name":"getAttribute","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"getAttributes","parameterTypes":[] }, {"name":"getBeanFactory","parameterTypes":[] }, {"name":"getClassLoaders","parameterTypes":[] }, {"name":"getDesc","parameterTypes":[] }, {"name":"getExtensionDirector","parameterTypes":[] }, {"name":"getInternalId","parameterTypes":[] }, {"name":"getModelEnvironment","parameterTypes":[] }, {"name":"getModelName","parameterTypes":[] }, {"name":"getParent","parameterTypes":[] }, {"name":"getScope","parameterTypes":[] }, {"name":"isDestroyed","parameterTypes":[] }, {"name":"isInternal","parameterTypes":[] }, {"name":"removeClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setAttribute","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"setModelName","parameterTypes":["java.lang.String"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.model.ScopeModelAware",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.dubbo.rpc.protocol.InvokerCountWrapper",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.Protocol"] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.PermittedSerializationKeeper",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.Protocol"] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.ProtocolSecurityWrapper",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.Protocol"] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.ProtocolSerializationWrapper",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.Protocol"] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.dubbo.DubboCountCodec",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.protocol.dubbo.filter.FutureFilter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.protocol.dubbo.pu.DubboWireProtocol",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.protocol.injvm.InjvmProtocol",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.DefaultPackableMethodFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.GrpcHttp2Protocol",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.GrpcProtocol",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.HttpContextFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.RestProtocol",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.TripleHttp2Protocol",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.TriplePathResolver",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.TriplePingPongHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.TripleProtocol",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.TripleScopeModelInitializer",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.compressor.Bzip2",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.compressor.Gzip",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.compressor.Snappy",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.h12.HttpRequestHandlerMapping",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.h12.grpc.GrpcCompositeCodecFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.h12.grpc.GrpcRequestHandlerMapping",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.h12.http2.Http2ClientStreamFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.h12.http2.Http2TripleClientStream$1"
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.h3.Http3ClientStreamFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.argument.CompositeArgumentResolver",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.argument.GeneralTypeConverter",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.argument.MiscArgumentResolver",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.filter.RestExtensionExecutionFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.mapping.ContentNegotiator",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.mapping.DefaultRequestMappingRegistry",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.mapping.RestRequestHandlerMapping",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.jaxrs.BeanParamArgumentResolver"
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.jaxrs.BodyArgumentResolver"
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.jaxrs.CookieParamArgumentResolver"
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.jaxrs.FallbackArgumentResolver"
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.jaxrs.FormArgumentResolver"
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.jaxrs.FormParamArgumentResolver"
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.jaxrs.HeaderParamArgumentResolver"
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.jaxrs.JaxrsMiscArgumentResolver"
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.jaxrs.JaxrsRequestMappingResolver"
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.jaxrs.MatrixParamArgumentResolver"
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.jaxrs.PathParamArgumentResolver"
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.jaxrs.QueryParamArgumentResolver"
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.servlet.ServletArgumentResolver"
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.servlet.ServletHttpMessageAdapterFactory"
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.spring.CookieValueArgumentResolver",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.spring.FallbackArgumentResolver",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.spring.MatrixVariableArgumentResolver",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.spring.ModelAttributeArgumentResolver",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.spring.PathVariableArgumentResolver",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.spring.RequestAttributeArgumentResolver",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.spring.RequestBodyArgumentResolver",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.spring.RequestHeaderArgumentResolver",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.spring.RequestParamArgumentResolver",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.spring.RequestPartArgumentResolver",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.spring.SpringMiscArgumentResolver",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.rest.support.spring.SpringMvcRequestMappingResolver",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.route.DefaultRequestRouter",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.transport.TripleCommandOutBoundHandler",
  "methods":[{"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.transport.TripleGoAwayHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.transport.TripleHttp2ClientResponseHandler",
  "methods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"org.apache.dubbo.rpc.protocol.tri.transport.TripleTailHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.proxy.jdk.JdkProxyFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.proxy.wrapper.StubProxyFactoryWrapper",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.ProxyFactory"] }, {"name":"setProtocol","parameterTypes":["org.apache.dubbo.rpc.Protocol"] }]
},
{
  "name":"org.apache.dubbo.rpc.service.Destroyable",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.dubbo.rpc.service.EchoService",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.dubbo.rpc.service.EchoServiceDetector",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.service.GenericService",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.dubbo.rpc.service.GenericServiceDetector",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.rpc.stub.StubProxyFactory",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.rpc.support.MockProtocol",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.security.cert.CertDeployerListener",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.security.cert.CertScopeModelInitializer",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.security.cert.DubboCertProvider",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.FrameworkModel"] }]
},
{
  "name":"org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.apache.dubbo.spring.boot.autoconfigure.DubboListenerAutoConfiguration",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.apache.dubbo.spring.boot.autoconfigure.DubboListenerAutoConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.apache.dubbo.spring.boot.autoconfigure.DubboListenerAutoConfiguration$$SpringCGLIB$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.apache.dubbo.spring.boot.autoconfigure.DubboListenerAutoConfiguration$$SpringCGLIB$$2",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.dubbo.spring.boot.autoconfigure.DubboTriple3AutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.dubbo.spring.boot.context.DubboApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.spring.boot.context.event.AwaitingNonWebApplicationListener",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"forPayload","parameterTypes":["java.util.function.Consumer"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"supportsEventType","parameterTypes":["java.lang.Class"] }, {"name":"supportsSourceType","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.apache.dubbo.spring.boot.context.event.DubboConfigBeanDefinitionConflictApplicationListener",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"forPayload","parameterTypes":["java.util.function.Consumer"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]
},
{
  "name":"org.apache.dubbo.spring.boot.context.event.WelcomeLogoApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.spring.boot.env.DubboDefaultPropertiesEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.spring.security.filter.AuthenticationExceptionTranslatorFilter"
},
{
  "name":"org.apache.dubbo.spring.security.filter.ContextHolderAuthenticationPrepareFilter"
},
{
  "name":"org.apache.dubbo.spring.security.filter.ContextHolderAuthenticationResolverFilter"
},
{
  "name":"org.apache.dubbo.spring.security.filter.ContextHolderParametersSelectedTransferFilter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.dubbo.spring.security.model.SecurityScopeModelInitializer"
},
{
  "name":"org.apache.dubbo.tracing.filter.ObservationReceiverFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.dubbo.tracing.filter.ObservationSenderFilter",
  "queryAllPublicMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.apache.dubbo.rpc.model.ApplicationModel"] }]
},
{
  "name":"org.apache.dubbo.validation.filter.ValidationFilter",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.jasper.servlet$JspServlet"
},
{
  "name":"org.apache.jasper.servlet.JspServlet"
},
{
  "name":"org.apache.logging.log4j.core.impl$Log4jContextFactory"
},
{
  "name":"org.apache.logging.log4j.core.impl.Log4jContextFactory"
},
{
  "name":"org.apache.logging.log4j.message.DefaultFlowMessageFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.message.ParameterizedMessageFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.spi.ExtendedLogger"
},
{
  "name":"org.apache.logging.slf4j.SLF4JLoggerContextFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.slf4j.SLF4JProvider"
},
{
  "name":"org.apache.tomcat.util.net.AbstractEndpoint",
  "methods":[{"name":"setBindOnInit","parameterTypes":["boolean"] }]
},
{
  "name":"org.apache.tomcat.util.net.NioEndpoint",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.tomcat.websocket.server.WsFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.eclipse.core.runtime$FileLocator"
},
{
  "name":"org.eclipse.core.runtime.FileLocator"
},
{
  "name":"org.graalvm.nativeimage.ImageInfo",
  "methods":[{"name":"inImageCode","parameterTypes":[] }]
},
{
  "name":"org.jboss.logging$Logger"
},
{
  "name":"org.jboss.logging.Logger"
},
{
  "name":"org.jboss.resteasy.annotations.Body"
},
{
  "name":"org.jboss.resteasy.annotations.Form"
},
{
  "name":"org.osgi.framework.FrameworkUtil"
},
{
  "name":"org.robolectric.Robolectric"
},
{
  "name":"org.slf4j.Logger"
},
{
  "name":"org.slf4j.bridge.SLF4JBridgeHandler"
},
{
  "name":"org.slf4j.helpers.Log4jLoggerFactory"
},
{
  "name":"org.slf4j.impl.StaticLoggerBinder"
},
{
  "name":"org.slf4j.spi.LocationAwareLogger"
},
{
  "name":"org.springframework.aop.framework.AopInfrastructureBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.aop.framework.ProxyConfig",
  "allDeclaredFields":true,
  "methods":[{"name":"setProxyTargetClass","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.aop.framework.ProxyProcessorSupport",
  "allDeclaredFields":true,
  "methods":[{"name":"setOrder","parameterTypes":["int"] }]
},
{
  "name":"org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.aot.hint.annotation.Reflective",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.Aware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanClassLoaderAware",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanFactoryAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanNameAware",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.DisposableBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.FactoryBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.InitializingBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.Autowired",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.Qualifier",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.config.BeanFactoryPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.BeanPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.support.MergedBeanDefinitionPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"resetBeanDefinition","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.ClearCachesApplicationListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.SpringApplication",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.SpringBootConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.ansi.AnsiOutput$Enabled",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackage",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureAfter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureBefore",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureOrder",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.BackgroundPreinitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.EnableAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.SpringBootApplication",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnNotWarDeployment",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.info.ProjectInfoProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.netty.NettyProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.netty.NettyProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setPort","parameterTypes":["java.lang.Integer"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties","org.springframework.boot.autoconfigure.web.WebProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ListableBeanFactory"] }, {"name":"flashMapManager","parameterTypes":[] }, {"name":"localeResolver","parameterTypes":[] }, {"name":"mvcContentNegotiationManager","parameterTypes":[] }, {"name":"mvcConversionService","parameterTypes":[] }, {"name":"mvcValidator","parameterTypes":[] }, {"name":"requestMappingHandlerAdapter","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager","org.springframework.format.support.FormattingConversionService","org.springframework.validation.Validator"] }, {"name":"setResourceLoader","parameterTypes":["org.springframework.core.io.ResourceLoader"] }, {"name":"themeResolver","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.WebProperties","org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties","org.springframework.beans.factory.ListableBeanFactory","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, {"name":"addResourceHandlers","parameterTypes":["org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"] }, {"name":"configureAsyncSupport","parameterTypes":["org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"] }, {"name":"configureContentNegotiation","parameterTypes":["org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"] }, {"name":"configureMessageConverters","parameterTypes":["java.util.List"] }, {"name":"configurePathMatch","parameterTypes":["org.springframework.web.servlet.config.annotation.PathMatchConfigurer"] }, {"name":"getMessageCodesResolver","parameterTypes":[] }, {"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.autoconfigure.web.WebProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.builder.ParentContextCloserApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }]
},
{
  "name":"org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.ContextIdApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.FileEncodingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.AnsiOutputApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory","org.springframework.boot.ConfigurableBootstrapContext"] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataNotFoundAction",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataProperties",
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"this$0"}],
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLocationResolver",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory","org.springframework.boot.context.properties.bind.Binder","org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.boot.context.event.EventPublishingRunListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.SpringApplication","java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.context.logging.LoggingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationProperties",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationProperties",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.bind.Name",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.PropertiesPropertySourceLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }]
},
{
  "name":"org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.YamlPropertySourceLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.loader.JarLauncher"
},
{
  "name":"org.springframework.boot.loader.LaunchedURLClassLoader",
  "methods":[{"name":"clearCache","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.loader.Launcher"
},
{
  "name":"org.springframework.boot.loader.MainMethodRunner"
},
{
  "name":"org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.java.JavaLoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.logging.logback.ColorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.LogbackLoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
},
{
  "name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.error.ErrorController",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.server.Encoding",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.ApplicationContextAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.EnvironmentAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ResourceLoaderAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.Bean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ComponentScan",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Conditional",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Configuration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Import",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ImportRuntimeHints",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Lazy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Primary",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Scope",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.event.SimpleApplicationEventMulticaster"
},
{
  "name":"org.springframework.context.event.SmartApplicationListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getListenerId","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.support.AbstractApplicationContext"
},
{
  "name":"org.springframework.core.Ordered",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.PriorityOrdered",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.annotation.AliasFor",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.annotation.Order",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter"
},
{
  "name":"org.springframework.http.converter.json.GsonHttpMessageConverter"
},
{
  "name":"org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"
},
{
  "name":"org.springframework.security.core.context.SecurityContextHolder"
},
{
  "name":"org.springframework.stereotype.Component",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Controller",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Indexed",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.CookieValue"
},
{
  "name":"org.springframework.web.bind.annotation.ExceptionHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.GetMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.Mapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.MatrixVariable"
},
{
  "name":"org.springframework.web.bind.annotation.ModelAttribute"
},
{
  "name":"org.springframework.web.bind.annotation.PathVariable"
},
{
  "name":"org.springframework.web.bind.annotation.RequestAttribute"
},
{
  "name":"org.springframework.web.bind.annotation.RequestBody"
},
{
  "name":"org.springframework.web.bind.annotation.RequestHeader"
},
{
  "name":"org.springframework.web.bind.annotation.RequestMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RequestParam"
},
{
  "name":"org.springframework.web.bind.annotation.RequestPart"
},
{
  "name":"org.springframework.web.bind.annotation.ResponseBody",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RestController",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.context.ConfigurableWebApplicationContext"
},
{
  "name":"org.springframework.web.context.ServletContextAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.context.WebApplicationContext"
},
{
  "name":"org.springframework.web.context.request.WebRequest"
},
{
  "name":"org.springframework.web.filter.CharacterEncodingFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.filter.FormContentFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.filter.GenericFilterBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.filter.OncePerRequestFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.filter.RequestContextFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive$DispatcherHandler"
},
{
  "name":"org.springframework.web.reactive.DispatcherHandler"
},
{
  "name":"org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setConfigurers","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"beanNameHandlerMapping","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, {"name":"defaultServletHandlerMapping","parameterTypes":[] }, {"name":"getApplicationContext","parameterTypes":[] }, {"name":"getServletContext","parameterTypes":[] }, {"name":"handlerExceptionResolver","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager"] }, {"name":"handlerFunctionAdapter","parameterTypes":[] }, {"name":"httpRequestHandlerAdapter","parameterTypes":[] }, {"name":"mvcHandlerMappingIntrospector","parameterTypes":[] }, {"name":"mvcPathMatcher","parameterTypes":[] }, {"name":"mvcPatternParser","parameterTypes":[] }, {"name":"mvcResourceUrlProvider","parameterTypes":[] }, {"name":"mvcUriComponentsContributor","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"] }, {"name":"mvcUrlPathHelper","parameterTypes":[] }, {"name":"mvcViewResolver","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager"] }, {"name":"requestMappingHandlerMapping","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager","org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, {"name":"resourceHandlerMapping","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager","org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, {"name":"routerFunctionMapping","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }, {"name":"simpleControllerHandlerAdapter","parameterTypes":[] }, {"name":"viewControllerHandlerMapping","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, {"name":"viewNameTranslator","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"addArgumentResolvers","parameterTypes":["java.util.List"] }, {"name":"addCorsMappings","parameterTypes":["org.springframework.web.servlet.config.annotation.CorsRegistry"] }, {"name":"addInterceptors","parameterTypes":["org.springframework.web.servlet.config.annotation.InterceptorRegistry"] }, {"name":"addReturnValueHandlers","parameterTypes":["java.util.List"] }, {"name":"addViewControllers","parameterTypes":["org.springframework.web.servlet.config.annotation.ViewControllerRegistry"] }, {"name":"configureDefaultServletHandling","parameterTypes":["org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"] }, {"name":"configureHandlerExceptionResolvers","parameterTypes":["java.util.List"] }, {"name":"configureViewResolvers","parameterTypes":["org.springframework.web.servlet.config.annotation.ViewResolverRegistry"] }, {"name":"extendHandlerExceptionResolvers","parameterTypes":["java.util.List"] }, {"name":"extendMessageConverters","parameterTypes":["java.util.List"] }, {"name":"getValidator","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler",
  "methods":[{"name":"handle","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
  "methods":[{"name":"handle","parameterTypes":[] }]
},
{
  "name":"org.yaml.snakeyaml.Yaml"
},
{
  "name":"reactor.core.publisher$Flux"
},
{
  "name":"reactor.core.publisher.Flux"
},
{
  "name":"reactor.tools.agent$ReactorDebugAgent"
},
{
  "name":"reactor.tools.agent.ReactorDebugAgent"
},
{
  "name":"sun.misc.Unsafe",
  "allDeclaredFields":true,
  "methods":[{"name":"arrayBaseOffset","parameterTypes":["java.lang.Class"] }, {"name":"arrayIndexScale","parameterTypes":["java.lang.Class"] }, {"name":"copyMemory","parameterTypes":["long","long","long"] }, {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] }, {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, {"name":"getBoolean","parameterTypes":["java.lang.Object","long"] }, {"name":"getByte","parameterTypes":["long"] }, {"name":"getByte","parameterTypes":["java.lang.Object","long"] }, {"name":"getDouble","parameterTypes":["java.lang.Object","long"] }, {"name":"getFloat","parameterTypes":["java.lang.Object","long"] }, {"name":"getInt","parameterTypes":["long"] }, {"name":"getInt","parameterTypes":["java.lang.Object","long"] }, {"name":"getLong","parameterTypes":["long"] }, {"name":"getLong","parameterTypes":["java.lang.Object","long"] }, {"name":"getObject","parameterTypes":["java.lang.Object","long"] }, {"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }, {"name":"objectFieldOffset","parameterTypes":["java.lang.reflect.Field"] }, {"name":"putBoolean","parameterTypes":["java.lang.Object","long","boolean"] }, {"name":"putByte","parameterTypes":["long","byte"] }, {"name":"putByte","parameterTypes":["java.lang.Object","long","byte"] }, {"name":"putDouble","parameterTypes":["java.lang.Object","long","double"] }, {"name":"putFloat","parameterTypes":["java.lang.Object","long","float"] }, {"name":"putInt","parameterTypes":["long","int"] }, {"name":"putInt","parameterTypes":["java.lang.Object","long","int"] }, {"name":"putLong","parameterTypes":["long","long"] }, {"name":"putLong","parameterTypes":["java.lang.Object","long","long"] }, {"name":"putObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, {"name":"storeFence","parameterTypes":[] }]
},
{
  "name":"sun.misc.VM"
},
{
  "name":"sun.nio.ch.Net"
},
{
  "name":"sun.nio.ch.SelectorImpl",
  "fields":[{"name":"publicSelectedKeys"}, {"name":"selectedKeys"}]
},
{
  "name":"sun.nio.ch.ServerSocketChannelImpl"
},
{
  "name":"sun.security.provider.DRBG",
  "methods":[{"name":"<init>","parameterTypes":["java.security.SecureRandomParameters"] }]
},
{
  "name":"sun.security.provider.MD5",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
}
]
