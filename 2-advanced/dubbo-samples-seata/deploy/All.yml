# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: dubbo-demo
---
apiVersion: v1
kind: Namespace
metadata:
  name: dubbo-system
---

# Seata-Mysql
apiVersion: v1
kind: ConfigMap
metadata:
  name: seata-mysql-init
  namespace: dubbo-demo
data:
  # Set the properties you want to override, properties not set here will be using the default values
  # check application.properties inside dubbo-admin project for the keys supported
  dubbo-biz.sql: |
    DROP TABLE IF EXISTS `stock_tbl`;
    CREATE TABLE `stock_tbl`
    (
    `id`             int(11) NOT NULL AUTO_INCREMENT,
    `commodity_code` varchar(255) DEFAULT NULL,
    `count`          int(11) DEFAULT 0,
    PRIMARY KEY (`id`),
    UNIQUE KEY (`commodity_code`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;


    DROP TABLE IF EXISTS `order_tbl`;
    CREATE TABLE `order_tbl`
    (
    `id`             int(11) NOT NULL AUTO_INCREMENT,
    `user_id`        varchar(255) DEFAULT NULL,
    `commodity_code` varchar(255) DEFAULT NULL,
    `count`          int(11) DEFAULT 0,
    `money`          int(11) DEFAULT 0,
    PRIMARY KEY (`id`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;


    DROP TABLE IF EXISTS `account_tbl`;
    CREATE TABLE `account_tbl`
    (
    `id`      int(11) NOT NULL AUTO_INCREMENT,
    `user_id` varchar(255) DEFAULT NULL,
    `money`   int(11) DEFAULT 0,
    PRIMARY KEY (`id`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    ---INITIALIZE THE ACCOUNT TABLE
    INSERT INTO account_tbl(`user_id`,`money`) VALUES('ACC_001','1000');
    ---INITIALIZE THE STOCK TABLE
    INSERT INTO stock_tbl(`commodity_code`,`count`) VALUES('STOCK_001','100');

  undo-log.sql: |
    CREATE TABLE IF NOT EXISTS `undo_log`
    (
    `branch_id`     BIGINT       NOT NULL COMMENT 'branch transaction id',
    `xid`           VARCHAR(128) NOT NULL COMMENT 'global transaction id',
    `context`       VARCHAR(128) NOT NULL COMMENT 'undo_log context,such as serialization',
    `rollback_info` LONGBLOB     NOT NULL COMMENT 'rollback info',
    `log_status`    INT(11)      NOT NULL COMMENT '0:normal status,1:defense status',
    `log_created`   DATETIME(6)  NOT NULL COMMENT 'create datetime',
    `log_modified`  DATETIME(6)  NOT NULL COMMENT 'modify datetime',
    UNIQUE KEY `ux_undo_log` (`xid`, `branch_id`)
    ) ENGINE = InnoDB AUTO_INCREMENT = 1 DEFAULT CHARSET = utf8mb4 COMMENT ='AT transaction mode undo table';
    ALTER TABLE `undo_log` ADD INDEX `ix_log_created` (`log_created`);
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: seata-mysql-pv-volume
  namespace: dubbo-demo
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: seata-mysql-pv-claim
  namespace: dubbo-demo
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: seata-mysql
  namespace: dubbo-demo
spec:
  selector:
    matchLabels:
      app: seata-mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: seata-mysql
    spec:
      containers:
        - image: mysql:5.7
          name: seata-mysql
          env:
            - name: MYSQL_DATABASE
              value: seata
            - name: MYSQL_ROOT_PASSWORD
              value: helloworld
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: seata-mysql-persistent-storage
              mountPath: /var/lib/mysql
            - name: seata-mysql-init
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: seata-mysql-persistent-storage
          persistentVolumeClaim:
            claimName: seata-mysql-pv-claim
        - name: seata-mysql-init
          configMap:
            name: seata-mysql-init
---
apiVersion: v1
kind: Service
metadata:
  name: seata-mysql
  namespace: dubbo-demo
spec:
  ports:
    - port: 3306
  selector:
    app: seata-mysql
  clusterIP: None
---

# Seata Server

apiVersion: apps/v1
kind: Deployment
metadata:
  name: seata-server
  namespace: dubbo-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: seata-server
  template:
    metadata:
      labels:
        app: seata-server
    spec:
      containers:
        - name: seata-server
          image: seataio/seata-server:latest
          imagePullPolicy: Always
          ports:
            - name: seata-server
              containerPort: 8091
              protocol: TCP
          env:
            - name: SEATA_PORT
              value: "8091"
            - name: STORE_MODE
              value: "file"
---
apiVersion: v1
kind: Service
metadata:
  name: seata-server
  namespace: dubbo-demo
spec:
  ports:
    - port: 8091
  selector:
    app: seata-server
  clusterIP: None
---

# Account
apiVersion: apps/v1
kind: Deployment
metadata:
  name: seata-account
  namespace: dubbo-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: seata-account
  template:
    metadata:
      labels:
        app: seata-account
    spec:
      containers:
        - name: seata-account
          image: apache/dubbo-demo:dubbo-samples-seata-account_0.0.1
          imagePullPolicy: Always
          ports:
            - name: dubbo
              containerPort: 20881
              protocol: TCP
            - name: qos
              containerPort: 20991
              protocol: TCP
          env:
            - name: JAVA_TOOL_OPTIONS
              value: -Dmysql.address=seata-mysql -Dseata.address=seata-server
---

# Business
apiVersion: apps/v1
kind: Deployment
metadata:
  name: seata-business
  namespace: dubbo-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: seata-business
  template:
    metadata:
      labels:
        app: seata-business
    spec:
      containers:
        - name: seata-business
          image: apache/dubbo-demo:dubbo-samples-seata-business_0.0.1
          imagePullPolicy: Always
          ports:
            - name: dubbo
              containerPort: 20882
              protocol: TCP
            - name: qos
              containerPort: 20992
              protocol: TCP
          env:
            - name: JAVA_TOOL_OPTIONS
              value: -Dmysql.address=seata-mysql -Dseata.address=seata-server
---

# Order
apiVersion: apps/v1
kind: Deployment
metadata:
  name: seata-order
  namespace: dubbo-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: seata-order
  template:
    metadata:
      labels:
        app: seata-order
    spec:
      containers:
        - name: seata-order
          image: apache/dubbo-demo:dubbo-samples-seata-order_0.0.1
          imagePullPolicy: Always
          ports:
            - name: dubbo
              containerPort: 20883
              protocol: TCP
            - name: qos
              containerPort: 20993
              protocol: TCP
          env:
            - name: JAVA_TOOL_OPTIONS
              value: -Dmysql.address=seata-mysql -Dseata.address=seata-server
---

# Stock
apiVersion: apps/v1
kind: Deployment
metadata:
  name: seata-stock
  namespace: dubbo-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: seata-stock
  template:
    metadata:
      labels:
        app: seata-stock
    spec:
      containers:
        - name: seata-stock
          image: apache/dubbo-demo:dubbo-samples-seata-stock_0.0.1
          imagePullPolicy: Always
          ports:
            - name: dubbo
              containerPort: 20884
              protocol: TCP
            - name: qos
              containerPort: 20994
              protocol: TCP
          env:
            - name: JAVA_TOOL_OPTIONS
              value: -Dmysql.address=seata-mysql -Dseata.address=seata-server
---
