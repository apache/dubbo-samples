name: Java CI 11

on:
  pull_request:
    paths:
      - "**"
  push:
    paths:
      - '**'

env:
  JAVA_VER: 11
  FORK_COUNT: 2
  FAIL_FAST: 0
  SHOW_ERROR_DETAIL: 1
  BUILD_OPTS: -U --no-transfer-progress --settings ${{github.workspace}}/.mvn/settings.xml clean package dependency:copy-dependencies -DskipTests
  #multi-version size limit
  VERSIONS_LIMIT: 4
  CANDIDATE_VERSIONS: '
    dubbo.version:2.7.8;
    spring.version:4.3.16.RELEASE,5.3.3;
    spring-boot.version:1.5.13.RELEASE,2.1.1.RELEASE
    '

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK ${{env.JAVA_VER}}
        uses: actions/setup-java@v1
        with:
          java-version: ${{env.JAVA_VER}}
      - name: Build with Maven
        run: |
          ./mvnw $BUILD_OPTS

  prepare_test:
    runs-on: ubuntu-latest
    env:
      JOB_COUNT: 5
    steps:
      - uses: actions/checkout@v1
      - name: Prepare test list
        run: |
          cd test
          bash ./prepare-test.sh
      - name: Upload test list
        uses: actions/upload-artifact@v2
        with:
          name: test-list
          path: test/jobs

  test_result:
    #testjob size MUST equals to 'JOB_COUNT' of prepare_test job
    needs: [testjob_1,testjob_2,testjob_3,testjob_4,testjob_5]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Download test result
        uses: actions/download-artifact@v2
        with:
          name: test-result
          path: test/jobs/
      - name: Merge test result
        run: ./test/merge-test-results.sh

  testjob_1:
    needs: prepare_test
    runs-on: ubuntu-latest
    env:
      TEST_CASE_FILE: jobs/${{github.job}}.txt
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v1
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/test/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Download test list
        uses: actions/download-artifact@v2
        with:
          name: test-list
          path: test/jobs/
      - name: Set up JDK ${{env.JAVA_VER}}
        uses: actions/setup-java@v1
        with:
          java-version: ${{env.JAVA_VER}}
      - name: Build test image
        run: |
          cd test && bash ./build-test-image.sh
      - name: Run tests
        run: cd test && bash ./run-tests.sh
      - name: Upload test result
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-result
          path: test/jobs/*-result*

  testjob_2:
    needs: prepare_test
    runs-on: ubuntu-latest
    env:
      TEST_CASE_FILE: jobs/${{github.job}}.txt
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v1
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/test/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Download test list
        uses: actions/download-artifact@v2
        with:
          name: test-list
          path: test/jobs/
      - name: Set up JDK ${{env.JAVA_VER}}
        uses: actions/setup-java@v1
        with:
          java-version: ${{env.JAVA_VER}}
      - name: Build test image
        run: |
          cd test && bash ./build-test-image.sh
      - name: Run tests
        run: cd test && bash ./run-tests.sh
      - name: Upload test result
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-result
          path: test/jobs/*-result*

  testjob_3:
    needs: prepare_test
    runs-on: ubuntu-latest
    env:
      TEST_CASE_FILE: jobs/${{github.job}}.txt
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v1
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/test/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Download test list
        uses: actions/download-artifact@v2
        with:
          name: test-list
          path: test/jobs/
      - name: Set up JDK ${{env.JAVA_VER}}
        uses: actions/setup-java@v1
        with:
          java-version: ${{env.JAVA_VER}}
      - name: Build test image
        run: |
          cd test && bash ./build-test-image.sh
      - name: Run tests
        run: cd test && bash ./run-tests.sh
      - name: Upload test result
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-result
          path: test/jobs/*-result*

  testjob_4:
    needs: prepare_test
    runs-on: ubuntu-latest
    env:
      TEST_CASE_FILE: jobs/${{github.job}}.txt
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v1
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/test/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Download test list
        uses: actions/download-artifact@v2
        with:
          name: test-list
          path: test/jobs/
      - name: Set up JDK ${{env.JAVA_VER}}
        uses: actions/setup-java@v1
        with:
          java-version: ${{env.JAVA_VER}}
      - name: Build test image
        run: |
          cd test && bash ./build-test-image.sh
      - name: Run tests
        run: cd test && bash ./run-tests.sh
      - name: Upload test result
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-result
          path: test/jobs/*-result*

  testjob_5:
    needs: prepare_test
    runs-on: ubuntu-latest
    env:
      TEST_CASE_FILE: jobs/${{github.job}}.txt
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v1
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/test/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Download test list
        uses: actions/download-artifact@v2
        with:
          name: test-list
          path: test/jobs/
      - name: Set up JDK ${{env.JAVA_VER}}
        uses: actions/setup-java@v1
        with:
          java-version: ${{env.JAVA_VER}}
      - name: Build test image
        run: |
          cd test && bash ./build-test-image.sh
      - name: Run tests
        run: cd test && bash ./run-tests.sh
      - name: Upload test result
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-result
          path: test/jobs/*-result*

